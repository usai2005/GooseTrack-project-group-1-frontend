{"version":3,"file":"static/js/904.aaf57aeb.chunk.js","mappings":"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","sources":["components/Form/FormUser/consts/FormUserSchema.js","components/Form/FormUser/FormField/FormField.styled.jsx","components/Form/FormUser/FormField/FormField.js","components/Form/FormUser/consts/FormUserInputs.js","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.styled.jsx","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.js","components/Form/FormUser/FormUser.styled.jsx","components/Form/FormUser/DatePickerFormUser/DatePickerFormUser.js","components/Form/FormUser/FormUser.js","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\nconst validFileExtensions = {\n  image: ['jpg', 'gif', 'png', 'jpeg', 'svg', 'webp'],\n};\n\nconst isValidFileType = value => {\n  if (typeof value === 'string' && value.includes('image')) return true;\n  if (value.length === 0) return true;\n  const fileName = value[0].name.toLowerCase();\n  return validFileExtensions['image'].indexOf(fileName.split('.').pop()) > -1;\n};\n\nexport const FormUserSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .max(16, 'Name may contain only 16 characters'),\n  phone: Yup.string().matches(phoneRegExp, {\n    message:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    excludeEmptyString: true,\n  }),\n  birthday: Yup.date('Invalid date format'),\n  skype: Yup.string().max(16, 'Skype may contain only 16 characters'),\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('This field is required'),\n  avatarURL: Yup.mixed().test('is-valid-type', 'Ivalid image type', value => {\n    return value === '' || isValidFileType(value);\n  }),\n});\n","import styled from 'styled-components';\n\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n};\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'InterRegular';\n  font-size: 14px;\n  line-height: 15px;\n\n  color: ${props => props.theme.variable.bgReversLabel};\n`;\n\nexport const Input = styled.input`\n  font-family: 'InterSemiBold';\n  font-size: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n  outline: none;\n  border: 1px solid;\n  border-radius: 8px;\n  border-color: ${props => props.theme.variable.borderProfileColor};\n  color: ${props => props.theme.variable.text};\n  padding: 0.875rem;\n\n  height: 42px;\n\n  width: 299px;\n\n\n\n  ${viewport.mob} {\n    height: 46px;\n\n    width: 354px;\n  \n  }\n\n  &::placeholder {\n    font-family: 'InterRegularr';\n    font-size: 16px;\n    line-height: 18px;\n    color: 'inherit';\n  }\n\n  &[type='time']::-webkit-calendar-picker-indicator {\n    background: none;\n  }\n\n\n`;\n","import PropTypes from 'prop-types';\n\nimport { Label, Input } from './FormField.styled';\n\n\nexport const FormField = ({\n  id,\n  inputName,\n  type,\n  placeholder,\n  label,\n  register,\n}) => {\n  return (\n    <div>\n      <Label htmlFor={id}>{label}</Label>\n      <Input\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        {...register(inputName)}\n      />\n    </div>\n  );\n};\n\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n};","import { nanoid } from '@reduxjs/toolkit';\n\nexport const userFormInputs = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nanoid(),\n    label: 'User Name',\n    placeholder: 'Enter your name',\n  },\n  {\n    inputName: 'phone',\n    type: 'tel',\n    id: nanoid(),\n    label: 'Phone',\n    placeholder: 'Enter phone',\n  },\n  {\n    inputName: 'birthday',\n    type: 'date',\n    id: nanoid(),\n    label: 'Birthday',\n    placeholder: 'DD/MM/YYYY',\n  },\n  {\n    inputName: 'skype',\n    type: 'string',\n    id: nanoid(),\n    label: 'Skype',\n    placeholder: 'Add a skype number',\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: nanoid(),\n    label: 'Email',\n    placeholder: 'Enter email',\n  },\n];\n\nexport const userAvatarInput = {\n  inputName: 'avatarURL',\n  type: 'file',\n  id: nanoid(),\n  label: '',\n  placeholder: '',\n};\n","import styled from 'styled-components';\n\nexport const  DefaultAvatarSvg = styled.svg`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n`;\n\n\n\n\nexport const  PlusSvgOnAvatar = styled.svg`\nposition: absolute;\nborder-radius: 50%;\nbackground-color: #3e85f3;\ncontent: '+';\nstroke: #FFFFFF;\nfont-family: Inter;\nfont-size: 18px;\nline-height: 1.375rem;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 14px;\nheight: 14px;\ntop: 1.4375rem;\nright: 0.875rem;\npointer-events: none;\n\n@media (min-width: 768px) {\n  width: 1.5rem;\n  height: 1.5rem;\n\n  top: 9.0625rem;\n  right: 1.5rem;\n  pointer-events: none;\n\n\n\n  @media (min-width: 1087px) {\n    top: 10.3125rem;\n    pointer-events: none;\n  }\n\n}\n`;\n\n\nexport const UserAvatarWrapper = styled.div`\n  position: relative;\n  text-align: center;\n  margin-right:60px\n`;\n\nexport const Label = styled.label`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n\n  margin-bottom: 1.125rem;\n  margin-top: -37px;\n\n  border-radius: 50%;\n  border: 2px solid #3e85f3;\n  background-color: none;\n  overflow: hidden;\n\n  & img {\n    object-fit: cover;\n    height: 100%;\n    width: 100%;\n  }\n\n  @media (min-width: 768px) {\n    margin-top: 40px;\n    width: 124px;\n    height: 124px;\n  }\n\n  @media (min-width: 1087px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const HiddenInput = styled.input`\n  position: absolute;\n  top: 1.4375rem;\n  right: 0.875rem;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 0.875rem;\n  height: 0.875rem;\n  border: 0;\n  padding: 0;\n\n  border-radius: 50%;\n  background-color: #3e85f3;\n\n  :before {\n    position: absolute;\n    content: '+';\n\n    width: 14px;\n    height: 14px;\n\n    font-size: 0.9375rem;\n    line-height: 0.8125rem;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* color: ; */\n    background-color: #3e85f3;\n  }\n\n  @media (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;\n\n    top: 9.0625rem;\n    right: 1.5rem;\n\n    :before {\n      position: absolute;\n      content: '+';\n      /* color: ; */\n      font-family: Inter;\n      font-size: 18px;\n      line-height: 1.375rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 24px;\n      height: 24px;\n      /* background-color: ; */\n    }\n  }\n\n  @media (min-width: 1087px) {\n    top: 10.3125rem;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  position: relative;\n  padding-top: 10px;\n  > h3 {\n    color: ${props => props.theme.variable.text};\n    font-family: InterBold;\n    font-size: 18px;\n    line-height: 1.125rem;\n\n    margin-bottom: 0.25rem;\n\n    @media (min-width: 768px) {\n      font-size: 1.125rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  > p {\n    color: ${props => props.theme.variable.textAvatar};\n    font-family: InterSemiBold;\n    font-size: 14px;\n    line-height: 0.875rem;\n\n    @media (min-width: 768px) {\n      font-size: 0.875rem;\n      line-height: 1.125rem;\n    }\n  }\n`;\n","import sprite from '../../../../images/icons.svg';\n\nimport {\n  HiddenInput,\n  Label,\n  DefaultAvatarSvg,\n  PlusSvgOnAvatar,\n  UserAvatarWrapper,\n  InfoWrapper,\n} from './AvatarFieldFormUser.styled';\n\nconst setFileUrl = (file, cbSetFileUrl) => {\n  if (!file) return cbSetFileUrl(null);\n  const fileReader = new FileReader();\n  fileReader.readAsDataURL(file);\n  fileReader.onload = () => {\n    cbSetFileUrl(fileReader.result);\n  };\n};\n\nexport const AvatarFieldFormUser = ({\n  userName,\n  inputName,\n  type,\n  id,\n  currentAvatarURL,\n  setCurrentAvatarURL,\n  setIsDisabled,\n  register,\n}) => {\n  return (\n    <UserAvatarWrapper>\n      <Label htmlFor={id}>\n        {!currentAvatarURL ? (\n          <p>\n            <DefaultAvatarSvg>\n            <use href={`${sprite}#icon-user`} />\n            </DefaultAvatarSvg>\n          </p>\n        ) : (\n          <img src={currentAvatarURL} alt=\"user_photo\" />\n        )}\n      </Label>\n      <HiddenInput\n        {...register(inputName)}\n        id={id}\n        type={type}\n        accept=\"image/*\"\n        onChange={e => {\n          const file = e.target.files[0];\n          setFileUrl(file, setCurrentAvatarURL);\n          setIsDisabled(false);\n          return e;\n        }}\n      />\n              <p>\n            <PlusSvgOnAvatar>\n             <use href={sprite + '#icon-plus'}></use>\n            {/* <use href={`${sprite}#icon-plus`} /> */}\n            </PlusSvgOnAvatar>\n          </p>\n      <InfoWrapper>\n        <h3>{userName}</h3>\n        <p>User</p>\n      </InfoWrapper>\n    </UserAvatarWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n};\n\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items:center;\n\n\n  border-radius: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n\n  & > button {\n    padding: 14px 50px;\n    margin-top: 0px;\n    margin-bottom: 40px;\n\n    @media (min-width: 768px) {\n      padding: 15px 84px;\n    }\n\n    @media (min-width: 1087px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const FormBody = styled.div`\n  width: 100%;\n  display: grid;\n  padding: 0px 18px;\n  margin: 40px 0;\n  gap: 18px;\n\n  \n\n  @media (min-width: 768px) {\n    max-width: 354px;\n    padding: 0px;\n  }\n\n  @media (min-width: 1078px) {\n    max-width: 758px;\n\n    grid-template-columns: 1fr 1fr;\n    column-gap: 50px;\n    row-gap: 24px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1080px;\n    padding-left: 164px;\n    padding-right: 164px;\n    margin-top: 44px;\n    margin-bottom: 88px;\n  }\n\n  @media (min-width: 2560px) {\n    max-width: 1440px;\n    padding: 50px;\n    grid-template-columns: repeat(auto-fit, minmax(345px, 1fr));\n  }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  font-family: 'Inter', sans-serif;\n  margin-right: 8px;\n  & .react-datepicker__today-button {\n    border: none;\n    background: none;\n  }\n  & input {\n    display: inline;\n\n    text-align: center;\n    padding: 0;\n    background-color: #3e85f3;\n    outline: none;\n    border: none;\n    border-radius: 8px;\n    height: 30px;\n\n    width: 140px; ///\n\n    color: white;\n    text-transform: uppercase;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: calc(14 / 18);\n  }\n  & .react-datepicker {\n    background-color: #3e85f3;\n    color: white;\n    border-radius: 16px;\n  }\n  & .react-datepicker__header {\n    background-color: #3e85f3;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__triangle::after,\n  & .react-datepicker__triangle::before {\n    background-color: #3e85f3;\n    display: none;\n  }\n  & .react-datepicker__current-month {\n    font-size: 16px;\n    margin-bottom: 18px;\n  }\n  & .react-datepicker__day-name,\n  & .react-datepicker__day.react-datepicker__day--outside-month {\n    color: rgba(255, 255, 255, 0.5);\n  }\n\n  & .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  & .react-datepicker__current-month {\n    color: white;\n  }\n  & .react-datepicker__week:last-of-type {\n    margin-bottom: 0;\n  }\n  & .react-datepicker__week:not(:last-of-type) {\n    margin-bottom: 7px;\n  }\n  & .react-datepicker__day.react-datepicker__day--selected {\n    border-radius: 50%;\n    color: #3e85f3;\n\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__day.react-datepicker__day--today {\n    background-color: #fff;\n    border-radius: 50%;\n    color: #3e85f3;\n    font-weight: 500;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    border: none;\n    background: none;\n  }\n  & .react-datepicker__day {\n    color: inherit;\n    font-size: 14px;\n  }\n`;\n// export const ControlWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   margin-bottom: 18px;\n// `;\n\nexport const FormUserButton = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: InterRegular;\n  font-size: 14px;\n  width: 262px;\n  height: 48px;\n  padding: 15px, 83px;\n  background-color: ${props => props.theme.variable.buttonBg};\n  border-radius: 16px;\n  color: #fff;\n\n  &:disabled {\n    background-color: rgb(163, 168, 173);\n    color: ${props => props.theme.variable.btndisActive};\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.variable.btnColorActive};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n`;\n\n\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'InterRegular';\n  font-size: 14px;\n  line-height: 15px;\n\n  color: ${props => props.theme.variable.bgReversLabel};\n`;\n\nexport const DatePickerFormUserWrapper = styled.div`\n  font-family: 'Inter', sans-serif;\n  margin-right: 8px;\n  & .react-datepicker__today-button {\n    border: none;\n    background: none;\n  }\n  & input {\n    display: inline;\n\n    font-family: 'InterSemiBold';\n    font-size: 16px;\n    background-color: ${props => props.theme.variable.secondaryBg};\n    outline: none;\n    border: 1px solid ;\n    border-color: ${props => props.theme.variable.borderProfileColor};\n    border-radius: 8px;\n\n\n    text-align: center;\n    padding: 0;\n\n\n    height: 42px;\n\n    width: 299px;\n\n    color: white;\n    text-transform: uppercase;\n\n    font-weight: 700;\n    line-height: calc(14 / 18);\n\n    ${viewport.mob} {\n      height: 46px;\n  \n      width: 354px;\n    \n    }\n  }\n\n  & .react-datepicker {\n    background-color: #3e85f3;\n    color: white;\n    border-radius: 16px;\n  }\n  & .react-datepicker__header {\n    background-color: #3e85f3;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__triangle::after,\n  & .react-datepicker__triangle::before {\n    background-color: #3e85f3;\n    display: none;\n  }\n  & .react-datepicker__current-month {\n    font-size: 16px;\n    margin-bottom: 18px;\n  }\n  & .react-datepicker__day-name,\n  & .react-datepicker__day.react-datepicker__day--outside-month {\n    color: rgba(255, 255, 255, 0.5);\n  }\n\n  & .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  & .react-datepicker__current-month {\n    color: white;\n  }\n  & .react-datepicker__week:last-of-type {\n    margin-bottom: 0;\n  }\n  & .react-datepicker__week:not(:last-of-type) {\n    margin-bottom: 7px;\n  }\n  & .react-datepicker__day.react-datepicker__day--selected {\n    border-radius: 50%;\n    color: #3e85f3;\n\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__day.react-datepicker__day--today {\n    background-color: #fff;\n    border-radius: 50%;\n    color: #3e85f3;\n    font-weight: 500;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    border: none;\n    background: none;\n  }\n  & .react-datepicker__day {\n    color: inherit;\n    font-size: 14px;\n  }\n\n`;\n\n\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n\n  ${viewport.mob} {\n    margin-bottom: 18px;\n  }\n`;\n\nexport const Controls = styled.button`\ndisplay:none;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 30px;\n  background-color: ${props => props.theme.variable.CalendarLinkColor};\n  border: ${props => props.theme.variable.borderColorWeekCalendar};\n  color: ${props => props.theme.variable.calendarTextColor};\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.variable.mainBackgroundColor};\n    color: ${({ theme }) => theme.variable.activeArrowColor};\n  }\n\n  @media (min-width: 768px) {\n    width: 38px;\n  }\n  &:first-of-type {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right-width: 0.5px;\n  }\n  &:last-of-type {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n    border-left-width: 0.5px;\n  }\n`;\n","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { format } from 'date-fns';\n\nexport  const DatePickerFormUser = ( {setFormBirthday}\n\n  ) => {\n\n\n    return (\n        <>\n          <ReactDatePicker\n          onChange = {value => {\n            setFormBirthday((format(value, 'yyyy-MM-dd')))\n            console.log(\"Info value\")\n            console.log(value)\n            console.log(\"Info value\")\n          }}\n            // selected={date}\n            // onChange={value => {\n            //   if (periodType === 'month') {\n            //     navigate(`${periodType}/${format(value, 'yyyy-MM-dd')}`, {});\n            //   } else {\n            //     navigate(`${periodType}/${format(value, 'yyyy-MM-dd')}`, {});\n            //   }\n            // }}\n            calendarStartDay={1}\n            // dateFormat={periodType === 'month' ? 'MMMM yyyy' : 'dd MMM yyyy'}\n            closeOnScroll={true}\n            formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n            todayButton=\"Today\"\n            // minDate={new Date(createdAt)}\n          />\n        </>\n      );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}","import { useEffect, useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n// import { useNavigate } from 'react-router-dom';\n\nimport { selectUser } from 'redux/auth/selectors';\n\nimport { updateUser } from '../../../redux/auth/operations';\n\nimport { useForm } from 'react-hook-form';\n\nimport { FormUserSchema } from './consts/FormUserSchema';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// import {  parse} from 'date-fns';\n\nimport { FormField } from './FormField/FormField';\n\nimport { userAvatarInput, userFormInputs } from './consts/FormUserInputs';\n\nimport { AvatarFieldFormUser } from './AvatarFieldFormUser/AvatarFieldFormUser';\n\nimport {\n  Form,\n  FormBody,\n  FormUserButton,\n  Label,\n  DatePickerFormUserWrapper,\n  ControlWrapper,\n} from './FormUser.styled';\n\nimport { DatePickerFormUser } from './DatePickerFormUser/DatePickerFormUser';\n\n// import FormUserButton from '../FormUserButton/FormUserButton';\n\n// const today = new Date();\n\nexport const FormUser = () => {\n  const { name, email, avatarURL, phone, skype, birthday } =\n    useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  const {\n    register: reg,\n    // control,\n    handleSubmit,\n    formState: {\n      // errors,\n      isDirty,\n      dirtyFields,\n    },\n  } = useForm({\n    resolver: yupResolver(FormUserSchema),\n    defaultValues: {\n      name,\n      email,\n      phone: !phone ? '' : phone,\n      birthday: birthday ? birthday : \"1900-01-01\",\n      skype: !skype ? '' : skype,\n      avatarURL: !avatarURL ? '' : avatarURL,\n    },\n  });\n\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [currentAvatarURL, setCurrentAvatarURL] = useState(avatarURL);\n  const [formBirthday, setFormBirthday] = useState(\"1990-01-01\");\n\n\n  console.log(\"Info birthday\")\n  console.log(formBirthday)\n  console.log(\"Info birthday\")\n\n\n\n\n  // const [] = useAuth();\n\n  // const navigate = useNavigate();\n\n  // const formatDate = date => {\n  //   if (typeof date === 'string') return date;\n  //   const y = date.getFullYear();\n  //   const m = date.getMonth();\n  //   const d = date.getDate();\n\n  //   return `${y}-${(m + 1).toString().padStart(2, '0')}-${d\n  //     .toString()\n  //     .padStart(2, '0')}`;\n  // };\n\n  // useEffect(() => {\n  //   if () navigate(0);\n  // }, []);\n  useEffect(() => {\n    if (birthday) {\n      setFormBirthday(birthday);\n    } else {\n    }\n  }, [birthday]);\n\n\n\n  const onSubmit = async data => {\n    const preparedBirthday = formBirthday;\n    const preparedAvatarURL = data.avatarURL === '' ? null : currentAvatarURL;\n    const preparedEmail = data.email === '' ? email : data.email;\n    const preparedPhone = data.phone === '' ? null : data.phone;\n    const preparedSkype = data.skype === '' ? null : data.skype;\n    const preparedData = {\n      ...data,\n      email:preparedEmail,\n      phone: preparedPhone,\n      skype: preparedSkype,\n      birthday: preparedBirthday,\n      avatarURL: preparedAvatarURL,\n    };\n\n\n    \n  console.log(\"Info prepared data\")\n  console.log(preparedData)\n  console.log(\"Info prepared data\")\n\n    dispatch(updateUser(preparedData));\n    setIsDisabled(true);\n  };\n\n  useEffect(() => {\n    const checkIsDirty = () => {\n      if (currentAvatarURL === avatarURL) {\n        if (isDirty) setIsDisabled(false);\n        if (!isDirty) setIsDisabled(true);\n        // if (isError && error?.status !== 413) setIsDisabled(true);\n      }\n    };\n\n    checkIsDirty();\n  }, [isDirty, dirtyFields, currentAvatarURL, avatarURL]);\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)} autoComplete=\"false\">\n      <AvatarFieldFormUser\n        userName={name}\n        // errors={errors}\n        register={reg}\n        currentAvatarURL={currentAvatarURL}\n        setCurrentAvatarURL={setCurrentAvatarURL}\n        setIsDisabled={setIsDisabled}\n        {...userAvatarInput}\n      />\n      <FormBody>\n        {userFormInputs.map(input =>\n          input.type !== 'date' ? (\n            <FormField key={input.id} {...input} register={reg} />\n          ) : (\n            <ControlWrapper>\n              <DatePickerFormUserWrapper>\n                <Label>Birthday</Label>\n                <DatePickerFormUser\n                setFormBirthday = {setFormBirthday}\n\n                  key={input.id}\n                  {...input}\n                  // control={control}\n                  // errors={errors}\n                />\n              </DatePickerFormUserWrapper>\n            </ControlWrapper>\n          )\n        )}\n      </FormBody>\n      <FormUserButton type=\"submit\" function=\"save\" disabled={isDisabled}>\n        Save changes\n      </FormUserButton>\n    </Form>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const PageWrapper = styled.div`\n\n\n  padding: 0 20px 95px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 64px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px 32px;\n  }\n`;","import { FormUser } from '../../components/Form/FormUser/FormUser';\n\nimport { Outlet } from 'react-router-dom';\n \nimport { PageWrapper } from './AccountPage.styled';\n\nexport default function AccountPage() {\n  return (\n    <div>\n      <PageWrapper>\n      <FormUser />\n      <Outlet />\n      </PageWrapper>\n    </div>\n  );\n}"],"names":["nameRegExp","RegExp","validFileExtensions","image","FormUserSchema","Yup","shape","name","required","matches","max","phone","message","excludeEmptyString","birthday","skype","email","avatarURL","test","value","includes","length","fileName","toLowerCase","indexOf","split","pop","isValidFileType","Label","styled","_templateObject","_taggedTemplateLiteral","props","theme","variable","bgReversLabel","Input","_templateObject2","secondaryBg","borderProfileColor","text","FormField","_ref","id","inputName","type","placeholder","label","register","_jsxs","children","_jsx","htmlFor","_objectSpread","userFormInputs","nanoid","userAvatarInput","DefaultAvatarSvg","PlusSvgOnAvatar","UserAvatarWrapper","_templateObject3","_templateObject4","HiddenInput","_templateObject5","InfoWrapper","_templateObject6","textAvatar","AvatarFieldFormUser","userName","currentAvatarURL","setCurrentAvatarURL","setIsDisabled","src","alt","href","concat","sprite","accept","onChange","e","file","cbSetFileUrl","fileReader","FileReader","readAsDataURL","onload","result","setFileUrl","target","files","viewport","Form","FormBody","FormUserButton","buttonBg","btndisActive","btnColorActive","DatePickerFormUserWrapper","ControlWrapper","_templateObject7","_templateObject8","CalendarLinkColor","borderColorWeekCalendar","calendarTextColor","mainBackgroundColor","_ref2","activeArrowColor","DatePickerFormUser","setFormBirthday","_Fragment","ReactDatePicker","format","console","log","calendarStartDay","closeOnScroll","formatWeekDay","nameOfDay","substr","todayButton","FormUser","_useSelector","useSelector","selectUser","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","defaultValues","reg","handleSubmit","_useForm$formState","formState","isDirty","dirtyFields","_useState","useState","_useState2","_slicedToArray","isDisabled","_useState3","_useState4","_useState5","_useState6","formBirthday","useEffect","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","preparedBirthday","preparedAvatarURL","preparedEmail","preparedPhone","preparedSkype","preparedData","wrap","_context","prev","next","updateUser","stop","_x","apply","arguments","autoComplete","map","input","function","disabled","PageWrapper","AccountPage","Outlet"],"sourceRoot":""}