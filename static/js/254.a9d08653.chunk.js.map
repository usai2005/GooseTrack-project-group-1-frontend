{"version":3,"file":"static/js/254.a9d08653.chunk.js","mappings":"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","sources":["components/Form/FormUser/FormField/FormField.styled.jsx","components/Form/FormUser/FormField/FormField.js","components/Form/FormUser/consts/FormUserInputs.js","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.styled.jsx","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.js","components/Form/FormUser/FormUser.styled.jsx","components/Form/FormUser/DatePickerFormUser/DatePickerFormUser.js","components/Form/FormUser/consts/validation/fileTypeValidation.js","components/Form/FormUser/consts/validation/FormUserSchema.js","components/Form/FormUser/consts/validation/regExps.js","components/Form/FormUser/FormUser.js","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const InputFieldThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 299px;\n  height: 64px;\n\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 72px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 12px;\n  color: ${props => props.theme.variable.bgReversLabel};\n\n  line-height: calc(14 / 12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n\n    line-height: calc(18 / 14);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 42px;\n\n  padding: 12px 14px;\n\n  background-color: ${props => props.theme.variable.secondaryBg};\n  outline: none;\n\n  border: 1px solid ${props => props.theme.variable.borderProfileColor};\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 600;\n  color: ${props => props.theme.variable.text};\n  line-height: calc(18 / 14);\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n\n    padding: 14px 18px;\n\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n\n  &::placeholder {\n    /* font-size: 16px;\n    line-height: 18px; */\n    color: 'inherit'; \n\n  &[type='time']::-webkit-calendar-picker-indicator {\n    background: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport InputMask from 'react-input-mask';\n\n// import { ErrorMessage } from '@hookform/error-message';\n\n// import {StyledErrorMessage} from '../consts/styledErrorMessage.styled'\n\nimport { Label, Input, InputFieldThumb } from './FormField.styled';\n\nexport const FormField = ({\n  id,\n  inputName,\n  type,\n  placeholder,\n  label,\n  register,\n  // errors,\n  setIsDisabled,\n}) => {\n  const isPhoneField = inputName === 'phone';\n\n  return (\n    <>\n    <InputFieldThumb>\n      <Label htmlFor={id}>{label}</Label>\n      {isPhoneField ? (\n        <InputMask\n          id={id}\n          mask=\"+99 (999) 999-9999\"\n          maskChar=\"_\"\n          type=\"tel\"\n          placeholder={placeholder}\n          {...register(inputName)}\n          onChange={() => {\n            setIsDisabled(false);\n          }}\n        >\n          {(inputProps) => (\n            <Input {...inputProps} />\n          )}\n        </InputMask>\n      ) : (\n        <Input\n          id={id}\n          type={type}\n          placeholder={placeholder}\n          {...register(inputName)}\n          onChange={() => {\n            setIsDisabled(false);\n          }}\n        />\n      )}\n      \n    </InputFieldThumb>\n    {/* <StyledErrorMessage>\n        <ErrorMessage errors={errors} name={inputName} />\n      </StyledErrorMessage> */}\n</>\n  );\n};\n\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  // errors: PropTypes.any.isRequired,\n};\n","import { nanoid } from '@reduxjs/toolkit';\n\nexport const userFormInputs = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nanoid(),\n    label: 'User Name',\n    placeholder: 'Enter your name',\n  },\n  {\n    inputName: 'birthday',\n    type: 'date',\n    id: nanoid(),\n    label: 'Birthday',\n    placeholder: 'DD/MM/YYYY',\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: nanoid(),\n    label: 'Email',\n    placeholder: 'Enter email',\n  },\n  {\n    inputName: 'phone',\n    type: 'tel',\n    id: nanoid(),\n    label: 'Phone',\n    placeholder: 'Enter phone',\n  },\n  {\n    inputName: 'skype',\n    type: 'string',\n    id: nanoid(),\n    label: 'Skype',\n    placeholder: 'Add a skype number',\n  },\n];\n\nexport const userAvatarInput = {\n  inputName: 'avatarURL',\n  type: 'file',\n  id: nanoid(),\n  label: '',\n  placeholder: '',\n};\n","import styled from 'styled-components';\n\nexport const DefaultAvatarSvg = styled.svg`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n`;\n\nexport const PlusSvgOnAvatar = styled.svg`\n  position: relative;\n  border-radius: 50%;\n  background-color: #3e85f3;\n  content: '+';\n  stroke: #ffffff;\n  font-family: Inter;\n  font-size: 18px;\n  line-height: 1.375rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 14px;\n  height: 14px;\n\n  top: -42px;\n  right: -92px;\n  pointer-events: none;\n\n  @media screen and (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;\n\n    top: -61px;\n    right: -97px;\n    pointer-events: none;\n\n    @media screen and (min-width: 1440px) {\n      top: -61px;\n      pointer-events: none;\n    }\n  }\n`;\n\nexport const UserAvatarWrapper = styled.div`\n  position: relative;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n\n  margin-bottom: 18px;\n  margin-top: -30px;\n\n  border-radius: 50%;\n  border: 2px solid #3e85f3;\n  background-color: none;\n  overflow: hidden;\n  left: 45px;\n\n  & img {\n    object-fit: cover;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 40px;\n    width: 124px;\n    height: 124px;\n\n    left: 17px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const HiddenInput = styled.input`\n  opacity:0;\n  position: relative;\n  top: -29px;\n  left: 92px;\n\n  display: flex;\n  align-items: center;\n\n  width: 12px;\n  height: 12px;\n  border: 0;\n  padding: 0;\n\n  border-radius: 50%;\n  background-color: #3e85f3;\n\n  // :before {\n  //   position: absolute;\n  //   content: '+';\n\n  //   width: 14px;\n  //   height: 14px;\n\n  //   font-size: 0.9375rem;\n  //   line-height: 0.8125rem;\n\n  //   /* color: ; */\n  //   background-color: #3e85f3;\n  // }\n\n  @media screen and (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;\n\n    top: -37px;\n    left: 97px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: -37px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  position: relative;\n  padding-top: 10px;\n  > h3 {\n    color: ${props => props.theme.variable.text};\n    font-family: InterBold;\n    font-size: 18px;\n    line-height: 1.125rem;\n\n    margin-bottom: 0.25rem;\n\n    @media screen and (min-width: 768px) {\n      font-size: 1.125rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  > p {\n    color: ${props => props.theme.variable.textAvatar};\n    font-family: InterSemiBold;\n    font-size: 14px;\n    line-height: 0.875rem;\n\n    @media screen and (min-width: 768px) {\n      font-size: 0.875rem;\n      line-height: 1.125rem;\n    }\n  }\n`;\n","import sprite from '../../../../images/icons.svg';\n\nimport {\n  HiddenInput,\n  Label,\n  DefaultAvatarSvg,\n  PlusSvgOnAvatar,\n  UserAvatarWrapper,\n  InfoWrapper,\n} from './AvatarFieldFormUser.styled';\n\nexport const AvatarFieldFormUser = ({\n  userName,\n  inputName,\n  type,\n  id,\n  avatarURL,\n  currentAvatarURL,\n  setCurrentAvatarURL,\n  setIsDisabled,\n  register,\n}) => {\n  return (\n    <UserAvatarWrapper>\n      <Label htmlFor={id}>\n        {currentAvatarURL ? (\n          <img src={URL.createObjectURL(currentAvatarURL)} alt=\"user_photo\" />\n        ) : avatarURL ? (\n          <img src={avatarURL} alt=\"user_photo\" />\n        ) : (\n          <p>\n            <DefaultAvatarSvg>\n              <use href={`${sprite}#icon-user`} />\n            </DefaultAvatarSvg>\n          </p>\n        )}\n      </Label>\n      <HiddenInput\n        {...register(inputName)}\n        id={id}\n        type={type}\n        accept=\"image/*\"\n        onChange={e => {\n          setCurrentAvatarURL(e.target.files[0]);\n          setIsDisabled(false);\n        }}\n      />\n      <p>\n        <PlusSvgOnAvatar>\n          <use href={sprite + '#icon-plus'}></use>\n        </PlusSvgOnAvatar>\n      </p>\n      <InfoWrapper>\n        <h3>{userName}</h3>\n        <p>User</p>\n      </InfoWrapper>\n    </UserAvatarWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n\n  & > button {\n    padding: 14px 50px;\n    margin-top: 0px;\n    margin-bottom: 40px;\n\n    @media screen and (min-width: 768px) {\n      padding: 15px 84px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const FormBody = styled.div`\n  width: 100%;\n  display: grid;\n  padding: 0px 18px;\n  margin: 40px 0;\n  gap: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    padding: 0px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 758px;\n    padding: 0px;\n\n    grid-auto-flow: column;\n    grid-template-rows: repeat(3, 1fr);\n\n    column-gap: 50px;\n    row-gap: 24px;\n  }\n`;\n\nexport const FormUserButton = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: InterRegular;\n  font-size: 14px;\n  width: 262px;\n  height: 48px;\n  padding: 15px, 83px;\n  background-color: ${props => props.theme.variable.buttonBg};\n  border-radius: 16px;\n  color: #fff;\n\n  &:disabled {\n    background-color: rgb(163, 168, 173);\n    color: ${props => props.theme.variable.btndisActive};\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.variable.btnColorActive};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'InterRegular';\n  font-size: 14px;\n  line-height: 15px;\n\n  color: ${props => props.theme.variable.bgReversLabel};\n`;\n\nexport const DatePickerFormUserWrapper = styled.div`\n  /* font-family: 'Inter', sans-serif;\n  position:relative;\n  margin-right: 8px; */\n  & .react-datepicker__today-button {\n    border: none;\n    background: none;\n    display: none;\n  }\n  & input {\n    font-size: 14px;\n    background-color: ${props => props.theme.variable.secondaryBg};\n    outline: none;\n    border: 1px solid ${props => props.theme.variable.borderProfileColor};\n    border-radius: 8px;\n    padding: 12px 14px;\n    height: 42px;\n    width: 299px;\n\n    color: ${props => props.theme.variable.text};\n    text-transform: uppercase;\n\n    font-weight: 600;\n    line-height: calc(18 / 14);\n\n    @media screen and (min-width: 768px) {\n      height: 46px;\n      width: 354px;\n      padding: 14px 18px;\n      font-size: 16px;\n    }\n\n    &::placeholder {\n      font-size: 16px;\n      line-height: calc(18 / 16);\n      color: rgba(17, 17, 17, 0.15);\n    }\n  }\n\n  & .react-datepicker {\n    background-color: #3e85f3;\n    color: white;\n    border-radius: 16px;\n    padding: 18px;\n  }\n  & .react-datepicker__header {\n    background-color: #3e85f3;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__triangle::after,\n  & .react-datepicker__triangle::before {\n    background-color: #3e85f3;\n    display: none;\n  }\n  & .react-datepicker__current-month {\n    font-size: 20px;\n    margin-bottom: 18px;\n  }\n  & .react-datepicker__day-name {\n    color: #fff;\n    font-size: 14px;\n  }\n  & .react-datepicker__day.react-datepicker__day--outside-month {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 14px;\n  }\n\n  & .react-datepicker__navigation {\n    top: 24px;\n  }\n\n  & .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  & .react-datepicker__current-month {\n    color: white;\n  }\n  & .react-datepicker__week:last-of-type {\n    margin-bottom: 0;\n  }\n  & .react-datepicker__week:not(:last-of-type) {\n    margin-bottom: 7px;\n  }\n  & .react-datepicker__day.react-datepicker__day--selected {\n    border-radius: 50%;\n    color: #3e85f3;\n\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__day.react-datepicker__day--today {\n    background-color: #fff;\n    border-radius: 50%;\n    color: #3e85f3;\n    font-weight: 500;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    border: none;\n    background: none;\n  }\n  & .react-datepicker__day {\n    color: inherit;\n    font-size: 14px;\n  }\n  & .react-datepicker__day--disabled {\n    color: grey;\n  }\n\n  .react-datepicker__year-option {\n    color: #3e85f3;\n  }\n\n  .react-datepicker__year-option:first-of-type {\n    color: #3e85f3;\n    content: ^;\n  }\n\n  .react-datepicker__month-option {\n    color: #3e85f3;\n  }\n\n  .react-datepicker__month-year-option {\n    color: #3e85f3;\n  }\n\n  .react-datepicker__month-dropdown {\n    color: #3e85f3;\n  }\n\n  .react-datepicker__year-dropdown {\n    color: #3e85f3;\n  }\n`;\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  /*  @media screen and (min-width: 768px) {\n    margin-bottom: 18px;\n  } */\n`;\n\nexport const Controls = styled.button`\n  display: none;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 30px;\n  background-color: ${props => props.theme.variable.CalendarLinkColor};\n  border: ${props => props.theme.variable.borderColorWeekCalendar};\n  color: ${props => props.theme.variable.calendarTextColor};\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.variable.mainBackgroundColor};\n    color: ${({ theme }) => theme.variable.activeArrowColor};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n  }\n  &:first-of-type {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right-width: 0.5px;\n  }\n  &:last-of-type {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n    border-left-width: 0.5px;\n  }\n`;\n\nexport const DatePickerChevronDown = styled.svg`\n  stroke: ${props => props.theme.variable.calendarTextColor};\n  pointer-events: none;\n\n  position: absolute;\n\n  width: 18px;\n  height: 18px;\n  z-index: 10;\n  top: 38px;\n  right: 14px;\n\n  fill: none;\n`;\n","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// import { ErrorMessage } from '@hookform/error-message';\n// import { StyledErrorMessage } from '../consts/styledErrorMessage.styled';\n\n\nimport { format, subYears, parse } from 'date-fns';\n\nexport const DatePickerFormUser = ({ setFormBirthday, formBirthday, \n  // inputName,\n  // errors\n}) => {\n  return (\n    <>\n      <ReactDatePicker\n        selected={parse(formBirthday, 'yyyy-MM-dd', new Date())}\n        showYearDropdown\n        showMonthDropdown\n        minDate={new Date('1970-01-01')}\n        maxDate={subYears(new Date(), 6)}\n        closeOnScroll={false}\n        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n        onChange={value => {\n          setFormBirthday(format(value, 'yyyy-MM-dd'));\n        }}\n      />\n       {/* <StyledErrorMessage>\n        <ErrorMessage errors={errors} name={inputName} />\n      </StyledErrorMessage> */}\n    </>\n  );\n};\n","const validFileExtensions = {\n    image: ['jpg', 'gif', 'png', 'jpeg', 'svg', 'webp'],\n  };\n  \n  export const isValidFileType = value => {\n    if (typeof value === 'string' && value.includes('image')) return true;\n    if (value.length === 0) return true;\n    const fileName = value[0].name.toLowerCase();\n    return validFileExtensions['image'].indexOf(fileName.split('.').pop()) > -1;\n  };","import * as Yup from 'yup';\n\nimport { isValidFileType } from './fileTypeValidation';\nimport { nameRegExp, phoneRegExp } from './regExps';\n\n\n\nexport const FormUserSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .max(16, 'Name may contain only 16 characters'),\n  phone: Yup.string().matches(phoneRegExp, {\n    message:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    excludeEmptyString: true,\n  }),\n  birthday: Yup.date('Invalid date format'),\n  skype: Yup.string().max(16, 'Skype may contain only 16 characters'),\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('This field is required'),\n  avatarURL: Yup.mixed().test('is-valid-type', 'Ivalid image type', value => {\n    return value === '' || isValidFileType(value);\n  }),\n});\n","export const nameRegExp = \n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n  \n  \n  export const phoneRegExp =\n    /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from '../../../redux/auth/operations';\nimport { useForm } from 'react-hook-form';\nimport { FormField } from './FormField/FormField';\nimport { userAvatarInput, userFormInputs } from './consts/FormUserInputs';\n\nimport sprite from '../../../images/icons.svg';\nimport { AvatarFieldFormUser } from './AvatarFieldFormUser/AvatarFieldFormUser';\nimport {\n  Form,\n  FormBody,\n  FormUserButton,\n  Label,\n  DatePickerFormUserWrapper,\n  ControlWrapper,\n  DatePickerChevronDown,\n} from './FormUser.styled';\nimport { DatePickerFormUser } from './DatePickerFormUser/DatePickerFormUser';\nimport { Notify } from 'notiflix';\n\n\n// Validation block imports\n\nimport { FormUserSchema } from './consts/validation/FormUserSchema';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n\n\n\nexport const FormUser = () => {\n  const { name, email, avatarURL, phone, skype, birthday } =\n    useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n\n// Validation block\n\n  // useEffect(() => {\n  //   if (isError && error?.status !== 413)\n  //     notify(error?.data?.message || 'Sorry, something went wrong');\n  //   if (isError && error.status === 413) notify('The image is too large');\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [isError]);\n\n  const { register: reg,\n    // control,\n     handleSubmit\n    //  formState: { errors, isDirty, dirtyFields },\n    } = useForm({\n    resolver: yupResolver(FormUserSchema),\n    mode: 'onSubmit',\n    defaultValues: {\n      name,\n      email,\n      phone: !phone ? '' : phone,\n      birthday: birthday ? birthday : '1900-01-01',\n      skype: !skype ? '' : skype,\n      avatarURL: !avatarURL ? '' : avatarURL,\n    },\n  });\n\n  // useEffect(() => {\n  //   const checkIsDirty = () => {\n  //     if (currentAvatarUrl === userImgUrl) {\n  //       if (isDirty) setIsDisabled(false);\n  //       if (!isDirty) setIsDisabled(true);\n  //       if (isError && error?.status !== 413) setIsDisabled(true);\n  //     }\n  //   };\n\n  //   checkIsDirty();\n\n  // }, [isDirty, dirtyFields]);\n\n\n// End of validation block\n\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [currentAvatarURL, setCurrentAvatarURL] = useState(null);\n  const [formBirthday, setFormBirthday] = useState('1990-01-01');\n\n  useEffect(() => {\n    if (birthday) {\n      setFormBirthday(birthday);\n    }\n  }, [birthday]);\n\n  const onSubmit = async data => {\n    const preparedEmail = data.email === '' ? email : data.email;\n    const preparedPhone = data.phone === '' ? ' ' : data.phone;\n    const preparedSkype = data.skype === '' ? '' : data.skype;\n\n    const formData = new FormData();\n\n    if (name !== data.name) formData.append('name', data.name);\n    if (email !== preparedEmail) formData.append('email', preparedEmail.trim());\n    if (phone !== preparedPhone) formData.append('phone', preparedPhone.trim());\n    if (skype !== preparedSkype) formData.append('skype', preparedSkype.trim());\n    if (birthday !== formBirthday)\n      formData.append('birthday', formBirthday.trim());\n    if (currentAvatarURL) formData.append('avatarURL', currentAvatarURL);\n\n    console.log(formData);\n\n    dispatch(updateUser(formData));\n\n    Notify.success('Changes saved successfully');\n  };\n\n  return (\n    <Form\n      onSubmit={handleSubmit(onSubmit)}\n      autoComplete=\"off\"\n      encType=\"multipart/form-data\"\n    >\n      <AvatarFieldFormUser\n        type=\"file\"\n        userName={name}\n        // errors={errors}\n        register={reg}\n        avatarURL={avatarURL}\n        currentAvatarURL={currentAvatarURL}\n        setCurrentAvatarURL={setCurrentAvatarURL}\n        setIsDisabled={setIsDisabled}\n        {...userAvatarInput}\n      />\n      <FormBody>\n        {userFormInputs.map(input =>\n          input.type !== 'date' ? (\n            <FormField\n              key={input.id}\n              {...input}\n                 // errors={errors}\n              register={reg}\n              setIsDisabled={setIsDisabled}\n            />\n          ) : (\n            <ControlWrapper key={input.id}>\n              <DatePickerFormUserWrapper>\n                <Label>\n                  Birthday\n                  <DatePickerChevronDown>\n                    <use href={`${sprite}#icon-chevron-down`} />\n                  </DatePickerChevronDown>\n                </Label>\n                <DatePickerFormUser\n                  setFormBirthday={setFormBirthday}\n                  formBirthday={formBirthday}\n                  // errors={errors}\n                  key={input.id}\n                  {...input}\n                />\n              </DatePickerFormUserWrapper>\n            </ControlWrapper>\n          )\n        )}\n      </FormBody>\n      <FormUserButton type=\"submit\" function=\"save\" disabled={isDisabled}>\n        Save changes\n      </FormUserButton>\n    </Form>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  padding: 0 20px 95px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 64px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px 32px;\n  }\n`;\n","import { FormUser } from '../../components/Form/FormUser/FormUser';\n\nimport { Outlet } from 'react-router-dom';\n\nimport { PageWrapper } from './AccountPage.styled';\n\nexport default function AccountPage() {\n  return (\n    <div>\n      <PageWrapper>\n        <FormUser />\n        <Outlet />\n      </PageWrapper>\n    </div>\n  );\n}\n"],"names":["InputFieldThumb","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","props","theme","variable","bgReversLabel","Input","_templateObject3","secondaryBg","borderProfileColor","text","FormField","_ref","id","inputName","type","placeholder","label","register","setIsDisabled","isPhoneField","_jsx","_Fragment","children","_jsxs","htmlFor","InputMask","_objectSpread","mask","maskChar","onChange","inputProps","userFormInputs","nanoid","userAvatarInput","DefaultAvatarSvg","PlusSvgOnAvatar","UserAvatarWrapper","_templateObject4","HiddenInput","_templateObject5","InfoWrapper","_templateObject6","textAvatar","AvatarFieldFormUser","userName","avatarURL","currentAvatarURL","setCurrentAvatarURL","src","URL","createObjectURL","alt","href","concat","sprite","accept","e","target","files","Form","FormBody","FormUserButton","buttonBg","btndisActive","btnColorActive","DatePickerFormUserWrapper","ControlWrapper","DatePickerChevronDown","_templateObject7","CalendarLinkColor","borderColorWeekCalendar","calendarTextColor","mainBackgroundColor","_ref2","activeArrowColor","_templateObject8","DatePickerFormUser","setFormBirthday","formBirthday","ReactDatePicker","selected","parse","Date","showYearDropdown","showMonthDropdown","minDate","maxDate","subYears","closeOnScroll","formatWeekDay","nameOfDay","substr","value","format","validFileExtensions","image","FormUserSchema","Yup","shape","name","required","matches","max","phone","message","excludeEmptyString","birthday","skype","email","test","includes","length","fileName","toLowerCase","indexOf","split","pop","isValidFileType","FormUser","_useSelector","useSelector","selectUser","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","mode","defaultValues","reg","handleSubmit","_useState","useState","_useState2","_slicedToArray","isDisabled","_useState3","_useState4","_useState5","_useState6","useEffect","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","preparedEmail","preparedPhone","preparedSkype","formData","wrap","_context","prev","next","FormData","append","trim","console","log","updateUser","Notify","stop","_x","apply","arguments","autoComplete","encType","map","input","function","disabled","PageWrapper","AccountPage","Outlet"],"sourceRoot":""}