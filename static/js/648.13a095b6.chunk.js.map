{"version":3,"file":"static/js/648.13a095b6.chunk.js","mappings":"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","sources":["components/Form/FormUser/consts/styledErrorMessage.styled.jsx","components/Form/FormUser/FormField/FormField.styled.jsx","components/Form/FormUser/FormField/FormField.js","components/Form/FormUser/consts/FormUserInputs.js","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.styled.jsx","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.js","components/Form/FormUser/FormUser.styled.jsx","components/Form/FormUser/DatePickerFormUser/DatePickerFormUser.js","components/Form/FormUser/consts/validation/FormUserSchema.js","components/Form/FormUser/consts/validation/regExps.js","components/Form/FormUser/FormUser.js","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledErrorMessage = styled.p`\n  color: red;\n  font-size: 12px;\n  font-weight: 500;\n  margin-top: 5px;\n`;","import styled from 'styled-components';\n\nexport const InputFieldThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 299px;\n  height: 64px;\n\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 72px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 12px;\n  color: ${props => props.theme.variable.bgReversLabel};\n\n  line-height: calc(14 / 12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n\n    line-height: calc(18 / 14);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 42px;\n\n  padding: 12px 14px;\n\n  background-color: ${props => props.theme.variable.secondaryBg};\n  outline: none;\n\n  border: 1px solid ${props => props.theme.variable.borderProfileColor};\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 600;\n  color: ${props => props.theme.variable.text};\n  line-height: calc(18 / 14);\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n\n    padding: 14px 18px;\n\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n\n  &::placeholder {\n    /* font-size: 16px;\n    line-height: 18px; */\n    color: 'inherit'; \n  }\n  \n  &[type='time']::-webkit-calendar-picker-indicator {\n    background: none;\n  }\n\n`;\n","import PropTypes from 'prop-types';\nimport InputMask from 'react-input-mask';\n\n// import { ErrorMessage } from '@hookform/error-message';\nimport {StyledErrorMessage} from '../consts/styledErrorMessage.styled'\n\nimport { Label, Input, InputFieldThumb } from './FormField.styled';\n\nexport const FormField = ({\n  id,\n  inputName,\n  type,\n  placeholder,\n  label,\n  register,\n  // setIsDisabled,\n  error,\n  setValue,\n  // setIsFormDirty,\n}) => {\n  const isPhoneField = inputName === 'phone';\n\n  return (\n    <>\n      <InputFieldThumb>\n        <Label htmlFor={id}>{label}</Label>\n        {isPhoneField ? (\n          <InputMask\n            id={id}\n            mask=\"+99 (999) 999-9999\"\n            maskChar=\"_\"\n            type=\"tel\"\n            placeholder={placeholder}\n            {...register(inputName)}\n            onChange={e => {\n              // console.log('e.target.value', e.target.value);\n              setValue(inputName, e.target.value, { shouldDirty: true });\n              // setIsDisabled(false);\n            }}\n          >\n            {inputProps => <Input {...inputProps} />}\n          </InputMask>\n        ) : (\n          <Input\n            id={id}\n            type={type}\n            placeholder={placeholder}\n            {...register(inputName)}\n            onChange={e => {\n              setValue(inputName, e.target.value, { shouldDirty: true });\n              // setIsFormDirty(true);\n              // setIsDisabled(false);\n            }}\n          />\n        )}\n        {error && <StyledErrorMessage>{error.message}</StyledErrorMessage>}\n      </InputFieldThumb>\n      \n    </>\n  );\n};\n\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  error: PropTypes.any,\n};\n","import { nanoid } from '@reduxjs/toolkit';\n\nexport const userFormInputs = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nanoid(),\n    label: 'User Name',\n    placeholder: 'Enter your name',\n  },\n  {\n    inputName: 'birthday',\n    type: 'date',\n    id: nanoid(),\n    label: 'Birthday',\n    placeholder: 'DD/MM/YYYY',\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: nanoid(),\n    label: 'Email',\n    placeholder: 'Enter email',\n  },\n  {\n    inputName: 'phone',\n    type: 'tel',\n    id: nanoid(),\n    label: 'Phone',\n    placeholder: 'Enter phone',\n  },\n  {\n    inputName: 'skype',\n    type: 'string',\n    id: nanoid(),\n    label: 'Skype',\n    placeholder: 'Add a skype number',\n  },\n];\n\nexport const userAvatarInput = {\n  inputName: 'avatarURL',\n  type: 'file',\n  id: nanoid(),\n  label: '',\n  placeholder: '',\n};\n","import styled from 'styled-components';\n\nexport const DefaultAvatarSvg = styled.svg`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  // padding: 20px;\n`;\n\nexport const PlusSvgOnAvatar = styled.svg`\n  position: relative;\n  border-radius: 50%;\n  background-color: #3e85f3;\n  content: '+';\n  stroke: #ffffff;\n  font-family: Inter;\n  font-size: 18px;\n  line-height: 1.375rem;\n  align-items: center;\n  width: 12px;\n  height: 12px;\n\n  top: -42px;\n\n // right: -24px;\n  right: -92px;\n  pointer-events: none;\n\n  @media screen and (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;    \n\n\n    top: -61px;\n    right: -97px;\n    pointer-events: none;\n\n    @media screen and (min-width: 1440px) {\n      top: -61px;\n      pointer-events: none;\n    }\n\n  }\n  @media (min-width: 1440px) {\n    pointer-events: none;\n  }\n\n  @media (max-width: 768px) {\n    top: -32px;\n    right: -14px;\n  } \n`;\n\nexport const UserAvatarWrapper = styled.div`\n  position: relative;\n  text-align: center;\n\n\n  @media (max-width: 768px) {\n    top: -31px;\n  }\n`;\n\nexport const Label = styled.label`  \n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n\n  border-radius: 50%;\n  border: 2px solid #3e85f3;\n  background-color: none;\n  overflow: hidden;\n\n  & img {\n    object-fit: cover;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n  }\n\n\n  @media screen and (min-width: 768px) {\n\n    margin-top: 40px;\n    width: 124px;\n    height: 124px;  \n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const HiddenInput = styled.input`\n  opacity:0;\n  position: relative;\n  \n  align-items: center;\n\n  width: 12px;\n  height: 12px;\n\n  top: -18px;\n  right: -24px;\n\n  border-radius: 50%;\n  background-color: #3e85f3;\n\n\n  @media (max-width: 768px) {\n    top: -14px;\n    right: -14px;\n  }\n\n  // :before {\n  //   position: absolute;\n  //   content: '+';\n\n  //   width: 14px;\n  //   height: 14px;\n\n  //   font-size: 0.9375rem;\n  //   line-height: 0.8125rem;\n\n  //   /* color: ; */\n  //   background-color: #3e85f3;\n  // }\n\n\n  @media screen and (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;     \n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  position: relative;\n  padding-top: 20px;\n  > h3 {\n    color: ${props => props.theme.variable.text};\n    font-family: InterBold;\n    font-size: 18px;\n    line-height: 1.125rem;\n\n    margin-bottom: 0.25rem;\n\n    @media screen and (min-width: 768px) {\n      font-size: 1.125rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  > p {\n    color: ${props => props.theme.variable.textAvatar};\n    font-family: InterSemiBold;\n    font-size: 14px;\n    line-height: 0.875rem;\n\n    @media screen and (min-width: 768px) {\n      font-size: 0.875rem;\n      line-height: 1.125rem;\n    }\n  }\n`;\n","import sprite from '../../../../images/icons.svg';\n\nimport {\n  HiddenInput,\n  Label,\n  DefaultAvatarSvg,\n  PlusSvgOnAvatar,\n  UserAvatarWrapper,\n  InfoWrapper,\n} from './AvatarFieldFormUser.styled';\n\nexport const AvatarFieldFormUser = ({\n  userName,\n  inputName,\n  type,\n  id,\n  avatarURL,\n  currentAvatarURL,\n  setCurrentAvatarURL,\n  // setIsDisabled,\n  register,\n  setValue,\n}) => {\n  return (\n    <UserAvatarWrapper>\n      <Label htmlFor={id}>\n        {currentAvatarURL ? (\n          <img src={URL.createObjectURL(currentAvatarURL)} alt=\"user_photo\" />\n        ) : avatarURL ? (\n          <img src={avatarURL} alt=\"user_photo\" />\n        ) : (\n          <p>\n            <DefaultAvatarSvg>\n              <use href={`${sprite}#icon-user`} />\n            </DefaultAvatarSvg>\n          </p>\n        )}\n      </Label>\n      <HiddenInput\n        {...register(inputName)}\n        id={id}\n        type={type}\n        accept=\"image/*\"\n        onChange={e => {\n          setCurrentAvatarURL(e.target.files[0]);\n          setValue(inputName, e.target.files[0], { shouldDirty: true });\n          // setIsFormDirty(true);\n        }}\n      />\n      <p>\n        <PlusSvgOnAvatar>\n          <use href={sprite + '#icon-plus'}></use>\n        </PlusSvgOnAvatar>\n      </p>\n      <InfoWrapper>\n        <h3>{userName}</h3>\n        <p>User</p>\n      </InfoWrapper>\n    </UserAvatarWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n\n  & > button {\n    padding: 14px 50px;\n    margin-top: 0px;\n    margin-bottom: 40px;\n\n    @media screen and (min-width: 768px) {\n      padding: 15px 84px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const FormBody = styled.div`\n  width: 100%;\n  display: grid;\n  padding: 0px 18px;\n  margin: 40px 0;\n  gap: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    padding: 0px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 758px;\n    padding: 0px;\n\n    grid-auto-flow: column;\n    grid-template-rows: repeat(3, 1fr);\n\n    column-gap: 50px;\n    row-gap: 24px;\n  }\n`;\n\nexport const FormUserButton = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: InterRegular;\n  font-size: 14px;\n  width: 262px;\n  height: 48px;\n  padding: 15px, 83px;\n  background-color: ${props => props.theme.variable.buttonBg};\n  border-radius: 16px;\n  color: #fff;\n\n  &:disabled {\n    background-color: rgb(163, 168, 173);\n    color: ${props => props.theme.variable.btndisActive};\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.variable.btnColorActive};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'InterRegular';\n  font-size: 14px;\n  line-height: 15px;\n\n  color: ${props => props.theme.variable.bgReversLabel};\n`;\n\nexport const DatePickerFormUserWrapper = styled.div`\n  /* font-family: 'Inter', sans-serif;\n  position:relative;\n  margin-right: 8px; */\n  & .react-datepicker__today-button {\n    border: none;\n    background: none;\n    display: none;\n  }\n  & input {\n    font-size: 14px;\n    background-color: ${props => props.theme.variable.secondaryBg};\n    outline: none;\n    border: 1px solid ${props => props.theme.variable.borderProfileColor};\n    border-radius: 8px;\n    padding: 12px 14px;\n    height: 42px;\n    width: 299px;\n\n    color: ${props => props.theme.variable.text};\n    text-transform: uppercase;\n\n    font-weight: 600;\n    line-height: calc(18 / 14);\n\n    @media screen and (min-width: 768px) {\n      height: 46px;\n      width: 354px;\n      padding: 14px 18px;\n      font-size: 16px;\n    }\n\n    &::placeholder {\n      font-size: 16px;\n      line-height: calc(18 / 16);\n      color: rgba(17, 17, 17, 0.15);\n    }\n  }\n\n  & .react-datepicker {\n    background-color: #3e85f3;\n    color: white;\n    border-radius: 16px;\n    padding: 18px;\n  }\n  & .react-datepicker__header {\n    background-color: #3e85f3;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__triangle::after,\n  & .react-datepicker__triangle::before {\n    background-color: #3e85f3;\n    display: none;\n  }\n  & .react-datepicker__current-month {\n    font-size: 20px;\n    margin-bottom: 18px;\n  }\n  & .react-datepicker__day-name {\n    color: #fff;\n    font-size: 14px;\n  }\n  & .react-datepicker__day.react-datepicker__day--outside-month {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 14px;\n  }\n\n  & .react-datepicker__navigation {\n    top: 24px;\n  }\n\n  & .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  & .react-datepicker__current-month {\n    color: white;\n  }\n  & .react-datepicker__week:last-of-type {\n    margin-bottom: 0;\n  }\n  & .react-datepicker__week:not(:last-of-type) {\n    margin-bottom: 7px;\n  }\n  & .react-datepicker__day.react-datepicker__day--selected {\n    border-radius: 50%;\n    color: #3e85f3;\n\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__day.react-datepicker__day--today {\n    background-color: #fff;\n    border-radius: 50%;\n    color: #3e85f3;\n    font-weight: 500;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    border: none;\n    background: none;\n  }\n  & .react-datepicker__day {\n    color: inherit;\n    font-size: 14px;\n  }\n  & .react-datepicker__day--disabled {\n    color: grey;\n  }\n\n  .react-datepicker__year-option {\n    color: #3e85f3;\n  }\n\n  .react-datepicker__year-option:first-of-type {\n    color: #3e85f3;\n    content: ^;\n  }\n\n  .react-datepicker__month-option {\n    color: #3e85f3;\n  }\n\n  .react-datepicker__month-year-option {\n    color: #3e85f3;\n  }\n\n  .react-datepicker__month-dropdown {\n    color: #3e85f3;\n  }\n\n  .react-datepicker__year-dropdown {\n    color: #3e85f3;\n  }\n`;\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  /*  @media screen and (min-width: 768px) {\n    margin-bottom: 18px;\n  } */\n`;\n\nexport const Controls = styled.button`\n  display: none;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 30px;\n  background-color: ${props => props.theme.variable.CalendarLinkColor};\n  border: ${props => props.theme.variable.borderColorWeekCalendar};\n  color: ${props => props.theme.variable.calendarTextColor};\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.variable.mainBackgroundColor};\n    color: ${({ theme }) => theme.variable.activeArrowColor};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n  }\n  &:first-of-type {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right-width: 0.5px;\n  }\n  &:last-of-type {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n    border-left-width: 0.5px;\n  }\n`;\n\nexport const DatePickerChevronDown = styled.svg`\n  stroke: ${props => props.theme.variable.calendarTextColor};\n  pointer-events: none;\n\n  position: absolute;\n\n  width: 18px;\n  height: 18px;\n  z-index: 10;\n  top: 38px;\n  right: 14px;\n\n  fill: none;\n`;\n","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// import { ErrorMessage } from '@hookform/error-message';\n// import { StyledErrorMessage } from '../consts/styledErrorMessage.styled';\n\nimport { format, subYears, parse } from 'date-fns';\n\nexport const DatePickerFormUser = ({\n  setFormBirthday,\n  formBirthday,\n  setValue,\n  // errors\n}) => {\n  return (\n    <>\n      <ReactDatePicker\n        selected={parse(formBirthday, 'yyyy-MM-dd', new Date())}\n        showYearDropdown\n        showMonthDropdown\n        minDate={new Date('1970-01-01')}\n        maxDate={subYears(new Date(), 6)}\n        closeOnScroll={false}\n        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n        onChange={value => {\n          setFormBirthday(format(value, 'yyyy-MM-dd'));\n          setValue('birthday', format(value, 'yyyy-MM-dd'), {\n            shouldDirty: true,\n          });\n        }}\n      />\n      {/* <StyledErrorMessage>\n        <ErrorMessage errors={errors} name={inputName} />\n      </StyledErrorMessage> */}\n    </>\n  );\n};\n","import * as Yup from 'yup';\n\n// import { isValidFileType } from './fileTypeValidation';\nimport { nameRegExp, phoneRegExp } from './regExps';\n\nimport moment from 'moment/moment';\nconst dayMoment = moment().format('DD/MM/YYYY');\n\nexport const FormUserSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .max(20, 'At most 16 digits is required')\n    .test(\n      'name-validation',\n      'Name must be at least 3 characters long',\n      value => {\n        return value && value.replace(/\\s/g, '').length >= 3;\n      }\n    ),\n  birthday: Yup.date().max(\n    dayMoment,\n\n    'Birthday must be earlier than today'\n  ),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .matches(/^[a-zA-Z0-9@.]+$/, 'Email must contain only Latin characters')\n    .required('Email is required field'),\n  phone: Yup.string()\n    .min(13, 'The phone number must be in format: +38 (000) 111-2345')\n    .max(20, 'The phone number must be in format: +38 (000) 111-2345')\n    .required(\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .matches(\n      phoneRegExp.phone,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n  skype: Yup.string()\n    .matches(/^\\S[\\S\\s]{0,28}\\S$/, 'Skype must be between 3 and 16 characters')\n    .max(13, 'At most 13 digits is required')\n    .test(\n      'Skype-validation',\n      'Skype must be at least 3 characters long',\n      value => {\n        return value && value.replace(/\\s/g, '').length >= 3;\n      }\n    ),\n  // avatarURL: Yup.mixed().test('is-valid-type', 'Ivalid image type', value => {\n  //   return value === '' || isValidFileType(value);\n  // }),\n});\n","export const nameRegExp = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n  \n  \nexport const phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from '../../../redux/auth/operations';\nimport { useForm } from 'react-hook-form';\nimport { FormField } from './FormField/FormField';\nimport { userAvatarInput, userFormInputs } from './consts/FormUserInputs';\n\nimport sprite from '../../../images/icons.svg';\nimport { AvatarFieldFormUser } from './AvatarFieldFormUser/AvatarFieldFormUser';\nimport {\n  Form,\n  FormBody,\n  FormUserButton,\n  Label,\n  DatePickerFormUserWrapper,\n  ControlWrapper,\n  DatePickerChevronDown,\n} from './FormUser.styled';\nimport { DatePickerFormUser } from './DatePickerFormUser/DatePickerFormUser';\nimport { Notify } from 'notiflix';\n\nimport { FormUserSchema } from './consts/validation/FormUserSchema';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nexport const FormUser = () => {\n  const { name, email, avatarURL, phone, skype, birthday } =\n    useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  const {\n    register: reg,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n    setValue,\n    setError,\n  } = useForm({\n    resolver: yupResolver(FormUserSchema),\n    mode: 'onBlur',\n    defaultValues: {\n      name,\n      email,\n      phone: !phone ? '' : phone,\n      birthday: birthday ? birthday : '1900-01-01',\n      skype: !skype ? '' : skype,\n      avatarURL: !avatarURL ? '' : avatarURL,\n    },\n  });\n\n  // const [isFormDisabled, setIsFormDisabled] = useState(true);\n  const [currentAvatarURL, setCurrentAvatarURL] = useState(null);\n  const [formBirthday, setFormBirthday] = useState('1990-01-01');\n\n  useEffect(() => {\n    if (birthday) {\n      setFormBirthday(birthday);\n    }\n  }, [birthday]);\n\n  const onSubmit = async data => {\n    // const preparedEmail = data.email === '' ? email : data.email;\n    // const preparedPhone = data.phone === '' ? ' ' : data.phone;\n    // const preparedSkype = data.skype === '' ? '' : data.skype;\n\n    const formData = new FormData();\n    //setValue('')\n    if (data.phone.includes('_')) {\n      setError('phone', {\n        type: 'manual',\n        message: 'The phone number must be in format: +38 (000) 111-2345',\n      });\n      return;\n    }\n    if (name !== data.name) formData.append('name', data.name);\n    if (email !== data.email) formData.append('email', data.email.trim());\n    if (phone !== data.phone) formData.append('phone', data.phone.trim());\n    if (skype !== data.skype) formData.append('skype', data.skype.trim());\n    if (birthday !== formBirthday)\n      formData.append('birthday', formBirthday.trim());\n    if (currentAvatarURL) formData.append('avatarURL', currentAvatarURL);\n    // console.log('formData', formData);\n    dispatch(updateUser(formData));\n\n    Notify.success('Changes saved successfully');\n  };\n\n  // console.log('isDirty', isDirty);\n  // console.log('isValid', isValid);\n  // console.log('errors', errors);\n\n  return (\n    <Form\n      onSubmit={handleSubmit(onSubmit)}\n      autoComplete=\"off\"\n      encType=\"multipart/form-data\"\n    >\n      <AvatarFieldFormUser\n        type=\"file\"\n        userName={name}\n        register={reg}\n        setValue={setValue}\n        avatarURL={avatarURL}\n        currentAvatarURL={currentAvatarURL}\n        setCurrentAvatarURL={setCurrentAvatarURL}\n        {...userAvatarInput}\n      />\n      <FormBody>\n        {userFormInputs.map(input =>\n          input.type !== 'date' ? (\n            <FormField\n              key={input.id}\n              {...input}\n              register={reg}\n              setValue={setValue}\n              error={errors[input.inputName]}\n            />\n          ) : (\n            <ControlWrapper key={input.id}>\n              <DatePickerFormUserWrapper>\n                <Label>\n                  Birthday\n                  <DatePickerChevronDown>\n                    <use href={`${sprite}#icon-chevron-down`} />\n                  </DatePickerChevronDown>\n                </Label>\n                <DatePickerFormUser\n                  setValue={setValue}\n                  setFormBirthday={setFormBirthday}\n                  formBirthday={formBirthday}\n                  key={input.id}\n                  {...input}\n                />\n              </DatePickerFormUserWrapper>\n            </ControlWrapper>\n          )\n        )}\n      </FormBody>\n      <FormUserButton\n        type=\"submit\"\n        function=\"save\"\n        disabled={!isDirty || !isValid}\n      >\n        Save changes\n      </FormUserButton>\n    </Form>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  padding: 0 20px 95px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 64px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px 32px;\n  }\n`;\n","import { FormUser } from '../../components/Form/FormUser/FormUser';\n\nimport { Outlet } from 'react-router-dom';\n\nimport { PageWrapper } from './AccountPage.styled';\n\nexport default function AccountPage() {\n  return (\n    <div>\n      <PageWrapper>\n        <FormUser />\n        <Outlet />\n      </PageWrapper>\n    </div>\n  );\n}\n"],"names":["StyledErrorMessage","styled","_templateObject","_taggedTemplateLiteral","InputFieldThumb","Label","_templateObject2","props","theme","variable","bgReversLabel","Input","_templateObject3","secondaryBg","borderProfileColor","text","FormField","_ref","id","inputName","type","placeholder","label","register","error","setValue","isPhoneField","_jsx","_Fragment","children","_jsxs","htmlFor","InputMask","_objectSpread","mask","maskChar","onChange","e","target","value","shouldDirty","inputProps","message","userFormInputs","nanoid","userAvatarInput","DefaultAvatarSvg","PlusSvgOnAvatar","UserAvatarWrapper","_templateObject4","HiddenInput","_templateObject5","InfoWrapper","_templateObject6","textAvatar","AvatarFieldFormUser","userName","avatarURL","currentAvatarURL","setCurrentAvatarURL","src","URL","createObjectURL","alt","href","concat","sprite","accept","files","Form","FormBody","FormUserButton","buttonBg","btndisActive","btnColorActive","DatePickerFormUserWrapper","ControlWrapper","DatePickerChevronDown","_templateObject7","CalendarLinkColor","borderColorWeekCalendar","calendarTextColor","mainBackgroundColor","_ref2","activeArrowColor","_templateObject8","DatePickerFormUser","setFormBirthday","formBirthday","ReactDatePicker","selected","parse","Date","showYearDropdown","showMonthDropdown","minDate","maxDate","subYears","closeOnScroll","formatWeekDay","nameOfDay","substr","format","dayMoment","moment","FormUserSchema","Yup","shape","name","required","matches","max","test","replace","length","birthday","email","phone","min","skype","FormUser","_useSelector","useSelector","selectUser","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","mode","defaultValues","reg","handleSubmit","_useForm$formState","formState","errors","isDirty","isValid","setError","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","useEffect","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","formData","wrap","_context","prev","next","FormData","includes","abrupt","append","trim","updateUser","Notify","stop","_x","apply","arguments","autoComplete","encType","map","input","function","disabled","PageWrapper","AccountPage","Outlet"],"sourceRoot":""}