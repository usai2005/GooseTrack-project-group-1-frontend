{"version":3,"file":"static/js/779.f08e89d4.chunk.js","mappings":"6UAEMA,EAAa,IAAIC,OACrB,0HAMIC,EAAsB,CAC1BC,MAAO,CAAC,MAAO,MAAO,MAAO,OAAQ,MAAO,SAUjCC,EAAiBC,EAAAA,KAAaC,MAAM,CAC/CC,KAAMF,EAAAA,KACHG,SAAS,0BACTC,QACCT,EACA,0IAEDU,IAAI,GAAI,uCACXC,MAAON,EAAAA,KAAaI,QArBpB,kFAqByC,CACvCG,QACE,+FACFC,oBAAoB,IAEtBC,SAAUT,EAAAA,GAAS,uBACnBU,MAAOV,EAAAA,KAAaK,IAAI,GAAI,wCAC5BM,MAAOX,EAAAA,KACJW,MAAM,wBACNR,SAAS,0BACZS,WAAYZ,EAAAA,KAAYa,KAAK,gBAAiB,qBAAqB,SAAAC,GACjE,MAAiB,KAAVA,GA1Ba,SAAAA,GACtB,GAAqB,kBAAVA,GAAsBA,EAAMC,SAAS,SAAU,OAAO,EACjE,GAAqB,IAAjBD,EAAME,OAAc,OAAO,EAC/B,IAAMC,EAAWH,EAAM,GAAGZ,KAAKgB,cAC/B,OAAOrB,EAA2B,MAAEsB,QAAQF,EAASG,MAAM,KAAKC,QAAU,CAC5E,CAqB2BC,CAAgBR,EACzC,M,uCCtCWS,EAAQC,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8KAStB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAASC,aAAa,IAGzCC,EAAQP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6bAGX,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAASI,WAAW,IAI7C,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,SAASK,kBAAkB,IACvD,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,SAASM,IAAI,I,SCjBhCC,EAAY,SAAHC,GAOf,IANLC,EAAED,EAAFC,GACAC,EAASF,EAATE,UACAC,EAAIH,EAAJG,KACAC,EAAWJ,EAAXI,YACAC,EAAKL,EAALK,MACAC,EAAQN,EAARM,SAEA,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACvB,EAAK,CAACwB,QAAST,EAAGO,SAAEH,KACrBI,EAAAA,EAAAA,KAACf,GAAKiB,EAAAA,EAAAA,GAAA,CACJV,GAAIA,EACJE,KAAMA,EACNC,YAAaA,GACTE,EAASJ,OAIrB,E,UCtBaU,EAAiB,CAC5B,CACEV,UAAW,OACXC,KAAM,OACNF,IAAIY,EAAAA,EAAAA,UACJR,MAAO,YACPD,YAAa,mBAEf,CACEF,UAAW,QACXC,KAAM,MACNF,IAAIY,EAAAA,EAAAA,UACJR,MAAO,QACPD,YAAa,eAEf,CACEF,UAAW,WACXC,KAAM,OACNF,IAAIY,EAAAA,EAAAA,UACJR,MAAO,WACPD,YAAa,cAEf,CACEF,UAAW,QACXC,KAAM,SACNF,IAAIY,EAAAA,EAAAA,UACJR,MAAO,QACPD,YAAa,sBAEf,CACEF,UAAW,QACXC,KAAM,QACNF,IAAIY,EAAAA,EAAAA,UACJR,MAAO,QACPD,YAAa,gBAIJU,EAAkB,CAC7BZ,UAAW,aACXC,KAAM,OACNF,IAAIY,EAAAA,EAAAA,UACJR,MAAO,GACPD,YAAa,I,UC3CFW,EAAM5B,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uFAOhB2B,EAAoB7B,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wDAK9BH,EAAQC,EAAAA,GAAAA,MAAY8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,whBAmCpB6B,EAAc/B,EAAAA,GAAAA,MAAYgC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,8jCA+D1B+B,EAAcjC,EAAAA,GAAAA,IAAUkC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,igBAIxB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAASM,IAAI,IAclC,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,SAAS8B,UAAU,IC/GxCC,EAAsB,SAAHvB,GASzB,IARLwB,EAAQxB,EAARwB,SACAtB,EAASF,EAATE,UACAC,EAAIH,EAAJG,KACAF,EAAED,EAAFC,GACAwB,EAAgBzB,EAAhByB,iBACAC,EAAmB1B,EAAnB0B,oBACAC,EAAa3B,EAAb2B,cACArB,EAAQN,EAARM,SAEA,OACEC,EAAAA,EAAAA,MAACS,EAAiB,CAAAR,SAAA,EAChBC,EAAAA,EAAAA,KAACvB,EAAK,CAACwB,QAAST,EAAGO,SACfiB,GAOAhB,EAAAA,EAAAA,KAAA,OAAKmB,IAAKH,EAAkBI,IAAI,gBANhCpB,EAAAA,EAAAA,KAAA,KAAAD,UACEC,EAAAA,EAAAA,KAACM,EAAG,CAAAP,UACJC,EAAAA,EAAAA,KAAA,OAAKqB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,uBAO1BvB,EAAAA,EAAAA,KAACS,GAAWP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNL,EAASJ,IAAU,IACvBD,GAAIA,EACJE,KAAMA,EACN8B,OAAO,UACPC,SAAU,SAAAC,GAIR,OAzCS,SAACC,EAAMC,GACxB,IAAKD,EAAM,OAAOC,EAAa,MAC/B,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcJ,GACzBE,EAAWG,OAAS,WAClBJ,EAAaC,EAAWI,OAC1B,CACF,CAgCUC,CADaR,EAAES,OAAOC,MAAM,GACXnB,GACjBC,GAAc,GACPQ,CACT,MAEF5B,EAAAA,EAAAA,MAACa,EAAW,CAAAZ,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAAD,SAAKgB,KACLf,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAIX,EC1DasC,EAAO3D,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+WAMT,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAASI,WAAW,IAiBlDmD,EAAW5D,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6nBAmCrB2D,EAAoB7D,EAAAA,GAAAA,IAAU8B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,47DA0F9B4D,EAAW9D,EAAAA,GAAAA,OAAagC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,ofASf,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAAS0D,QAAQ,IAM/C,SAAA5D,GAAK,OAAIA,EAAMC,MAAMC,SAAS2D,YAAY,IAO/B,SAAA7D,GAAK,OAAIA,EAAMC,MAAMC,SAAS4D,cAAc,I,mBC5I9DC,G,QAAQ,IAAIC,MAELC,EAAW,WACtB,IAAAC,GACEC,EAAAA,EAAAA,IAAYC,EAAAA,IADN7F,EAAI2F,EAAJ3F,KAAMS,EAAKkF,EAALlF,MAAOqF,EAASH,EAATG,UAAW1F,EAAKuF,EAALvF,MAAOI,EAAKmF,EAALnF,MAAOD,EAAQoF,EAARpF,SAG9CwF,QAAQC,IAAIhG,GACZ+F,QAAQC,IAAIvF,GACZsF,QAAQC,IAAIF,GACZC,QAAQC,IAAI5F,GACZ2F,QAAQC,IAAIxF,GACZuF,QAAQC,IAAIzF,GAEZ,IAAA0F,GASIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYvG,GACtBwG,cAAe,CACbrG,KAAAA,EACAS,MAAAA,EACAL,MAAQA,GAAQ,GAChBG,SAAWA,GAAmB+F,EAAAA,EAAAA,SAAM/F,EAAU,aAAciF,GAAtCA,EACtBhF,MAAQA,GAAQ,GAChBsF,UAAYA,GAAY,MAhBhBS,EAAGN,EAAbxD,SAEA+D,EAAYP,EAAZO,aAAYC,EAAAR,EACZS,UAEEC,EAAOF,EAAPE,QACAC,EAAWH,EAAXG,YAcJC,GAAoCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEjD,EAAaiD,EAAA,GAChCG,GAAgDJ,EAAAA,EAAAA,UAAShB,GAAUqB,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA5DtD,EAAgBuD,EAAA,GAAEtD,EAAmBsD,EAAA,GAMtCC,EAAa,SAAAC,GACjB,GAAoB,kBAATA,EAAmB,OAAOA,EACrC,IAAMC,EAAID,EAAKE,cACTC,EAAIH,EAAKI,WACTC,EAAIL,EAAKM,UAEf,MAAM,GAANzD,OAAUoD,EAAC,KAAApD,QAAKsD,EAAI,GAAGI,WAAWC,SAAS,EAAG,KAAI,KAAA3D,OAAIwD,EACnDE,WACAC,SAAS,EAAG,KACjB,EAMMC,EAAQ,eAAA3F,GAAA4F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAI,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBR,EACJhB,EAAWe,EAAK5H,YAAc6G,EAAW5B,GACrC,KACA4B,EAAWe,EAAK5H,UAChB8H,EAAyC,KAApBF,EAAKzH,WAAoB,KAAOkD,EACrD0E,EAA+B,KAAfH,EAAK/H,MAAe,KAAOyI,OAAOV,EAAK/H,OACvDmI,EAA+B,KAAfJ,EAAK3H,MAAe,KAAO2H,EAAK3H,MAChDgI,GAAY1F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbqF,GAAI,IACP/H,MAAOkI,EACP9H,MAAO+H,EACPhI,SAAU6H,EACV1H,WAAY2H,KAEdS,EAAAA,EAAAA,IAAWN,GACX1E,GAAc,GAAM,wBAAA4E,EAAAK,OAAA,GAAAb,EAAA,KACrB,gBAjBac,GAAA,OAAA7G,EAAA8G,MAAA,KAAAC,UAAA,KA+Bd,OAZAC,EAAAA,EAAAA,YAAU,WAEFvF,IAAqBkC,IACnBa,GAAS7C,GAAc,GACtB6C,GAAS7C,GAAc,GAMlC,GAAG,CAAC6C,EAASC,EAAahD,EAAkBkC,KAG1CpD,EAAAA,EAAAA,MAACuC,EAAI,CAAC6C,SAAUtB,EAAasB,GAAWsB,aAAa,QAAOzG,SAAA,EAC1DC,EAAAA,EAAAA,KAACc,GAAmBZ,EAAAA,EAAAA,GAAA,CAClBa,SAAU3D,EAEVyC,SAAU8D,EACV3C,iBAAkBA,EAClBC,oBAAqBA,EACrBC,cAAeA,GACXb,KAENL,EAAAA,EAAAA,KAACsC,EAAQ,CAAAvC,SACNI,EAAesG,KAAI,SAAAC,GAAK,MACR,SAAfA,EAAMhH,MACJM,EAAAA,EAAAA,KAACV,GAASY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAoBwG,GAAK,IAAE7G,SAAU8D,IAA/B+C,EAAMlH,KAEtBQ,EAAAA,EAAAA,KAACuC,EAAiB,CAAAxC,UAChBC,EAAAA,EAAAA,KAAC2G,IAAe,CAEdlF,SAAU,SAAAzD,GAAU,GADf0I,EAAMlH,KAOhB,OAGLQ,EAAAA,EAAAA,KAACwC,EAAQ,CAAC9C,KAAK,SAASkH,SAAS,OAAOC,SAAUxC,EAAWtE,SAAC,mBAKpE,E,WCtJa+G,GAAcpI,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+PCItB,SAASmI,KACtB,OACE/G,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAACgH,GAAW,CAAA/G,SAAA,EACZC,EAAAA,EAAAA,KAAC8C,EAAQ,KACT9C,EAAAA,EAAAA,KAACgH,GAAAA,GAAM,QAIb,C","sources":["components/Form/FormUser/consts/FormUserSchema.js","components/Form/FormUser/FormField/FormField.styled.jsx","components/Form/FormUser/FormField/FormField.js","components/Form/FormUser/consts/FormUserInputs.js","components/AvatarFieldFormUser/AvatarFieldFormUser.styled.jsx","components/AvatarFieldFormUser/AvatarFieldFormUser.js","components/Form/FormUser/FormUser.styled.jsx","components/Form/FormUser/FormUser.js","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\nconst validFileExtensions = {\n  image: ['jpg', 'gif', 'png', 'jpeg', 'svg', 'webp'],\n};\n\nconst isValidFileType = value => {\n  if (typeof value === 'string' && value.includes('image')) return true;\n  if (value.length === 0) return true;\n  const fileName = value[0].name.toLowerCase();\n  return validFileExtensions['image'].indexOf(fileName.split('.').pop()) > -1;\n};\n\nexport const FormUserSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .max(16, 'Name may contain only 16 characters'),\n  phone: Yup.string().matches(phoneRegExp, {\n    message:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    excludeEmptyString: true,\n  }),\n  birthday: Yup.date('Invalid date format'),\n  skype: Yup.string().max(16, 'Skype may contain only 16 characters'),\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('This field is required'),\n  userImgUrl: Yup.mixed().test('is-valid-type', 'Ivalid image type', value => {\n    return value === '' || isValidFileType(value);\n  }),\n});\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'InterRegular';\n  font-size: 14px;\n  line-height: 15px;\n\n  color: ${props => props.theme.variable.bgReversLabel};\n`;\n\nexport const Input = styled.input`\n  font-family: 'InterSemiBold';\n  font-size: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n  outline: none;\n  border: 1px solid;\n  border-radius: 8px;\n  border-color: ${props => props.theme.variable.borderProfileColor};\n  color: ${props => props.theme.variable.text};\n  padding: 0.875rem;\n\n  width: 100%;\n\n  &::placeholder {\n    font-family: 'InterRegularr';\n    font-size: 16px;\n    line-height: 18px;\n    color: 'inherit';\n  }\n\n  &[type='time']::-webkit-calendar-picker-indicator {\n    background: none;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Label, Input } from './FormField.styled';\n\n\nexport const FormField = ({\n  id,\n  inputName,\n  type,\n  placeholder,\n  label,\n  register,\n}) => {\n  return (\n    <div>\n      <Label htmlFor={id}>{label}</Label>\n      <Input\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        {...register(inputName)}\n      />\n    </div>\n  );\n};\n\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n};","import { nanoid } from '@reduxjs/toolkit';\n\nexport const userFormInputs = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nanoid(),\n    label: 'User Name',\n    placeholder: 'Enter your name',\n  },\n  {\n    inputName: 'phone',\n    type: 'tel',\n    id: nanoid(),\n    label: 'Phone',\n    placeholder: 'Enter phone',\n  },\n  {\n    inputName: 'birthday',\n    type: 'date',\n    id: nanoid(),\n    label: 'Birthday',\n    placeholder: 'DD/MM/YYYY',\n  },\n  {\n    inputName: 'skype',\n    type: 'string',\n    id: nanoid(),\n    label: 'Skype',\n    placeholder: 'Add a skype number',\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: nanoid(),\n    label: 'Email',\n    placeholder: 'Enter email',\n  },\n];\n\nexport const userAvatarInput = {\n  inputName: 'userImgUrl',\n  type: 'file',\n  id: nanoid(),\n  label: '',\n  placeholder: '',\n};\n","import styled from 'styled-components';\n\nexport const Svg = styled.svg`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n`;\n\nexport const UserAvatarWrapper = styled.div`\n  position: relative;\n  text-align: center;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n\n  margin-bottom: 1.125rem;\n  margin-top: -37px;\n\n  border-radius: 50%;\n  border: 2px solid #3e85f3;\n  background-color: none;\n  overflow: hidden;\n\n  & img {\n    object-fit: cover;\n    height: 100%;\n    width: 100%;\n  }\n\n  @media (min-width: 768px) {\n    margin-top: 40px;\n    width: 124px;\n    height: 124px;\n  }\n\n  @media (min-width: 1087px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const HiddenInput = styled.input`\n  position: absolute;\n  top: 1.4375rem;\n  right: 0.875rem;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 0.875rem;\n  height: 0.875rem;\n  border: 0;\n  padding: 0;\n\n  border-radius: 50%;\n  background-color: #3e85f3;\n\n  :before {\n    position: absolute;\n    content: '+';\n\n    width: 0.875rem;\n    height: 0.875rem;\n\n    font-size: 0.9375rem;\n    line-height: 0.8125rem;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* color: ; */\n    background-color: #3e85f3;\n  }\n\n  @media (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;\n\n    top: 9.0625rem;\n    right: 1.5rem;\n\n    :before {\n      position: absolute;\n      content: '+';\n      /* color: ; */\n      font-family: Inter;\n      font-size: 18px;\n      line-height: 1.375rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 24px;\n      height: 24px;\n      /* background-color: ; */\n    }\n  }\n\n  @media (min-width: 1087px) {\n    top: 10.3125rem;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  position: relative;\n  padding-top: 10px;\n  > h3 {\n    color: ${props => props.theme.variable.text};\n    font-family: InterBold;\n    font-size: 18px;\n    line-height: 1.125rem;\n\n    margin-bottom: 0.25rem;\n\n    @media (min-width: 768px) {\n      font-size: 1.125rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  > p {\n    color: ${props => props.theme.variable.textAvatar};\n    font-family: InterSemiBold;\n    font-size: 14px;\n    line-height: 0.875rem;\n\n    @media (min-width: 768px) {\n      font-size: 0.875rem;\n      line-height: 1.125rem;\n    }\n  }\n`;\n","import sprite from '../../images/icons.svg';\n\nimport {\n  HiddenInput,\n  Label,\n  Svg,\n  UserAvatarWrapper,\n  InfoWrapper,\n} from './AvatarFieldFormUser.styled';\n\nconst setFileUrl = (file, cbSetFileUrl) => {\n  if (!file) return cbSetFileUrl(null);\n  const fileReader = new FileReader();\n  fileReader.readAsDataURL(file);\n  fileReader.onload = () => {\n    cbSetFileUrl(fileReader.result);\n  };\n};\n\nexport const AvatarFieldFormUser = ({\n  userName,\n  inputName,\n  type,\n  id,\n  currentAvatarURL,\n  setCurrentAvatarURL,\n  setIsDisabled,\n  register,\n}) => {\n  return (\n    <UserAvatarWrapper>\n      <Label htmlFor={id}>\n        {!currentAvatarURL ? (\n          <p>\n            <Svg>\n            <use href={`${sprite}#icon-user`} />\n            </Svg>\n          </p>\n        ) : (\n          <img src={currentAvatarURL} alt=\"user_photo\" />\n        )}\n      </Label>\n      <HiddenInput\n        {...register(inputName)}\n        id={id}\n        type={type}\n        accept=\"image/*\"\n        onChange={e => {\n          const file = e.target.files[0];\n          setFileUrl(file, setCurrentAvatarURL);\n          setIsDisabled(false);\n          return e;\n        }}\n      />\n      <InfoWrapper>\n        <h3>{userName}</h3>\n        <p>User</p>\n      </InfoWrapper>\n    </UserAvatarWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n\n  & > button {\n    padding: 14px 50px;\n    margin-top: 0px;\n    margin-bottom: 40px;\n\n    @media (min-width: 768px) {\n      padding: 15px 84px;\n    }\n\n    @media (min-width: 1087px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const FormBody = styled.div`\n  width: 100%;\n  display: grid;\n  padding: 0px 18px;\n  margin: 40px 0;\n  gap: 18px;\n\n  @media (min-width: 768px) {\n    max-width: 354px;\n    padding: 0px;\n  }\n\n  @media (min-width: 1078px) {\n    max-width: 758px;\n\n    grid-template-columns: 1fr 1fr;\n    column-gap: 50px;\n    row-gap: 24px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1080px;\n    padding-left: 164px;\n    padding-right: 164px;\n    margin-top: 44px;\n    margin-bottom: 88px;\n  }\n\n  @media (min-width: 2560px) {\n    max-width: 1440px;\n    padding: 50px;\n    grid-template-columns: repeat(auto-fit, minmax(345px, 1fr));\n  }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  font-family: 'Inter', sans-serif;\n  margin-right: 8px;\n  & .react-datepicker__today-button {\n    border: none;\n    background: none;\n  }\n  & input {\n    display: inline;\n\n    text-align: center;\n    padding: 0;\n    background-color: #3e85f3;\n    outline: none;\n    border: none;\n    border-radius: 8px;\n    height: 30px;\n\n    width: 140px; ///\n\n    color: white;\n    text-transform: uppercase;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: calc(14 / 18);\n  }\n  & .react-datepicker {\n    background-color: #3e85f3;\n    color: white;\n    border-radius: 16px;\n  }\n  & .react-datepicker__header {\n    background-color: #3e85f3;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__triangle::after,\n  & .react-datepicker__triangle::before {\n    background-color: #3e85f3;\n    display: none;\n  }\n  & .react-datepicker__current-month {\n    font-size: 16px;\n    margin-bottom: 18px;\n  }\n  & .react-datepicker__day-name,\n  & .react-datepicker__day.react-datepicker__day--outside-month {\n    color: rgba(255, 255, 255, 0.5);\n  }\n\n  & .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  & .react-datepicker__current-month {\n    color: white;\n  }\n  & .react-datepicker__week:last-of-type {\n    margin-bottom: 0;\n  }\n  & .react-datepicker__week:not(:last-of-type) {\n    margin-bottom: 7px;\n  }\n  & .react-datepicker__day.react-datepicker__day--selected {\n    border-radius: 50%;\n    color: #3e85f3;\n\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__day.react-datepicker__day--today {\n    background-color: #fff;\n    border-radius: 50%;\n    color: #3e85f3;\n    font-weight: 500;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    border: none;\n    background: none;\n  }\n  & .react-datepicker__day {\n    color: inherit;\n    font-size: 14px;\n  }\n`;\n// export const ControlWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   margin-bottom: 18px;\n// `;\n\nexport const Controls = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: InterRegular;\n  font-size: 14px;\n  width: 262px;\n  height: 48px;\n  padding: 15px, 83px;\n  background-color: ${props => props.theme.variable.buttonBg};\n  border-radius: 16px;\n  color: #fff;\n\n  &:disabled {\n    background-color: rgb(163, 168, 173);\n    color: ${props => props.theme.variable.btndisActive};\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.variable.btnColorActive};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n`;\n","import { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\n// import { useNavigate } from 'react-router-dom';\n\nimport { selectUser } from 'redux/auth/selectors';\n\nimport { updateUser } from '../../../redux/auth/operations';\n\nimport { useForm } from 'react-hook-form';\n\nimport { FormUserSchema } from './consts/FormUserSchema';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { parse } from 'date-fns';\n\nimport { FormField } from './FormField/FormField';\n\nimport { userAvatarInput, userFormInputs } from './consts/FormUserInputs';\n\nimport { AvatarFieldFormUser } from '../../AvatarFieldFormUser/AvatarFieldFormUser';\n\nimport { Form, FormBody, DatePickerWrapper, Controls } from './FormUser.styled';\n\nimport ReactDatePicker from 'react-datepicker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// import FormUserButton from '../FormUserButton/FormUserButton';\n\nconst today = new Date();\n\nexport const FormUser = () => {\n  const { name, email, avatarURL, phone, skype, birthday } =\n    useSelector(selectUser);\n\n  console.log(name);\n  console.log(email);\n  console.log(avatarURL);\n  console.log(phone);\n  console.log(skype);\n  console.log(birthday);\n\n  const {\n    register: reg,\n    // control,\n    handleSubmit,\n    formState: {\n      // errors,\n      isDirty,\n      dirtyFields,\n    },\n  } = useForm({\n    resolver: yupResolver(FormUserSchema),\n    defaultValues: {\n      name,\n      email,\n      phone: !phone ? '' : phone,\n      birthday: !birthday ? today : parse(birthday, 'yyyy-MM-dd', today),\n      skype: !skype ? '' : skype,\n      avatarURL: !avatarURL ? '' : avatarURL,\n    },\n  });\n\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [currentAvatarURL, setCurrentAvatarURL] = useState(avatarURL);\n\n  // const [] = useAuth();\n\n  // const navigate = useNavigate();\n\n  const formatDate = date => {\n    if (typeof date === 'string') return date;\n    const y = date.getFullYear();\n    const m = date.getMonth();\n    const d = date.getDate();\n\n    return `${y}-${(m + 1).toString().padStart(2, '0')}-${d\n      .toString()\n      .padStart(2, '0')}`;\n  };\n\n  // useEffect(() => {\n  //   if () navigate(0);\n  // }, []);\n\n  const onSubmit = async data => {\n    const preparedBirthday =\n      formatDate(data.birthday) === formatDate(today)\n        ? null\n        : formatDate(data.birthday);\n    const preparedUserImgUrl = data.userImgUrl === '' ? null : currentAvatarURL;\n    const preparedPhone = data.phone === '' ? null : Number(data.phone);\n    const preparedSkype = data.skype === '' ? null : data.skype;\n    const preparedData = {\n      ...data,\n      phone: preparedPhone,\n      skype: preparedSkype,\n      birthday: preparedBirthday,\n      userImgUrl: preparedUserImgUrl,\n    };\n    updateUser(preparedData);\n    setIsDisabled(true);\n  };\n\n  useEffect(() => {\n    const checkIsDirty = () => {\n      if (currentAvatarURL === avatarURL) {\n        if (isDirty) setIsDisabled(false);\n        if (!isDirty) setIsDisabled(true);\n        // if (isError && error?.status !== 413) setIsDisabled(true);\n      }\n    };\n\n    checkIsDirty();\n  }, [isDirty, dirtyFields, currentAvatarURL, avatarURL]);\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)} autoComplete=\"false\">\n      <AvatarFieldFormUser\n        userName={name}\n        // errors={errors}\n        register={reg}\n        currentAvatarURL={currentAvatarURL}\n        setCurrentAvatarURL={setCurrentAvatarURL}\n        setIsDisabled={setIsDisabled}\n        {...userAvatarInput}\n      />\n      <FormBody>\n        {userFormInputs.map(input =>\n          input.type !== 'date' ? (\n            <FormField key={input.id} {...input} register={reg} />\n          ) : (\n            <DatePickerWrapper>\n              <ReactDatePicker\n                key={input.id}\n                onChange={value => {}}\n                // calendarStartDay={1}\n                // closeOnScroll={true}\n                // formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n              />\n            </DatePickerWrapper>\n          )\n        )}\n      </FormBody>\n      <Controls type=\"submit\" function=\"save\" disabled={isDisabled}>\n        Save changes\n      </Controls>\n    </Form>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  width: 100vw;\n\n  padding: 0 20px 95px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 64px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 289px);\n    padding: 0 32px 32px 32px;\n  }\n`;","import { FormUser } from '../../components/Form/FormUser/FormUser';\n\nimport { Outlet } from 'react-router-dom';\n \nimport { PageWrapper } from './AccountPage.styled';\n\nexport default function AccountPage() {\n  return (\n    <div>\n      <PageWrapper>\n      <FormUser />\n      <Outlet />\n      </PageWrapper>\n    </div>\n  );\n}"],"names":["nameRegExp","RegExp","validFileExtensions","image","FormUserSchema","Yup","shape","name","required","matches","max","phone","message","excludeEmptyString","birthday","skype","email","userImgUrl","test","value","includes","length","fileName","toLowerCase","indexOf","split","pop","isValidFileType","Label","styled","_templateObject","_taggedTemplateLiteral","props","theme","variable","bgReversLabel","Input","_templateObject2","secondaryBg","borderProfileColor","text","FormField","_ref","id","inputName","type","placeholder","label","register","_jsxs","children","_jsx","htmlFor","_objectSpread","userFormInputs","nanoid","userAvatarInput","Svg","UserAvatarWrapper","_templateObject3","HiddenInput","_templateObject4","InfoWrapper","_templateObject5","textAvatar","AvatarFieldFormUser","userName","currentAvatarURL","setCurrentAvatarURL","setIsDisabled","src","alt","href","concat","sprite","accept","onChange","e","file","cbSetFileUrl","fileReader","FileReader","readAsDataURL","onload","result","setFileUrl","target","files","Form","FormBody","DatePickerWrapper","Controls","buttonBg","btndisActive","btnColorActive","today","Date","FormUser","_useSelector","useSelector","selectUser","avatarURL","console","log","_useForm","useForm","resolver","yupResolver","defaultValues","parse","reg","handleSubmit","_useForm$formState","formState","isDirty","dirtyFields","_useState","useState","_useState2","_slicedToArray","isDisabled","_useState3","_useState4","formatDate","date","y","getFullYear","m","getMonth","d","getDate","toString","padStart","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","preparedBirthday","preparedUserImgUrl","preparedPhone","preparedSkype","preparedData","wrap","_context","prev","next","Number","updateUser","stop","_x","apply","arguments","useEffect","autoComplete","map","input","ReactDatePicker","function","disabled","PageWrapper","AccountPage","Outlet"],"sourceRoot":""}