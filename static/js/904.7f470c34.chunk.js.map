{"version":3,"file":"static/js/904.7f470c34.chunk.js","mappings":"yVAEMA,EAAa,IAAIC,OACrB,0HAiBWC,EAAiBC,EAAAA,KAAaC,MAAM,CAC/CC,KAAMF,EAAAA,KACHG,SAAS,0BACTC,QACCP,EACA,0IAEDQ,IAAI,GAAI,uCACXC,MAAON,EAAAA,KAAaI,QArBpB,kFAqByC,CACvCG,QACE,+FACFC,oBAAoB,IAEtBC,SAAUT,EAAAA,GAAS,uBACnBU,MAAOV,EAAAA,KAAaK,IAAI,GAAI,wCAC5BM,MAAOX,EAAAA,KACJW,MAAM,wBACNR,SAAS,4B,6BCnCDS,EAAkBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uNAe5BC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wLAEtB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAASC,aAAa,IAWzCC,EAAQT,EAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2oBAMX,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAASI,WAAW,IAGzC,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,SAASK,kBAAkB,IAK3D,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,SAASM,IAAI,I,SCxChCC,EAAY,SAAHC,GAQf,IAPLC,EAAED,EAAFC,GACAC,EAASF,EAATE,UACAC,EAAIH,EAAJG,KACAC,EAAWJ,EAAXI,YACAC,EAAKL,EAALK,MACAC,EAAQN,EAARM,SACAC,EAAaP,EAAbO,cAEA,OACEC,EAAAA,EAAAA,MAACxB,EAAe,CAAAyB,SAAA,EACdC,EAAAA,EAAAA,KAACtB,EAAK,CAACuB,QAASV,EAAGQ,SAAEJ,KACrBK,EAAAA,EAAAA,KAAChB,GAAKkB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJX,GAAIA,EACJE,KAAMA,EACNC,YAAaA,GACTE,EAASJ,IAAU,IACvBW,SAAU,WACRN,GAAc,EAChB,OAIR,E,UCzBaO,EAAiB,CAC5B,CACEZ,UAAW,OACXC,KAAM,OACNF,IAAIc,EAAAA,EAAAA,UACJV,MAAO,YACPD,YAAa,mBAEf,CACEF,UAAW,WACXC,KAAM,OACNF,IAAIc,EAAAA,EAAAA,UACJV,MAAO,WACPD,YAAa,cAEf,CACEF,UAAW,QACXC,KAAM,QACNF,IAAIc,EAAAA,EAAAA,UACJV,MAAO,QACPD,YAAa,eAEf,CACEF,UAAW,QACXC,KAAM,MACNF,IAAIc,EAAAA,EAAAA,UACJV,MAAO,QACPD,YAAa,eAEf,CACEF,UAAW,QACXC,KAAM,SACNF,IAAIc,EAAAA,EAAAA,UACJV,MAAO,QACPD,YAAa,uBAIJY,EAAkB,CAC7Bd,UAAW,YACXC,KAAM,OACNF,IAAIc,EAAAA,EAAAA,UACJV,MAAO,GACPD,YAAa,I,UC3CDa,EAAmBhC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uFAU7B+B,EAAkBjC,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qiBAsC7BgC,EAAoBlC,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,0HAS9BC,EAAQH,EAAAA,GAAAA,MAAYmC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,ymBA6CpBkC,EAAcpC,EAAAA,GAAAA,MAAYqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,y/BA0CrB,SAAAG,GAAK,OAAIA,EAAMC,MAAMgC,gBAAgB,IAQ1B,SAAAjC,GAAK,OAAIA,EAAMC,MAAMiC,eAAe,IASpDC,EAAcxC,EAAAA,GAAAA,IAAUyC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,igBAIxB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAASM,IAAI,IAclC,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,SAASmC,UAAU,IChKxCC,EAAsB,SAAH5B,GAUzB,IATL6B,EAAQ7B,EAAR6B,SACA3B,EAASF,EAATE,UACAC,EAAIH,EAAJG,KACAF,EAAED,EAAFC,GACA6B,EAAS9B,EAAT8B,UACAC,EAAgB/B,EAAhB+B,iBACAC,EAAmBhC,EAAnBgC,oBACAzB,EAAaP,EAAbO,cACAD,EAAQN,EAARM,SAGA,OACEE,EAAAA,EAAAA,MAACW,EAAiB,CAAAV,SAAA,EAChBC,EAAAA,EAAAA,KAACtB,EAAK,CAACuB,QAASV,EAAGQ,SAChBsB,GACCrB,EAAAA,EAAAA,KAAA,OAAKuB,IAAKC,IAAIC,gBAAgBJ,GAAmBK,IAAI,eACnDN,GACFpB,EAAAA,EAAAA,KAAA,OAAKuB,IAAKH,EAAWM,IAAI,gBAEzB1B,EAAAA,EAAAA,KAAA,KAAAD,UACEC,EAAAA,EAAAA,KAACO,EAAgB,CAAAR,UACfC,EAAAA,EAAAA,KAAA,OAAK2B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,uBAK5B7B,EAAAA,EAAAA,KAACW,GAAWT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNN,EAASJ,IAAU,IACvBD,GAAIA,EACJE,KAAMA,EACNqC,OAAO,UACP3B,SAAU,SAAA4B,GACRT,EAAoBS,EAAEC,OAAOC,MAAM,IACnCpC,GAAc,EAChB,MAEFG,EAAAA,EAAAA,KAAA,KAAAD,UACEC,EAAAA,EAAAA,KAACQ,EAAe,CAAAT,UACdC,EAAAA,EAAAA,KAAA,OAAK2B,KAAME,EAAAA,EAAS,oBAIxB/B,EAAAA,EAAAA,MAACiB,EAAW,CAAAhB,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAAD,SAAKoB,KACLnB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAIX,EClEamC,EAAO3D,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0YAOT,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAASI,WAAW,IAkBlDiD,EAAW5D,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kyBAyCrB2D,GAAiB7D,EAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,ofASrB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAASuD,QAAQ,IAM/C,SAAAzD,GAAK,OAAIA,EAAMC,MAAMC,SAASwD,YAAY,IAO/B,SAAA1D,GAAK,OAAIA,EAAMC,MAAMC,SAASyD,cAAc,IAKvD7D,GAAQH,EAAAA,GAAAA,MAAYmC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,oMAWtB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAASC,aAAa,IAGzCyD,GAA4BjE,EAAAA,GAAAA,IAAUqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,m9FAc3B,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAASI,WAAW,IAEzC,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,SAASK,kBAAkB,IACjD,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,SAASK,kBAAkB,IAO1D,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,SAASM,IAAI,IA2HlCqD,GAAiBlE,EAAAA,GAAAA,IAAUyC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,iJA0C3BiE,IAjCWnE,EAAAA,GAAAA,OAAaoE,IAAAA,GAAAlE,EAAAA,EAAAA,GAAA,4kBAOf,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAAS8D,iBAAiB,IACzD,SAAAhE,GAAK,OAAIA,EAAMC,MAAMC,SAAS+D,uBAAuB,IACtD,SAAAjE,GAAK,OAAIA,EAAMC,MAAMC,SAASgE,iBAAiB,IAGlC,SAAAxD,GAAQ,OAAAA,EAALT,MAAkBC,SAASiE,mBAAmB,IAC5D,SAAAC,GAAQ,OAAAA,EAALnE,MAAkBC,SAASmE,gBAAgB,IAoBtB1E,EAAAA,GAAAA,IAAU2E,IAAAA,GAAAzE,EAAAA,EAAAA,GAAA,yJAGtC,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,SAASgE,iBAAiB,K,iEC1S3CK,GAAqB,SAAH7D,GAA2C,IAArC8D,EAAe9D,EAAf8D,gBAAiBC,EAAY/D,EAAZ+D,aACpD,OACErD,EAAAA,EAAAA,KAAAsD,EAAAA,SAAA,CAAAvD,UACEC,EAAAA,EAAAA,KAACuD,KAAe,CACdC,UAAUC,EAAAA,GAAAA,SAAMJ,EAAc,aAAc,IAAIK,MAChDC,kBAAgB,EAChBC,mBAAiB,EACjBC,QAAS,IAAIH,KAAK,cAClBI,SAASC,EAAAA,GAAAA,SAAS,IAAIL,KAAQ,GAC9BM,eAAe,EACfC,cAAe,SAAAC,GAAS,OAAIA,EAAUC,OAAO,EAAG,EAAE,EAClDhE,SAAU,SAAAiE,GACRhB,GAAgBiB,EAAAA,GAAAA,SAAOD,EAAO,cAChC,KAiBR,E,WCTaE,GAAW,WACtB,IAAAC,GACEC,EAAAA,EAAAA,IAAYC,EAAAA,IADN7G,EAAI2G,EAAJ3G,KAAMS,EAAKkG,EAALlG,MAAO+C,EAASmD,EAATnD,UAAWpD,EAAKuG,EAALvG,MAAOI,EAAKmG,EAALnG,MAAOD,EAAQoG,EAARpG,SAGxCuG,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwCC,EAAAA,EAAAA,IAAQ,CAC9CC,UAAUC,EAAAA,EAAAA,GAAYtH,GACtBuH,KAAM,WACNC,cAAe,CACbrH,KAAAA,EACAS,MAAAA,EACAL,MAAQA,GAAQ,GAChBG,SAAUA,GAAsB,aAChCC,MAAQA,GAAQ,GAChBgD,UAAYA,GAAY,MATV8D,EAAGN,EAAbhF,SAAeuF,EAAYP,EAAZO,aAavBC,GAAoCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAUF,EAAA,GAAEzF,EAAayF,EAAA,GAChCG,GAAgDJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAvDpE,EAAgBqE,EAAA,GAAEpE,EAAmBoE,EAAA,GAC5CC,GAAwCN,EAAAA,EAAAA,UAAS,cAAaO,GAAAL,EAAAA,EAAAA,GAAAI,EAAA,GAAvDtC,EAAYuC,EAAA,GAAExC,EAAewC,EAAA,IAEpCC,EAAAA,EAAAA,YAAU,WACJ1H,GACFiF,EAAgBjF,EAEpB,GAAG,CAACA,IAEJ,IAAM2H,EAAQ,eAAAxG,GAAAyG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAI,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEnBP,EAA+B,KAAfD,EAAK9H,MAAeA,EAAQ8H,EAAK9H,MACjDgI,EAA+B,KAAfF,EAAKnI,MAAe,IAAMmI,EAAKnI,MAC/CsI,EAA+B,KAAfH,EAAK/H,MAAe,GAAK+H,EAAK/H,MAE9CmI,EAAW,IAAIK,SAEjBhJ,IAASuI,EAAKvI,MAAM2I,EAASM,OAAO,OAAQV,EAAKvI,MACjDS,IAAU+H,GAAeG,EAASM,OAAO,QAAST,EAAcU,QAChE9I,IAAUqI,GAAeE,EAASM,OAAO,QAASR,EAAcS,QAChE1I,IAAUkI,GAAeC,EAASM,OAAO,QAASP,EAAcQ,QAChE3I,IAAakF,GACfkD,EAASM,OAAO,WAAYxD,EAAayD,QACvCzF,GAAkBkF,EAASM,OAAO,YAAaxF,GAEnD0F,QAAQC,IAAIT,GAEZ7B,GAASuC,EAAAA,EAAAA,IAAWV,IAEpBW,GAAAA,OAAAA,QAAe,8BAA8B,yBAAAT,EAAAU,OAAA,GAAAjB,EAAA,KAC9C,gBArBakB,GAAA,OAAA9H,EAAA+H,MAAA,KAAAC,UAAA,KAuBd,OACExH,EAAAA,EAAAA,MAACoC,EAAI,CACH4D,SAAUX,EAAaW,GACvByB,aAAa,MACbC,QAAQ,sBAAqBzH,SAAA,EAE7BC,EAAAA,EAAAA,KAACkB,GAAmBhB,EAAAA,EAAAA,GAAA,CAClBT,KAAK,OACL0B,SAAUvD,EACVgC,SAAUsF,EACV9D,UAAWA,EACXC,iBAAkBA,EAClBC,oBAAqBA,EACrBzB,cAAeA,GACXS,KAENN,EAAAA,EAAAA,KAACmC,EAAQ,CAAApC,SACNK,EAAeqH,KAAI,SAAAC,GAAK,MACR,SAAfA,EAAMjI,MACJO,EAAAA,EAAAA,KAACX,GAASa,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEJwH,GAAK,IACT9H,SAAUsF,EACVrF,cAAeA,IAHV6H,EAAMnI,KAMbS,EAAAA,EAAAA,KAACyC,GAAc,CAAA1C,UACbD,EAAAA,EAAAA,MAAC0C,GAAyB,CAAAzC,SAAA,EACxBD,EAAAA,EAAAA,MAACpB,GAAK,CAAAqB,SAAA,CAAC,YACPC,EAAAA,EAAAA,KAAC0C,GAAqB,CAAA3C,UACpBC,EAAAA,EAAAA,KAAA,OAAK2B,KAAI,GAAAC,OAAKC,EAAAA,EAAM,8BAGtB7B,EAAAA,EAAAA,KAACmD,IAAkBjD,EAAAA,EAAAA,GAAA,CACjBkD,gBAAiBA,EACjBC,aAAcA,GAEVqE,GADCA,EAAMnI,QAVImI,EAAMnI,GAe5B,OAGLS,EAAAA,EAAAA,KAACoC,GAAc,CAAC3C,KAAK,SAASkI,SAAS,OAAOC,SAAUpC,EAAWzF,SAAC,mBAK1E,E,WC7Ha8H,GAActJ,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+MCKtB,SAASqJ,KACtB,OACE9H,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAC+H,GAAW,CAAA9H,SAAA,EACZC,EAAAA,EAAAA,KAACsE,GAAQ,KACTtE,EAAAA,EAAAA,KAAC+H,GAAAA,GAAM,QAIb,C","sources":["components/Form/FormUser/consts/FormUserSchema.js","components/Form/FormUser/FormField/FormField.styled.jsx","components/Form/FormUser/FormField/FormField.js","components/Form/FormUser/consts/FormUserInputs.js","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.styled.jsx","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.js","components/Form/FormUser/FormUser.styled.jsx","components/Form/FormUser/DatePickerFormUser/DatePickerFormUser.js","components/Form/FormUser/FormUser.js","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\n// const validFileExtensions = {\n//   image: ['jpg', 'gif', 'png', 'jpeg', 'svg', 'webp'],\n// };\n\n// const isValidFileType = value => {\n//   if (typeof value === 'string' && value.includes('image')) return true;\n//   if (value.length === 0) return true;\n//   const fileName = value[0]?.name.toLowerCase();\n//   return validFileExtensions['image'].indexOf(fileName.split('.').pop()) > -1;\n// };\n\nexport const FormUserSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .max(16, 'Name may contain only 16 characters'),\n  phone: Yup.string().matches(phoneRegExp, {\n    message:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    excludeEmptyString: true,\n  }),\n  birthday: Yup.date('Invalid date format'),\n  skype: Yup.string().max(16, 'Skype may contain only 16 characters'),\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('This field is required'),\n  // avatarURL: Yup.mixed().test('is-valid-type', 'Ivalid image type', value => {\n  //   return value === '' || isValidFileType(value);\n  // }),\n});\n","import styled from 'styled-components';\n\nexport const InputFieldThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 299px;\n  height: 64px;\n\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 72px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 12px;\n  color: ${props => props.theme.variable.bgReversLabel};\n\n  line-height: calc(14 / 12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n\n    line-height: calc(18 / 14);\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 42px;\n\n  padding: 12px 14px;\n\n  background-color: ${props => props.theme.variable.secondaryBg};\n  outline: none;\n\n  border: 1px solid ${props => props.theme.variable.borderProfileColor};\n  border-radius: 8px;\n\n  font-size: 14px;\n  font-weight: 600;\n  color: ${props => props.theme.variable.text};\n  line-height: calc(18 / 14);\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n    height: 46px;\n\n    padding: 14px 18px;\n\n    font-size: 16px;\n    line-height: calc(18 / 16);\n  }\n\n  &::placeholder {\n    /* font-size: 16px;\n    line-height: 18px; */\n    color: 'inherit'; //should think about placeholder color\n  }\n\n  &[type='time']::-webkit-calendar-picker-indicator {\n    background: none;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Label, Input, InputFieldThumb } from './FormField.styled';\n\nexport const FormField = ({\n  id,\n  inputName,\n  type,\n  placeholder,\n  label,\n  register,\n  setIsDisabled,\n}) => {\n  return (\n    <InputFieldThumb>\n      <Label htmlFor={id}>{label}</Label>\n      <Input\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        {...register(inputName)}\n        onChange={() => {\n          setIsDisabled(false);\n        }}\n      />\n    </InputFieldThumb>\n  );\n};\n\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n};\n","import { nanoid } from '@reduxjs/toolkit';\n\nexport const userFormInputs = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nanoid(),\n    label: 'User Name',\n    placeholder: 'Enter your name',\n  },\n  {\n    inputName: 'birthday',\n    type: 'date',\n    id: nanoid(),\n    label: 'Birthday',\n    placeholder: 'DD/MM/YYYY',\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: nanoid(),\n    label: 'Email',\n    placeholder: 'Enter email',\n  },\n  {\n    inputName: 'phone',\n    type: 'tel',\n    id: nanoid(),\n    label: 'Phone',\n    placeholder: 'Enter phone',\n  },\n  {\n    inputName: 'skype',\n    type: 'string',\n    id: nanoid(),\n    label: 'Skype',\n    placeholder: 'Add a skype number',\n  }\n];\n\nexport const userAvatarInput = {\n  inputName: 'avatarURL',\n  type: 'file',\n  id: nanoid(),\n  label: '',\n  placeholder: '',\n};\n","import styled from 'styled-components';\n\nexport const  DefaultAvatarSvg = styled.svg`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n`;\n\n\n\n\nexport const  PlusSvgOnAvatar = styled.svg`\nposition: absolute;\nborder-radius: 50%;\nbackground-color: #3e85f3;\ncontent: '+';\nstroke: #FFFFFF;\nfont-family: Inter;\nfont-size: 18px;\nline-height: 1.375rem;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 14px;\nheight: 14px;\n\ntop: 30px;\n  right: 60px;\npointer-events: none;\n\n@media (min-width: 768px) {\n  width: 1.5rem;\n  height: 1.5rem;\n\n  top: 9.0625rem;\n  right: 45px;\n  pointer-events: none;\n\n\n\n  @media (min-width: 1440px) {\n    top: 10.3125rem;\n    pointer-events: none;\n  }\n\n}\n`;\n\n\nexport const UserAvatarWrapper = styled.div`\n  position: relative;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    // text-align: center;\n  }\n`;\n\nexport const Label = styled.label`\nposition:relative;\n\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n\n  margin-bottom: 18px;\n  margin-top: -30px;\n\n  border-radius: 50%;\n  border: 2px solid #3e85f3;\n  background-color: none;\n  overflow: hidden;\n  down: 60px;\n  left: 45px;\n\n  \n\n\n  & img {\n    object-fit: cover;\n    align-items:center;\n    height: 100%;\n    width: 100%;\n  }\n\n\n  @media (min-width: 768px) {\n    margin-top: 40px;\n    width: 124px;\n    height: 124px;\n  \n    left: 17px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const HiddenInput = styled.input`\n  position: relative;\n  top: -29px;\n  left: 92px;\n\n  display: flex;\n  // justify-content: center;\n  align-items: center;\n\n  width: 12px;\n  height: 12px;\n  border: 0;\n  padding: 0;\n\n  border-radius: 50%;\n  background-color: #3e85f3;\n\n  // :before {\n  //   position: absolute;\n  //   content: '+';\n\n  //   width: 14px;\n  //   height: 14px;\n\n  //   font-size: 0.9375rem;\n  //   line-height: 0.8125rem;\n\n\n  //   /* color: ; */\n  //   background-color: #3e85f3;\n  // }\n\n  @media (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;\n\n    top: -37px;\n    left: 97px;\n\n    // :before {\n    //   position: absolute;\n    //   content: '+';\n    //   color: ${props => props.theme.componentPrimary};\n    //   font-size: 1.5625rem;\n    //   line-height: 1.375rem;\n    //   display: flex;\n    //   justify-content: center;\n    //   align-items: center;\n    //   width: 24px;\n    //   height: 24px;\n    //   background-color: ${props => props.theme.componentAccent};\n    // }\n  }\n\n  @media (min-width: 1440px) {\n    top: -37px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  position: relative;\n  padding-top: 10px;\n  > h3 {\n    color: ${props => props.theme.variable.text};\n    font-family: InterBold;\n    font-size: 18px;\n    line-height: 1.125rem;\n\n    margin-bottom: 0.25rem;\n\n    @media (min-width: 768px) {\n      font-size: 1.125rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  > p {\n    color: ${props => props.theme.variable.textAvatar};\n    font-family: InterSemiBold;\n    font-size: 14px;\n    line-height: 0.875rem;\n\n    @media (min-width: 768px) {\n      font-size: 0.875rem;\n      line-height: 1.125rem;\n    }\n  }\n`;\n","// import { useEffect } from 'react';\nimport sprite from '../../../../images/icons.svg';\n\nimport {\n  HiddenInput,\n  Label,\n  DefaultAvatarSvg,\n  PlusSvgOnAvatar,\n  UserAvatarWrapper,\n  InfoWrapper,\n} from './AvatarFieldFormUser.styled';\n\n// const setFileUrl = (file, cbSetFileUrl) => {\n//   if (!file) return cbSetFileUrl(null);\n//   const fileReader = new FileReader();\n//   fileReader.readAsDataURL(file);\n//   fileReader.onload = () => {\n//     cbSetFileUrl(fileReader.result);\n//   };\n// };\n\nexport const AvatarFieldFormUser = ({\n  userName,\n  inputName,\n  type,\n  id,\n  avatarURL,\n  currentAvatarURL,\n  setCurrentAvatarURL,\n  setIsDisabled,\n  register,\n}) => {\n  // useEffect(() => {}, []);\n  return (\n    <UserAvatarWrapper>\n      <Label htmlFor={id}>\n        {currentAvatarURL ? (\n          <img src={URL.createObjectURL(currentAvatarURL)} alt=\"user_photo\" />\n        ) : avatarURL ? (\n          <img src={avatarURL} alt=\"user_photo\" />\n        ) : (\n          <p>\n            <DefaultAvatarSvg>\n              <use href={`${sprite}#icon-user`} />\n            </DefaultAvatarSvg>\n          </p>\n        )}\n      </Label>\n      <HiddenInput\n        {...register(inputName)}\n        id={id}\n        type={type}\n        accept=\"image/*\"\n        onChange={e => {\n          setCurrentAvatarURL(e.target.files[0]);\n          setIsDisabled(false);\n        }}\n      />\n      <p>\n        <PlusSvgOnAvatar>\n          <use href={sprite + '#icon-plus'}></use>\n          {/* <use href={`${sprite}#icon-plus`} /> */}\n        </PlusSvgOnAvatar>\n      </p>\n      <InfoWrapper>\n        <h3>{userName}</h3>\n        <p>User</p>\n      </InfoWrapper>\n    </UserAvatarWrapper>\n  );\n};\n","import styled from 'styled-components';\n\n\n\nexport const Form = styled.form`\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n\n\n  & > button {\n    padding: 14px 50px;\n    margin-top: 0px;\n    margin-bottom: 40px;\n\n    @media screen and (min-width: 768px) {\n      padding: 15px 84px;\n    }\n\n    @media screen and  (min-width: 1440px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const FormBody = styled.div`\n  width: 100%;\n  display: grid;\n  padding:0px  18px;\n  margin: 40px 0;\n  gap: 18px;\n\n  @media screen and  (min-width: 768px) {\n    width: 354px;\n    padding: 0px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 758px;\n    padding:0px;\n\n    grid-auto-flow: column;\n  grid-template-rows: repeat(3, 1fr);\n\n    // grid-template-columns: 1fr 1fr;\n    column-gap: 50px;\n    row-gap: 24px;\n  }\n\n  // @media screen and  (min-width: 1440px) {\n  //   max-width: 1080px;\n  //   padding-left: 164px;\n  //   padding-right: 164px;\n  //   margin-top: 44px;\n  //   margin-bottom: 88px;\n  // }\n\n  // @media screen and (min-width: 2560px) {\n  //   max-width: 1440px;\n  //   padding: 50px;\n  //   grid-template-columns: repeat(auto-fit, minmax(345px, 1fr));\n  // }\n`;\n\n\n\nexport const FormUserButton = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: InterRegular;\n  font-size: 14px;\n  width: 262px;\n  height: 48px;\n  padding: 15px, 83px;\n  background-color: ${props => props.theme.variable.buttonBg};\n  border-radius: 16px;\n  color: #fff;\n\n  &:disabled {\n    background-color: rgb(163, 168, 173);\n    color: ${props => props.theme.variable.btndisActive};\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.variable.btnColorActive};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n`;\n\nexport const Label = styled.label`\n\nposition:relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'InterRegular';\n  font-size: 14px;\n  line-height: 15px;\n\n  color: ${props => props.theme.variable.bgReversLabel};\n`;\n\nexport const DatePickerFormUserWrapper = styled.div`\n  /* font-family: 'Inter', sans-serif;\n  position:relative;\n  margin-right: 8px; */\n  & .react-datepicker__today-button {\n    border: none;\n    background: none;\n    display: none;\n  }\n  & input {\n    // display: inline;\n\n    // font-family: 'InterSemiBold';\n    font-size: 14px;\n    background-color: ${props => props.theme.variable.secondaryBg};\n    outline: none;\n    border: 1px solid ${props => props.theme.variable.borderProfileColor};\n    // border-color: ${props => props.theme.variable.borderProfileColor};\n    border-radius: 8px;\n    // text-align: center;\n    padding: 12px  14px;\n    height: 42px;\n    width: 299px;\n\n    color: ${props => props.theme.variable.text};\n    text-transform: uppercase;\n\n    font-weight: 600;\n    line-height: calc(18 / 14);\n\n    @media screen and (min-width: 768px) {\n      height: 46px;\n      width: 354px;\n      padding: 14px 18px;\n      font-size: 16px;\n    }\n\n    &::placeholder {\n      font-size: 16px;\n      line-height: calc(18 / 16);\n      color: rgba(17,17,17,0.15);\n\n\n\n\n    }\n  }\n\n  & .react-datepicker {\n    background-color: #3e85f3;\n    color: white;\n    border-radius: 16px;\n    padding: 18px;\n  }\n  & .react-datepicker__header {\n    background-color: #3e85f3;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__triangle::after,\n  & .react-datepicker__triangle::before {\n    background-color: #3e85f3;\n    display: none;\n  }\n  & .react-datepicker__current-month {\n    font-size: 20px;\n    margin-bottom: 18px;\n  }\n  & .react-datepicker__day-name {\n    color: #fff;\n    font-size: 14px;\n  }\n  & .react-datepicker__day.react-datepicker__day--outside-month {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 14px;\n  }\n\n  & .react-datepicker__navigation {\n    top: 24px;\n  }\n\n  & .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  & .react-datepicker__current-month {\n    color: white;\n  }\n  & .react-datepicker__week:last-of-type {\n    margin-bottom: 0;\n  }\n  & .react-datepicker__week:not(:last-of-type) {\n    margin-bottom: 7px;\n  }\n  & .react-datepicker__day.react-datepicker__day--selected {\n    border-radius: 50%;\n    color: #3e85f3;\n\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__day.react-datepicker__day--today {\n    background-color: #fff;\n    border-radius: 50%;\n    color: #3e85f3;\n    font-weight: 500;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    border: none;\n    background: none;\n  }\n  & .react-datepicker__day {\n    color: inherit;\n    font-size: 14px;\n  }\n  & .react-datepicker__day--disabled{\n    color: grey\n  }\n\n  .react-datepicker__year-option{\n    color: #3e85f3;\n  }\n  \n  .react-datepicker__year-option:first-of-type{\n    color: #3e85f3;\n    content:^;\n  }\n\n\n  .react-datepicker__month-option{\n    color: #3e85f3;\n  }\n\n  .react-datepicker__month-year-option{\n    color: #3e85f3;\n  }\n  \n\n  .react-datepicker__month-dropdown{\n    color: #3e85f3;\n  }\n\n\n  .react-datepicker__year-dropdown{\n    color: #3e85f3;\n  }\n`;\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  /*  @media screen and (min-width: 768px) {\n    margin-bottom: 18px;\n  } */\n`;\n\nexport const Controls = styled.button`\n  display: none;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 30px;\n  background-color: ${props => props.theme.variable.CalendarLinkColor};\n  border: ${props => props.theme.variable.borderColorWeekCalendar};\n  color: ${props => props.theme.variable.calendarTextColor};\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.variable.mainBackgroundColor};\n    color: ${({ theme }) => theme.variable.activeArrowColor};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n  }\n  &:first-of-type {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right-width: 0.5px;\n  }\n  &:last-of-type {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n    border-left-width: 0.5px;\n  }\n`;\n\n\n\nexport const DatePickerChevronDown = styled.svg`\n\n\nstroke:${props => props.theme.variable.calendarTextColor};\npointer-events:none;\n\nposition:absolute;\n\nwidth:18px;\nheight:18px;\nz-index:10;\ntop:38px;\nright:14px;\n\nfill:none;\n\n`;","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { format, subYears, parse } from 'date-fns';\n\nexport const DatePickerFormUser = ({ setFormBirthday, formBirthday }) => {\n  return (\n    <>\n      <ReactDatePicker\n        selected={parse(formBirthday, 'yyyy-MM-dd', new Date())}\n        showYearDropdown\n        showMonthDropdown\n        minDate={new Date('1970-01-01')}\n        maxDate={subYears(new Date(), 6)}\n        closeOnScroll={false}\n        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n        onChange={value => {\n          setFormBirthday(format(value, 'yyyy-MM-dd'));\n        }}\n        // selected={date}\n        // onChange={value => {\n        //   if (periodType === 'month') {\n        //     navigate(`${periodType}/${format(value, 'yyyy-MM-dd')}`, {});\n        //   } else {\n        //     navigate(`${periodType}/${format(value, 'yyyy-MM-dd')}`, {});\n        //   }\n        // }}\n\n        // dateFormat={periodType === 'month' ? 'MMMM yyyy' : 'dd MMM yyyy'}\n\n        // todayButton=\"Today\"\n        // minDate={new Date(createdAt)}\n      />\n    </>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from '../../../redux/auth/operations';\nimport { useForm } from 'react-hook-form';\nimport { FormUserSchema } from './consts/FormUserSchema';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormField } from './FormField/FormField';\nimport { userAvatarInput, userFormInputs } from './consts/FormUserInputs';\n\n// import {Container} from \"../../../styles/container\"\n\nimport sprite from '../../../images/icons.svg';\nimport { AvatarFieldFormUser } from './AvatarFieldFormUser/AvatarFieldFormUser';\nimport {\n  Form,\n  FormBody,\n  FormUserButton,\n  Label,\n  DatePickerFormUserWrapper,\n  ControlWrapper,\n  DatePickerChevronDown,\n} from './FormUser.styled';\nimport { DatePickerFormUser } from './DatePickerFormUser/DatePickerFormUser';\nimport { Notify } from 'notiflix';\n\nexport const FormUser = () => {\n  const { name, email, avatarURL, phone, skype, birthday } =\n    useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  const { register: reg, handleSubmit } = useForm({\n    resolver: yupResolver(FormUserSchema),\n    mode: 'onSubmit',\n    defaultValues: {\n      name,\n      email,\n      phone: !phone ? '' : phone,\n      birthday: birthday ? birthday : '1900-01-01',\n      skype: !skype ? '' : skype,\n      avatarURL: !avatarURL ? '' : avatarURL,\n    },\n  });\n\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [currentAvatarURL, setCurrentAvatarURL] = useState(null);\n  const [formBirthday, setFormBirthday] = useState('1990-01-01');\n\n  useEffect(() => {\n    if (birthday) {\n      setFormBirthday(birthday);\n    }\n  }, [birthday]);\n\n  const onSubmit = async data => {\n    // const preparedBirthday = formBirthday === '' ? formBirthday : formBirthday;\n    const preparedEmail = data.email === '' ? email : data.email;\n    const preparedPhone = data.phone === '' ? ' ' : data.phone;\n    const preparedSkype = data.skype === '' ? '' : data.skype;\n\n    const formData = new FormData();\n\n    if (name !== data.name) formData.append('name', data.name);\n    if (email !== preparedEmail) formData.append('email', preparedEmail.trim());\n    if (phone !== preparedPhone) formData.append('phone', preparedPhone.trim());\n    if (skype !== preparedSkype) formData.append('skype', preparedSkype.trim());\n    if (birthday !== formBirthday)\n      formData.append('birthday', formBirthday.trim());\n    if (currentAvatarURL) formData.append('avatarURL', currentAvatarURL);\n\n    console.log(formData);\n\n    dispatch(updateUser(formData));\n\n    Notify.success('Changes saved successfully');\n  };\n\n  return (\n    <Form\n      onSubmit={handleSubmit(onSubmit)}\n      autoComplete=\"off\"\n      encType=\"multipart/form-data\"\n    >\n      <AvatarFieldFormUser\n        type=\"file\"\n        userName={name}\n        register={reg}\n        avatarURL={avatarURL}\n        currentAvatarURL={currentAvatarURL}\n        setCurrentAvatarURL={setCurrentAvatarURL}\n        setIsDisabled={setIsDisabled}\n        {...userAvatarInput}\n      />\n      <FormBody>\n        {userFormInputs.map(input =>\n          input.type !== 'date' ? (\n            <FormField\n              key={input.id}\n              {...input}\n              register={reg}\n              setIsDisabled={setIsDisabled}\n            />\n          ) : (\n            <ControlWrapper key={input.id}>\n              <DatePickerFormUserWrapper>\n                <Label>Birthday\n                <DatePickerChevronDown>\n                  <use href={`${sprite}#icon-chevron-down`} />\n                </DatePickerChevronDown>\n                </Label>\n                <DatePickerFormUser\n                  setFormBirthday={setFormBirthday}\n                  formBirthday={formBirthday}\n                  key={input.id}\n                  {...input}\n                />\n              </DatePickerFormUserWrapper>\n            </ControlWrapper>\n          )\n        )}\n      </FormBody>\n      <FormUserButton type=\"submit\" function=\"save\" disabled={isDisabled}>\n        Save changes\n      </FormUserButton>\n    </Form>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const PageWrapper = styled.div`\n\n\n  padding: 0 20px 95px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 64px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px 32px;\n  }\n`;","import { FormUser } from '../../components/Form/FormUser/FormUser';\n\nimport { Outlet } from 'react-router-dom';\n \nimport { PageWrapper } from './AccountPage.styled';\n// import {Container} from '../../styles/container'\n\nexport default function AccountPage() {\n  return (\n    <div>\n      <PageWrapper>\n      <FormUser />\n      <Outlet />\n      </PageWrapper>\n    </div>\n  );\n}"],"names":["nameRegExp","RegExp","FormUserSchema","Yup","shape","name","required","matches","max","phone","message","excludeEmptyString","birthday","skype","email","InputFieldThumb","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","props","theme","variable","bgReversLabel","Input","_templateObject3","secondaryBg","borderProfileColor","text","FormField","_ref","id","inputName","type","placeholder","label","register","setIsDisabled","_jsxs","children","_jsx","htmlFor","_objectSpread","onChange","userFormInputs","nanoid","userAvatarInput","DefaultAvatarSvg","PlusSvgOnAvatar","UserAvatarWrapper","_templateObject4","HiddenInput","_templateObject5","componentPrimary","componentAccent","InfoWrapper","_templateObject6","textAvatar","AvatarFieldFormUser","userName","avatarURL","currentAvatarURL","setCurrentAvatarURL","src","URL","createObjectURL","alt","href","concat","sprite","accept","e","target","files","Form","FormBody","FormUserButton","buttonBg","btndisActive","btnColorActive","DatePickerFormUserWrapper","ControlWrapper","DatePickerChevronDown","_templateObject7","CalendarLinkColor","borderColorWeekCalendar","calendarTextColor","mainBackgroundColor","_ref2","activeArrowColor","_templateObject8","DatePickerFormUser","setFormBirthday","formBirthday","_Fragment","ReactDatePicker","selected","parse","Date","showYearDropdown","showMonthDropdown","minDate","maxDate","subYears","closeOnScroll","formatWeekDay","nameOfDay","substr","value","format","FormUser","_useSelector","useSelector","selectUser","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","mode","defaultValues","reg","handleSubmit","_useState","useState","_useState2","_slicedToArray","isDisabled","_useState3","_useState4","_useState5","_useState6","useEffect","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","preparedEmail","preparedPhone","preparedSkype","formData","wrap","_context","prev","next","FormData","append","trim","console","log","updateUser","Notify","stop","_x","apply","arguments","autoComplete","encType","map","input","function","disabled","PageWrapper","AccountPage","Outlet"],"sourceRoot":""}