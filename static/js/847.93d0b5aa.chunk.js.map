{"version":3,"file":"static/js/847.93d0b5aa.chunk.js","mappings":"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","sources":["components/Form/FormButton/FormButton.styled.js","components/Form/FormButton/FormButton.js","components/Form/FormRegister/FormRegister.styled.js","components/Form/FormTitle/FormTitle.styled.js","components/Form/FormTitle/FormTitle.js","components/Form/FormLogin/FormLogin.js","components/Form/FormTemplateLogin/FormTemplateLogin.styled.js","components/Form/FormTemplateLogin/FormTemplateLogin.js","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: #3e85f3;\n  width: 100%;\n  border-radius: 16px;\n  padding: 16px;\n  border-color: none;\n  margin-top: 8px;\n  text-align: center;\n  color: #fff;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  &:disabled {\n    cursor: pointer;\n    background-color: rgb(163, 168, 173);\n    box-shadow: none;\n    color: rgb(255, 255, 255) !important;\n\n    &:hover,\n    &:focus {\n      cursor: not-allowed;\n    }\n  }\n`;\n\nexport const Span = styled.span`\n  margin-right: 11px;\n`;\nexport const LoginIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: #fff;\n`;\n","import React from 'react';\nimport { Button, LoginIcon, Span } from './FormButton.styled';\nimport icons from '../../../images/icons.svg';\n\nconst FormButton = ({ children, isValid }) => {\n  return (\n    <Button type=\"submit\" disabled={!isValid}>\n      <Span> {children}</Span>\n      <LoginIcon>\n        <use href={icons + '#icon-log-in-01'}></use>\n      </LoginIcon>\n    </Button>\n  );\n};\n\nexport default FormButton;\n","// import styled, { css } from 'styled-components';\nimport { Field } from 'formik';\nimport { styled } from 'styled-components';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n  tab: '@media screen and (min-width: 768px)',\n  desk: '@media screen and (min-width: 1440px)',\n};\n\nexport const ContainerForm = styled.div`\n  width: 400px;\n  margin: 40px auto;\n  font-family: InterRegular;\n\n  ${viewport.mob} {\n    width: 287px;\n    font-size: 14px;\n    margin: 32px auto;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: InterSemiBold;\n  font-size: 14px;\n  line-height: normal;\n  width: 100%;\n\n  ${viewport.mob} {\n    font-size: 12px;\n  }\n`;\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled(Field)`\n  background-color: #fff;\n  color: #111;\n  border: 1px solid #dce3e5;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 8px;\n  width: 100%;\n  margin-top: 8px;\n  margin-bottom: 22px;\n  padding: 18px;\n\n  &::placeholder {\n    color: #dce3e5;\n    font-size: 16px;\n  }\n\n  &:focus,\n  &:active {\n    border: 1px solid #111111;\n    background-color: #fff;\n    outline: none;\n  }\n\n  ${viewport.mob} {\n    padding: 14px;\n  }\n`;\n\nexport const StyledInlineErrorMessage = styled.div`\n  color: #e74a3b;\n  display: block;\n  font-size: 12px;\n  margin-top: -10px;\n  padding-left: 16px;\n  white-space: pre-line;\n`;\nexport const StyledInlineMessage = styled.div`\n  color: #3cbc81;\n  display: block;\n  font-size: 12px;\n  margin-top: -10px;\n  padding-left: 16px;\n  white-space: pre-line;\n`;\n\nexport const LoginIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  bottom: 40px;\n  right: 20px;\n  overflow: visible;\n`;\n","import styled from 'styled-components';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n};\n\nexport const Title = styled.h2`\n  color: #3e85f3;\n  font-size: 24px;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n\n  ${viewport.mob} {\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport { Title } from './FormTitle.styled';\n\nconst FormTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport default FormTitle;\n","import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport icons from '../../../images/icons.svg';\n\nimport {\n  Label,\n  Input,\n  StyledInlineErrorMessage,\n  ContainerForm,\n  LoginIcon,\n  InputContainer,\n  StyledInlineMessage,\n} from '../FormRegister/FormRegister.styled';\nimport FormButton from '../FormButton/FormButton';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email'),\n  password: Yup.string()\n    .required('Please enter your password')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nfunction FormLogin() {\n  // const [formValues, setFormValues] = useState();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        // console.log(values);\n        // setFormValues(values);\n\n        dispatch(logIn(values));\n\n        const timeOut = setTimeout(() => {\n          actions.setSubmitting(false);\n\n          clearTimeout(timeOut);\n        }, 1000);\n      }}\n    >\n      {({ errors, touched, handleSubmit, isValid }) => {\n        return (\n          <ContainerForm>\n            <Form name=\"contact\" method=\"post\" onSubmit={handleSubmit}>\n              <InputContainer>\n                <Label\n                  htmlFor=\"email\"\n                  style={{\n                    color:\n                      touched.email && !errors.email\n                        ? '#3cbc81'\n                        : touched.email && errors.email\n                        ? '#e74a3b'\n                        : 'initial',\n                  }}\n                >\n                  Email\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    autoCapitalize=\"off\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"email\"\n                    placeholder=\"Enter email\"\n                    style={{\n                      borderColor:\n                        touched.email && !errors.email\n                          ? '#3cbc81'\n                          : touched.email && errors.email\n                          ? '#e74a3b'\n                          : '#dce3e5',\n                    }}\n                  />\n                </Label>\n                <ErrorMessage name=\"email\">\n                  {msg => (\n                    <StyledInlineErrorMessage>\n                      {msg}\n                      <LoginIcon>\n                        <use\n                          href={icons + '#icon-baseline-error-outline'}\n                        ></use>\n                      </LoginIcon>\n                    </StyledInlineErrorMessage>\n                  )}\n                </ErrorMessage>\n                {!errors.name && touched.name && (\n                  <StyledInlineMessage>\n                    This is an CORRECT email\n                    <LoginIcon>\n                      <use href={icons + '#icon-done'}></use>\n                    </LoginIcon>\n                  </StyledInlineMessage>\n                )}\n              </InputContainer>\n              <InputContainer>\n                <Label\n                  htmlFor=\"password\"\n                  style={{\n                    color:\n                      touched.password && !errors.password\n                        ? '#3cbc81'\n                        : touched.password && errors.password\n                        ? '#e74a3b'\n                        : 'initial',\n                  }}\n                >\n                  Password\n                  <Input\n                    type=\"text\"\n                    name=\"password\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"password\"\n                    placeholder=\"Enter password\"\n                    style={{\n                      borderColor:\n                        touched.password && !errors.password\n                          ? '#3cbc81'\n                          : touched.password && errors.password\n                          ? '#e74a3b'\n                          : '#dce3e5',\n                    }}\n                  />\n                </Label>\n                {errors.password && touched.password && (\n                  <StyledInlineErrorMessage>\n                    {errors.password}\n                    <LoginIcon>\n                      <use href={icons + '#icon-baseline-error-outline'}></use>\n                    </LoginIcon>\n                  </StyledInlineErrorMessage>\n                )}\n              </InputContainer>\n              <FormButton isValid={isValid}>Log in</FormButton>\n            </Form>\n          </ContainerForm>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default FormLogin;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n  tab: '@media screen and (min-width: 768px)',\n  desk: '@media screen and (min-width: 1440px)',\n};\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: start;\n  background-color: #dcebf7;\n  height: 770px;\n  font-family: InterSemiBold;\n  font-size: 18px;\n  font-style: normal;\n  line-height: calc(18 / 16);\n  color: #111;\n`;\n\nexport const ContainerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  width: 480px;\n  height: 424px;\n  background-color: #fff;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 174px;\n  margin-bottom: 24px;\n  padding: 40px;\n  border-radius: 8px;\n\n  ${viewport.mob} {\n    margin-top: 202px;\n    width: 335px;\n    height: 376px;\n    margin-bottom: 18px;\n    padding: 40px 24px;\n  }\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  bottom: 20px;\n  right: 60px;\n  width: 368px;\n  height: 521px;\n  opacity: 0;\n\n  ${viewport.desk} {\n    opacity: 1;\n  }\n`;\n\nexport const SignupLink = styled(Link)`\n  color: #3e85f3;\n  line-height: calc(24 / 18);\n  text-decoration: underline;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n\n  ${viewport.mob} {\n    font-size: 12px;\n    line-height: calc(14 / 12);\n  }\n`;\n","import React from 'react';\nimport FormLogin from '../FormLogin/FormLogin';\nimport FormTitle from '../FormTitle/FormTitle';\nimport {\n  Container,\n  ContainerForm,\n  Img,\n  SignupLink,\n  Wrapper,\n} from './FormTemplateLogin.styled';\nimport desk1x from '../../../images/login/desk@1.webp';\nimport desk2x from '../../../images/login/desk@2.webp';\n\nconst FormTemplateLogin = () => {\n  return (\n    <Container>\n      <Img\n        srcSet={`${desk1x} 1440w, ${desk2x} 2880w,`}\n        src={desk1x}\n        alt=\"goose\"\n      />\n      <Wrapper>\n        <ContainerForm>\n          <FormTitle>Log In</FormTitle>\n          <FormLogin />\n        </ContainerForm>\n        <SignupLink to=\"/register\">Sign up</SignupLink>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default FormTemplateLogin;\n","import FormTemplateLogin from 'components/Form/FormTemplateLogin/FormTemplateLogin';\n\nexport default function Login() {\n  return (\n    <>\n      <FormTemplateLogin />\n    </>\n  );\n}\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","Span","_templateObject2","LoginIcon","_templateObject3","_ref","children","isValid","_jsxs","type","disabled","_jsx","href","icons","viewport","ContainerForm","Label","InputContainer","Input","Field","_templateObject4","StyledInlineErrorMessage","_templateObject5","StyledInlineMessage","_templateObject6","_templateObject7","Title","validationSchema","Yup","shape","email","required","password","min","matches","dispatch","useDispatch","Formik","initialValues","onSubmit","values","actions","logIn","timeOut","setTimeout","setSubmitting","clearTimeout","errors","touched","handleSubmit","Form","name","method","htmlFor","style","color","autoCapitalize","autoCorrect","autoComplete","placeholder","borderColor","ErrorMessage","msg","FormButton","Container","Wrapper","Img","SignupLink","Link","srcSet","concat","desk1x","desk2x","src","alt","FormTitle","FormLogin","to","Login","_Fragment","FormTemplateLogin"],"sourceRoot":""}