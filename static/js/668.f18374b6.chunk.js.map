{"version":3,"file":"static/js/668.f18374b6.chunk.js","mappings":"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","sources":["components/Form/FormButton/FormButton.styled.js","components/Form/FormButton/FormButton.js","components/Form/FormRegister/FormRegister.styled.js","components/Form/FormTitle/FormTitle.styled.js","components/Form/FormTitle/FormTitle.js","components/Form/FormRegister/FormRegister.js","components/Form/FormTemplate/FormTemplate.styled.js","components/Form/FormTemplate/FormTemplate.js","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: #3e85f3;\n  width: 100%;\n  border-radius: 16px;\n  padding: 16px;\n  border-color: none;\n  margin-top: 8px;\n  text-align: center;\n  color: #fff;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  &:disabled {\n    cursor: pointer;\n    background-color: rgb(163, 168, 173);\n    box-shadow: none;\n    color: rgb(255, 255, 255) !important;\n\n    &:hover,\n    &:focus {\n      cursor: not-allowed;\n    }\n  }\n`;\n\nexport const Span = styled.span`\n  margin-right: 11px;\n`;\nexport const LoginIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: #fff;\n`;\n","import React from 'react';\nimport { Button, LoginIcon, Span } from './FormButton.styled';\nimport icons from '../../../images/icons.svg';\n\nconst FormButton = ({ children, isValid }) => {\n  return (\n    <Button type=\"submit\" disabled={!isValid}>\n      <Span> {children}</Span>\n      <LoginIcon>\n        <use href={icons + '#icon-log-in-01'}></use>\n      </LoginIcon>\n    </Button>\n  );\n};\n\nexport default FormButton;\n","// import styled, { css } from 'styled-components';\nimport { Field } from 'formik';\nimport { styled } from 'styled-components';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n  tab: '@media screen and (min-width: 768px)',\n  desk: '@media screen and (min-width: 1440px)',\n};\n\nexport const ContainerForm = styled.div`\n  width: 400px;\n  margin: 40px auto;\n  font-family: InterRegular;\n\n  ${viewport.mob} {\n    width: 287px;\n    font-size: 14px;\n    margin: 32px auto;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: InterSemiBold;\n  font-size: 14px;\n  line-height: normal;\n  width: 100%;\n\n  ${viewport.mob} {\n    font-size: 12px;\n  }\n`;\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled(Field)`\n  background-color: #fff;\n  color: #111;\n  border: 1px solid #dce3e5;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 8px;\n  width: 100%;\n  margin-top: 8px;\n  margin-bottom: 22px;\n  padding: 18px;\n\n  &::placeholder {\n    color: #dce3e5;\n    font-size: 16px;\n  }\n\n  &:focus,\n  &:active {\n    border: 1px solid #111111;\n    background-color: #fff;\n    outline: none;\n  }\n\n  ${viewport.mob} {\n    padding: 14px;\n  }\n`;\n\nexport const StyledInlineErrorMessage = styled.div`\n  color: #e74a3b;\n  display: block;\n  font-size: 12px;\n  margin-top: -10px;\n  padding-left: 16px;\n  white-space: pre-line;\n`;\nexport const StyledInlineMessage = styled.div`\n  color: #3cbc81;\n  display: block;\n  font-size: 12px;\n  margin-top: -10px;\n  padding-left: 16px;\n  white-space: pre-line;\n`;\n\nexport const LoginIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  bottom: 40px;\n  right: 20px;\n  overflow: visible;\n`;\nexport const IconEye = styled.svg`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  bottom: 40px;\n  right: 20px;\n  overflow: visible;\n`;\n","import styled from 'styled-components';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n};\n\nexport const Title = styled.h2`\n  color: #3e85f3;\n  font-size: 24px;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n\n  ${viewport.mob} {\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport { Title } from './FormTitle.styled';\n\nconst FormTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport default FormTitle;\n","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport icons from '../../../images/icons.svg';\nimport { logIn, register } from 'redux/auth/operations';\nimport { AiFillEyeInvisible, AiFillEye } from 'react-icons/ai';\n\nimport {\n  Label,\n  Input,\n  StyledInlineErrorMessage,\n  StyledInlineMessage,\n  ContainerForm,\n  LoginIcon,\n  InputContainer,\n  IconEye,\n} from './FormRegister.styled';\nimport FormButton from '../FormButton/FormButton';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Your name is too short')\n    .required('Please enter your name'),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email'),\n  password: Yup.string()\n    .required('Please enter your password')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nfunction FormRegister() {\n  // const [passwordVissible, setPasswordVissible] = useState(true);\n  const [passwordType, setPasswordType] = useState('password');\n\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const response = await dispatch(register(values));\n          if (register.fulfilled.match(response)) {\n            await dispatch(\n              logIn({ email: values.email, password: values.password })\n            );\n          }\n\n          resetForm();\n        } catch (error) {\n          if (error.response && error.response.status === 401) {\n            console.error('Unauthorized: The user is not authenticated.');\n          } else {\n            console.error(\n              'An error occurred while fetching current user:',\n              error\n            );\n          }\n        }\n      }}\n    >\n      {({ errors, touched, handleSubmit, isValid }) => {\n        return (\n          <ContainerForm>\n            <Form name=\"contact\" method=\"post\" onSubmit={handleSubmit}>\n              <InputContainer>\n                <Label\n                  htmlFor=\"name\"\n                  style={{\n                    color:\n                      touched.name && !errors.name\n                        ? '#3cbc81'\n                        : touched.name && errors.name\n                        ? '#e74a3b'\n                        : 'initial',\n                  }}\n                >\n                  Name\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"name\"\n                    placeholder=\"Enter your name\"\n                    style={{\n                      borderColor:\n                        touched.name && !errors.name\n                          ? '#3cbc81'\n                          : touched.name && errors.name\n                          ? '#e74a3b'\n                          : '#dce3e5',\n                    }}\n                  />\n                </Label>\n                {errors.name && touched.name && (\n                  <StyledInlineErrorMessage>\n                    {errors.name}\n                    <LoginIcon>\n                      <use href={icons + '#icon-baseline-error-outline'}></use>\n                    </LoginIcon>\n                  </StyledInlineErrorMessage>\n                )}\n              </InputContainer>\n              <InputContainer>\n                <Label\n                  htmlFor=\"email\"\n                  style={{\n                    color:\n                      touched.email && !errors.email\n                        ? '#3cbc81'\n                        : touched.email && errors.email\n                        ? '#e74a3b'\n                        : 'initial',\n                  }}\n                >\n                  Email\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    autoCapitalize=\"on\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"email\"\n                    placeholder=\"Enter email\"\n                    style={{\n                      borderColor:\n                        touched.email && !errors.email\n                          ? '#3cbc81'\n                          : touched.email && errors.email\n                          ? '#e74a3b'\n                          : '#dce3e5',\n                    }}\n                  />\n                </Label>\n                {errors.email && touched.email && (\n                  <StyledInlineErrorMessage>\n                    {errors.email}\n                    <LoginIcon>\n                      <use href={icons + '#icon-baseline-error-outline'}></use>\n                    </LoginIcon>\n                  </StyledInlineErrorMessage>\n                )}\n                {!errors.email && touched.email && (\n                  <StyledInlineMessage>\n                    This is an CORRECT email\n                    <LoginIcon>\n                      <use href={icons + '#icon-done'}></use>\n                    </LoginIcon>\n                  </StyledInlineMessage>\n                )}\n              </InputContainer>\n              <InputContainer>\n                <Label\n                  htmlFor=\"password\"\n                  style={{\n                    color:\n                      touched.password && !errors.password\n                        ? '#3cbc81'\n                        : touched.password && errors.password\n                        ? '#e74a3b'\n                        : 'initial',\n                  }}\n                >\n                  Password\n                  <Input\n                    type={passwordType}\n                    name=\"password\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"password\"\n                    placeholder=\"Enter password\"\n                    style={{\n                      borderColor:\n                        touched.password && !errors.password\n                          ? '#3cbc81'\n                          : touched.password && errors.password\n                          ? '#e74a3b'\n                          : '#dce3e5',\n                    }}\n                  />\n                </Label>\n                {errors.password && touched.password && (\n                  <StyledInlineErrorMessage>\n                    {errors.password}\n                    <LoginIcon>\n                      <use href={icons + '#icon-baseline-error-outline'}></use>\n                    </LoginIcon>\n                  </StyledInlineErrorMessage>\n                )}\n                <IconEye\n                  onClick={() => {\n                    passwordType === 'password'\n                      ? setPasswordType('text')\n                      : setPasswordType('password');\n                  }}\n                >\n                  {passwordType === 'password' ? (\n                    <AiFillEyeInvisible\n                      style={{\n                        visibility:\n                          touched.password && !errors.password\n                            ? 'visible'\n                            : 'hidden',\n                      }}\n                    />\n                  ) : (\n                    <AiFillEye />\n                  )}\n                </IconEye>\n              </InputContainer>\n              <FormButton isValid={isValid}>Sign up</FormButton>\n            </Form>\n          </ContainerForm>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default FormRegister;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n  tab: '@media screen and (min-width: 768px)',\n  desk: '@media screen and (min-width: 1440px)',\n};\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: start;\n  background-color: #dcebf7;\n  height: 770px;\n  font-family: InterSemiBold;\n  font-size: 18px;\n  font-style: normal;\n  line-height: calc(18 / 16);\n  color: #111;\n`;\n\nexport const ContainerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  width: 480px;\n  height: 521px;\n  background-color: #fff;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 124px;\n  margin-bottom: 24px;\n  padding: 40px;\n  border-radius: 8px;\n\n  ${viewport.mob} {\n    margin-top: 155px;\n    width: 335px;\n    height: 470px;\n    margin-bottom: 18px;\n    padding: 40px 24px;\n  }\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 400px;\n  height: 416px;\n  opacity: 0;\n\n  ${viewport.desk} {\n    opacity: 1;\n  }\n`;\n\nexport const SignupLink = styled(Link)`\n  color: #3e85f3;\n  line-height: calc(24 / 18);\n  text-decoration: underline;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n\n  ${viewport.mob} {\n    font-size: 12px;\n    line-height: calc(14 / 12);\n  }\n`;\n","import React from 'react';\nimport FormRegister from '../FormRegister/FormRegister';\nimport FormTitle from '../FormTitle/FormTitle';\nimport {\n  Container,\n  ContainerForm,\n  Img,\n  SignupLink,\n  Wrapper,\n} from './FormTemplate.styled';\nimport desk1x from '../../../images/register/desk@1.webp';\nimport desk2x from '../../../images/register/desk@2.webp';\n\nconst FormTemplate = () => {\n  return (\n    <Container>\n      <Img\n        srcSet={`${desk1x} 1440w, ${desk2x} 2880w,`}\n        src={desk1x}\n        alt=\"goose\"\n      />\n      <Wrapper>\n        <ContainerForm>\n          <FormTitle>Sign Up</FormTitle>\n          <FormRegister />\n        </ContainerForm>\n        <SignupLink to=\"/login\">Log In</SignupLink>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default FormTemplate;\n","import React from 'react';\n\nimport FormTemplate from 'components/Form/FormTemplate/FormTemplate';\n\nconst ComandRegister = () => {\n  return (\n    <>\n      <FormTemplate />\n    </>\n  );\n};\n\nexport default ComandRegister;\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","Span","_templateObject2","LoginIcon","_templateObject3","_ref","children","isValid","_jsxs","type","disabled","_jsx","href","icons","viewport","ContainerForm","Label","InputContainer","Input","Field","_templateObject4","StyledInlineErrorMessage","_templateObject5","StyledInlineMessage","_templateObject6","_templateObject7","IconEye","_templateObject8","Title","validationSchema","Yup","shape","name","min","required","email","password","matches","_useState","useState","_useState2","_slicedToArray","passwordType","setPasswordType","dispatch","useDispatch","Formik","initialValues","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","response","wrap","_context","prev","next","register","sent","logIn","t0","status","console","error","stop","_x","_x2","apply","arguments","_ref3","errors","touched","handleSubmit","Form","method","htmlFor","style","color","autoCorrect","autoComplete","placeholder","borderColor","autoCapitalize","onClick","AiFillEyeInvisible","visibility","AiFillEye","FormButton","Container","Wrapper","Img","SignupLink","Link","srcSet","concat","desk1x","desk2x","src","alt","FormTitle","FormRegister","to","_Fragment","FormTemplate"],"sourceRoot":""}