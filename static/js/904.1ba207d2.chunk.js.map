{"version":3,"file":"static/js/904.1ba207d2.chunk.js","mappings":"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","sources":["components/Form/FormUser/consts/FormUserSchema.js","components/Form/FormUser/FormField/FormField.styled.jsx","components/Form/FormUser/FormField/FormField.js","components/Form/FormUser/consts/FormUserInputs.js","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.styled.jsx","components/Form/FormUser/AvatarFieldFormUser/AvatarFieldFormUser.js","components/Form/FormUser/FormUser.styled.jsx","components/Form/FormUser/DatePickerFormUser/DatePickerFormUser.js","components/Form/FormUser/FormUser.js","pages/AccountPage/AccountPage.styled.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\n// const validFileExtensions = {\n//   image: ['jpg', 'gif', 'png', 'jpeg', 'svg', 'webp'],\n// };\n\n// const isValidFileType = value => {\n//   if (typeof value === 'string' && value.includes('image')) return true;\n//   if (value.length === 0) return true;\n//   const fileName = value[0]?.name.toLowerCase();\n//   return validFileExtensions['image'].indexOf(fileName.split('.').pop()) > -1;\n// };\n\nexport const FormUserSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .max(16, 'Name may contain only 16 characters'),\n  phone: Yup.string().matches(phoneRegExp, {\n    message:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    excludeEmptyString: true,\n  }),\n  birthday: Yup.date('Invalid date format'),\n  skype: Yup.string().max(16, 'Skype may contain only 16 characters'),\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('This field is required'),\n  // avatarURL: Yup.mixed().test('is-valid-type', 'Ivalid image type', value => {\n  //   return value === '' || isValidFileType(value);\n  // }),\n});\n","import styled from 'styled-components';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n};\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'InterRegular';\n  font-size: 14px;\n  line-height: 15px;\n\n  color: ${props => props.theme.variable.bgReversLabel};\n`;\n\nexport const Input = styled.input`\n  font-family: 'InterSemiBold';\n  font-size: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n  outline: none;\n  border: 1px solid;\n  border-radius: 8px;\n  border-color: ${props => props.theme.variable.borderProfileColor};\n  color: ${props => props.theme.variable.text};\n  padding: 14px 18px;\n  height: 46px;\n  width: 354px;\n\n  ${viewport.mob} {\n    height: 42px;\n    width: 300px;\n    padding: 12px 14px;\n    font-size: 14px;\n  }\n\n  &::placeholder {\n    font-family: 'InterRegular';\n    font-size: 16px;\n    line-height: 18px;\n    color: 'inherit';\n  }\n\n  &[type='time']::-webkit-calendar-picker-indicator {\n    background: none;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Label, Input } from './FormField.styled';\n\nexport const FormField = ({\n  id,\n  inputName,\n  type,\n  placeholder,\n  label,\n  register,\n  setIsDisabled,\n}) => {\n  return (\n    <div>\n      <Label htmlFor={id}>{label}</Label>\n      <Input\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        {...register(inputName)}\n        onChange={() => {\n          console.log('edit input');\n          setIsDisabled(false);\n        }}\n      />\n    </div>\n  );\n};\n\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n};\n","import { nanoid } from '@reduxjs/toolkit';\n\nexport const userFormInputs = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nanoid(),\n    label: 'User Name',\n    placeholder: 'Enter your name',\n  },\n  {\n    inputName: 'phone',\n    type: 'tel',\n    id: nanoid(),\n    label: 'Phone',\n    placeholder: 'Enter phone',\n  },\n  {\n    inputName: 'birthday',\n    type: 'date',\n    id: nanoid(),\n    label: 'Birthday',\n    placeholder: 'DD/MM/YYYY',\n  },\n  {\n    inputName: 'skype',\n    type: 'string',\n    id: nanoid(),\n    label: 'Skype',\n    placeholder: 'Add a skype number',\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: nanoid(),\n    label: 'Email',\n    placeholder: 'Enter email',\n  },\n];\n\nexport const userAvatarInput = {\n  inputName: 'avatarURL',\n  type: 'file',\n  id: nanoid(),\n  label: '',\n  placeholder: '',\n};\n","import styled from 'styled-components';\n\nexport const  DefaultAvatarSvg = styled.svg`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n`;\n\n\n\n\nexport const  PlusSvgOnAvatar = styled.svg`\nposition: absolute;\nborder-radius: 50%;\nbackground-color: #3e85f3;\ncontent: '+';\nstroke: #FFFFFF;\nfont-family: Inter;\nfont-size: 18px;\nline-height: 1.375rem;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 14px;\nheight: 14px;\n\ntop: 30px;\n  right: 60px;\npointer-events: none;\n\n@media (min-width: 768px) {\n  width: 1.5rem;\n  height: 1.5rem;\n\n  top: 9.0625rem;\n  right: 45px;\n  pointer-events: none;\n\n\n\n  @media (min-width: 1087px) {\n    top: 10.3125rem;\n    pointer-events: none;\n  }\n\n}\n`;\n\n\nexport const UserAvatarWrapper = styled.div`\n  position: relative;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: center;\n  }\n`;\n\nexport const Label = styled.label`\nposition:relative;\n\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 72px;\n  height: 72px;\n\n  margin-bottom: 18px;\n  margin-top: -30px;\n\n  border-radius: 50%;\n  border: 2px solid #3e85f3;\n  background-color: none;\n  overflow: hidden;\n  down: 60px;\n  left: 45px;\n\n  \n\n\n  & img {\n    object-fit: cover;\n    align-items:center;\n    height: 100%;\n    width: 100%;\n  }\n\n\n  @media (min-width: 768px) {\n    margin-top: 40px;\n    width: 124px;\n    height: 124px;\n  \n    left: 17px;\n  }\n\n  @media (min-width: 1087px) {\n    margin-top: 60px;\n  }\n`;\n\nexport const HiddenInput = styled.input`\n  position: relative;\n  top: -29px;\n  left: 92px;\n\n  display: flex;\n  // justify-content: center;\n  align-items: center;\n\n  width: 12px;\n  height: 12px;\n  border: 0;\n  padding: 0;\n\n  border-radius: 50%;\n  background-color: #3e85f3;\n\n  // :before {\n  //   position: absolute;\n  //   content: '+';\n\n  //   width: 14px;\n  //   height: 14px;\n\n  //   font-size: 0.9375rem;\n  //   line-height: 0.8125rem;\n\n\n  //   /* color: ; */\n  //   background-color: #3e85f3;\n  // }\n\n  @media (min-width: 768px) {\n    width: 1.5rem;\n    height: 1.5rem;\n\n    top: -37px;\n    left: 97px;\n\n    // :before {\n    //   position: absolute;\n    //   content: '+';\n    //   color: ${props => props.theme.componentPrimary};\n    //   font-size: 1.5625rem;\n    //   line-height: 1.375rem;\n    //   display: flex;\n    //   justify-content: center;\n    //   align-items: center;\n    //   width: 24px;\n    //   height: 24px;\n    //   background-color: ${props => props.theme.componentAccent};\n    // }\n  }\n\n  @media (min-width: 1087px) {\n    top: -37px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  position: relative;\n  padding-top: 10px;\n  > h3 {\n    color: ${props => props.theme.variable.text};\n    font-family: InterBold;\n    font-size: 18px;\n    line-height: 1.125rem;\n\n    margin-bottom: 0.25rem;\n\n    @media (min-width: 768px) {\n      font-size: 1.125rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  > p {\n    color: ${props => props.theme.variable.textAvatar};\n    font-family: InterSemiBold;\n    font-size: 14px;\n    line-height: 0.875rem;\n\n    @media (min-width: 768px) {\n      font-size: 0.875rem;\n      line-height: 1.125rem;\n    }\n  }\n`;\n","// import { useEffect } from 'react';\nimport sprite from '../../../../images/icons.svg';\n\nimport {\n  HiddenInput,\n  Label,\n  DefaultAvatarSvg,\n  PlusSvgOnAvatar,\n  UserAvatarWrapper,\n  InfoWrapper,\n} from './AvatarFieldFormUser.styled';\n\n// const setFileUrl = (file, cbSetFileUrl) => {\n//   if (!file) return cbSetFileUrl(null);\n//   const fileReader = new FileReader();\n//   fileReader.readAsDataURL(file);\n//   fileReader.onload = () => {\n//     cbSetFileUrl(fileReader.result);\n//   };\n// };\n\nexport const AvatarFieldFormUser = ({\n  userName,\n  inputName,\n  type,\n  id,\n  avatarURL,\n  currentAvatarURL,\n  setCurrentAvatarURL,\n  setIsDisabled,\n  register,\n}) => {\n  // useEffect(() => {}, []);\n  return (\n    <UserAvatarWrapper>\n      <Label htmlFor={id}>\n        {currentAvatarURL ? (\n          <img src={URL.createObjectURL(currentAvatarURL)} alt=\"user_photo\" />\n        ) : avatarURL ? (\n          <img src={avatarURL} alt=\"user_photo\" />\n        ) : (\n          <p>\n            <DefaultAvatarSvg>\n              <use href={`${sprite}#icon-user`} />\n            </DefaultAvatarSvg>\n          </p>\n        )}\n      </Label>\n      <HiddenInput\n        {...register(inputName)}\n        id={id}\n        type={type}\n        accept=\"image/*\"\n        onChange={e => {\n          setCurrentAvatarURL(e.target.files[0]);\n          console.log(currentAvatarURL, 'new file');\n          setIsDisabled(false);\n          // return e;\n        }}\n      />\n      <p>\n        <PlusSvgOnAvatar>\n          <use href={sprite + '#icon-plus'}></use>\n          {/* <use href={`${sprite}#icon-plus`} /> */}\n        </PlusSvgOnAvatar>\n      </p>\n      <InfoWrapper>\n        <h3>{userName}</h3>\n        <p>User</p>\n      </InfoWrapper>\n    </UserAvatarWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n};\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 16px;\n  background-color: ${props => props.theme.variable.secondaryBg};\n\n  & > button {\n    padding: 14px 50px;\n    margin-top: 0px;\n    margin-bottom: 40px;\n\n    @media (min-width: 768px) {\n      padding: 15px 84px;\n    }\n\n    @media (min-width: 1087px) {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const FormBody = styled.div`\n  width: 100%;\n  display: grid;\n  padding: 0px 18px;\n  margin: 40px 0;\n  gap: 18px;\n\n  @media (min-width: 768px) {\n    max-width: 354px;\n    padding: 0px;\n  }\n\n  @media (min-width: 1078px) {\n    max-width: 758px;\n\n    grid-template-columns: 1fr 1fr;\n    column-gap: 50px;\n    row-gap: 24px;\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 1080px;\n    padding-left: 164px;\n    padding-right: 164px;\n    margin-top: 44px;\n    margin-bottom: 88px;\n  }\n\n  @media (min-width: 2560px) {\n    max-width: 1440px;\n    padding: 50px;\n    grid-template-columns: repeat(auto-fit, minmax(345px, 1fr));\n  }\n`;\n\n// export const DatePickerWrapper = styled.div`\n//   /* font-family: 'Inter', sans-serif;\n//   margin-right: 8px; */\n//   padding: 18px;\n//   & .react-datepicker__today-button {\n//     border: none;\n//     background: none;\n//   }\n//   & input {\n//     display: inline;\n\n//     text-align: center;\n//     padding: 0;\n//     background-color: #3e85f3;\n//     outline: none;\n//     border: none;\n//     border-radius: 8px;\n//     height: 30px;\n\n//     width: 140px; ///\n\n//     color: white;\n//     text-transform: uppercase;\n//     font-size: 14px;\n//     font-weight: 700;\n//     line-height: calc(14 / 18);\n//   }\n//   & .react-datepicker {\n//     background-color: #3e85f3;\n//     color: white;\n//     border-radius: 16px;\n//     padding: 18px;\n//   }\n//   & .react-datepicker__header {\n//     background-color: #3e85f3;\n//     border-top-left-radius: 16px;\n//     border-top-right-radius: 16px;\n//     border-color: #fff;\n//   }\n//   & .react-datepicker__triangle::after,\n//   & .react-datepicker__triangle::before {\n//     background-color: #3e85f3;\n//     display: none;\n//   }\n//   & .react-datepicker__current-month {\n//     font-size: 16px;\n//     margin-bottom: 18px;\n//   }\n//   & .react-datepicker__day-name,\n//   & .react-datepicker__day.react-datepicker__day--outside-month {\n//     color: rgba(255, 255, 255, 0.5);\n//   }\n\n//   & .react-datepicker__navigation-icon::before {\n//     border-color: white;\n//   }\n//   & .react-datepicker__current-month {\n//     color: white;\n//   }\n//   & .react-datepicker__week:last-of-type {\n//     margin-bottom: 0;\n//   }\n//   & .react-datepicker__week:not(:last-of-type) {\n//     margin-bottom: 7px;\n//   }\n//   & .react-datepicker__day.react-datepicker__day--selected {\n//     border-radius: 50%;\n//     color: #3e85f3;\n\n//     background-color: rgba(255, 255, 255, 0.5);\n//   }\n//   & .react-datepicker__day.react-datepicker__day--today {\n//     background-color: #fff;\n//     border-radius: 50%;\n//     color: #3e85f3;\n//     font-weight: 500;\n//   }\n//   & .react-datepicker__day--keyboard-selected {\n//     border: none;\n//     background: none;\n//   }\n//   & .react-datepicker__day {\n//     color: inherit;\n//     font-size: 14px;\n//   }\n// `;\n// export const ControlWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   margin-bottom: 18px;\n// `;\n\nexport const FormUserButton = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: InterRegular;\n  font-size: 14px;\n  width: 262px;\n  height: 48px;\n  padding: 15px, 83px;\n  background-color: ${props => props.theme.variable.buttonBg};\n  border-radius: 16px;\n  color: #fff;\n\n  &:disabled {\n    background-color: rgb(163, 168, 173);\n    color: ${props => props.theme.variable.btndisActive};\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.variable.btnColorActive};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'InterRegular';\n  font-size: 14px;\n  line-height: 15px;\n\n  color: ${props => props.theme.variable.bgReversLabel};\n`;\n\nexport const DatePickerFormUserWrapper = styled.div`\n  /* font-family: 'Inter', sans-serif;\n  margin-right: 8px; */\n  & .react-datepicker__today-button {\n    border: none;\n    background: none;\n    display: none;\n  }\n  & input {\n    display: inline;\n\n    font-family: 'InterSemiBold';\n    font-size: 16px;\n    background-color: ${props => props.theme.variable.secondaryBg};\n    outline: none;\n    border: 1px solid;\n    border-color: ${props => props.theme.variable.borderProfileColor};\n    border-radius: 8px;\n    // text-align: center;\n    padding: 14px 18px;\n    height: 46px;\n    width: 354px;\n\n    color: ${props => props.theme.variable.text};;\n    text-transform: uppercase;\n\n    font-weight: 700;\n    line-height: calc(14 / 18);\n\n    ${viewport.mob} {\n      height: 42px;\n      width: 300px;\n      padding: 12px 14px;\n      font-size: 14px;\n    }\n\n    &::placeholder {\n      font-family: 'InterRegularr';\n      font-size: 16px;\n      line-height: 18px;\n      color: 'inherit';\n    }\n  }\n\n  & .react-datepicker {\n    background-color: #3e85f3;\n    color: white;\n    border-radius: 16px;\n    padding: 18px;\n  }\n  & .react-datepicker__header {\n    background-color: #3e85f3;\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__triangle::after,\n  & .react-datepicker__triangle::before {\n    background-color: #3e85f3;\n    display: none;\n  }\n  & .react-datepicker__current-month {\n    font-size: 20px;\n    margin-bottom: 18px;\n  }\n  & .react-datepicker__day-name {\n    color: #fff;\n    font-size: 14px;\n  }\n  & .react-datepicker__day.react-datepicker__day--outside-month {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 14px;\n  }\n\n  & .react-datepicker__navigation {\n    top: 24px;\n  }\n\n  & .react-datepicker__navigation-icon::before {\n    border-color: white;\n  }\n  & .react-datepicker__current-month {\n    color: white;\n  }\n  & .react-datepicker__week:last-of-type {\n    margin-bottom: 0;\n  }\n  & .react-datepicker__week:not(:last-of-type) {\n    margin-bottom: 7px;\n  }\n  & .react-datepicker__day.react-datepicker__day--selected {\n    border-radius: 50%;\n    color: #3e85f3;\n\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n  & .react-datepicker__day.react-datepicker__day--today {\n    background-color: #fff;\n    border-radius: 50%;\n    color: #3e85f3;\n    font-weight: 500;\n  }\n  & .react-datepicker__day--keyboard-selected {\n    border: none;\n    background: none;\n  }\n  & .react-datepicker__day {\n    color: inherit;\n    font-size: 14px;\n  }\n  & .react-datepicker__day--disabled{\n    color: grey\n  }\n\n  .react-datepicker__year-option{\n    color: #3e85f3;\n  }\n  \n  .react-datepicker__year-option:first-of-type{\n    color: #3e85f3;\n    content:^;\n  }\n\n\n  .react-datepicker__month-option{\n    color: #3e85f3;\n  }\n\n  .react-datepicker__month-year-option{\n    color: #3e85f3;\n  }\n  \n\n  .react-datepicker__month-dropdown{\n    color: #3e85f3;\n  }\n\n\n  .react-datepicker__year-dropdown{\n    color: #3e85f3;\n  }\n`;\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  /* ${viewport.mob} {\n    margin-bottom: 18px;\n  } */\n`;\n\nexport const Controls = styled.button`\n  display: none;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 30px;\n  background-color: ${props => props.theme.variable.CalendarLinkColor};\n  border: ${props => props.theme.variable.borderColorWeekCalendar};\n  color: ${props => props.theme.variable.calendarTextColor};\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.variable.mainBackgroundColor};\n    color: ${({ theme }) => theme.variable.activeArrowColor};\n  }\n\n  @media (min-width: 768px) {\n    width: 38px;\n  }\n  &:first-of-type {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    border-right-width: 0.5px;\n  }\n  &:last-of-type {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n    border-left-width: 0.5px;\n  }\n`;\n\n\n\nexport const DatePickerChevronDown = styled.svg`\n\nfill:none;\nstroke:${props => props.theme.variable.calendarTextColor};\npointer-events:none;\n\nposition:relative;\n\nwidth:18px;\nheight:18px;\n\ntop:-30px;\nright:-270px;\n\n@media (min-width: 768px) {\n  right:-320px;\n}\n\n@media (min-width: 1078px) {\n  right:-320px;\n}\n\n\n\n`","import ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { format,subYears,parse } from 'date-fns';\n\nexport  const DatePickerFormUser = ( {setFormBirthday, formBirthday}\n\n  ) => {\n\n\n    return (\n        <>\n          <ReactDatePicker\n          selected = {parse(formBirthday,'yyyy-MM-dd', new Date())}\n          showYearDropdown\n          showMonthDropdown\n          minDate={new Date('1970-01-01')}\n          maxDate={subYears(new Date(),6)}\n          closeOnScroll={false}\n          formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n          onChange = {value => {\n            setFormBirthday((format(value, 'yyyy-MM-dd')))\n            console.log(\"Info value\")\n            console.log(value)\n            console.log(\"Info value\")\n          }}\n            // selected={date}\n            // onChange={value => {\n            //   if (periodType === 'month') {\n            //     navigate(`${periodType}/${format(value, 'yyyy-MM-dd')}`, {});\n            //   } else {\n            //     navigate(`${periodType}/${format(value, 'yyyy-MM-dd')}`, {});\n            //   }\n            // }}\n            \n            // dateFormat={periodType === 'month' ? 'MMMM yyyy' : 'dd MMM yyyy'}\n        \n            // todayButton=\"Today\"\n            // minDate={new Date(createdAt)}\n          />\n        </>\n      );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from '../../../redux/auth/operations';\nimport { useForm } from 'react-hook-form';\nimport { FormUserSchema } from './consts/FormUserSchema';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { FormField } from './FormField/FormField';\nimport { userAvatarInput, userFormInputs } from './consts/FormUserInputs';\nimport sprite from '../../../images/icons.svg';\nimport { AvatarFieldFormUser } from './AvatarFieldFormUser/AvatarFieldFormUser';\nimport {\n  Form,\n  FormBody,\n  FormUserButton,\n  Label,\n  DatePickerFormUserWrapper,\n  ControlWrapper,\n  DatePickerChevronDown,\n} from './FormUser.styled';\nimport { DatePickerFormUser } from './DatePickerFormUser/DatePickerFormUser';\nimport { Notify } from 'notiflix';\n\nexport const FormUser = () => {\n  const { name, email, avatarURL, phone, skype, birthday } =\n    useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  const { register: reg, handleSubmit } = useForm({\n    resolver: yupResolver(FormUserSchema),\n    mode: 'onSubmit',\n    defaultValues: {\n      name,\n      email,\n      phone: !phone ? '' : phone,\n      birthday: birthday ? birthday : '1900-01-01',\n      skype: !skype ? '' : skype,\n      avatarURL: !avatarURL ? '' : avatarURL,\n    },\n  });\n\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [currentAvatarURL, setCurrentAvatarURL] = useState(null);\n  const [formBirthday, setFormBirthday] = useState('1990-01-01');\n\n  useEffect(() => {\n    if (birthday) {\n      setFormBirthday(birthday);\n    }\n  }, [birthday]);\n\n  const onSubmit = async data => {\n    // const preparedBirthday = formBirthday === '' ? formBirthday : formBirthday;\n    const preparedEmail = data.email === '' ? email : data.email;\n    const preparedPhone = data.phone === '' ? ' ' : data.phone;\n    const preparedSkype = data.skype === '' ? '' : data.skype;\n\n    const formData = new FormData();\n\n    if (name !== data.name) formData.append('name', data.name);\n    if (email !== preparedEmail) formData.append('email', preparedEmail.trim());\n    if (phone !== preparedPhone) formData.append('phone', preparedPhone.trim());\n    if (skype !== preparedSkype) formData.append('skype', preparedSkype.trim());\n    if (birthday !== formBirthday)\n      formData.append('birthday', formBirthday.trim());\n    if (currentAvatarURL) formData.append('avatarURL', currentAvatarURL);\n\n    console.log(formData);\n\n    dispatch(updateUser(formData));\n\n    Notify.success('Changes saved successfully');\n  };\n\n  return (\n    <Form\n      onSubmit={handleSubmit(onSubmit)}\n      autoComplete=\"off\"\n      encType=\"multipart/form-data\"\n    >\n      <AvatarFieldFormUser\n        type=\"file\"\n        userName={name}\n        register={reg}\n        avatarURL={avatarURL}\n        currentAvatarURL={currentAvatarURL}\n        setCurrentAvatarURL={setCurrentAvatarURL}\n        setIsDisabled={setIsDisabled}\n        {...userAvatarInput}\n      />\n      <FormBody>\n        {userFormInputs.map(input =>\n          input.type !== 'date' ? (\n            <FormField\n              key={input.id}\n              {...input}\n              register={reg}\n              setIsDisabled={setIsDisabled}\n            />\n          ) : (\n            <ControlWrapper key={input.id}>\n              <DatePickerFormUserWrapper>\n                <Label>Birthday</Label>\n                <DatePickerFormUser\n                  setFormBirthday={setFormBirthday}\n                  formBirthday={formBirthday}\n                  key={input.id}\n                  {...input}\n                />\n                <DatePickerChevronDown>\n                  <use href={`${sprite}#chevron-down`} />\n                </DatePickerChevronDown>\n              </DatePickerFormUserWrapper>\n            </ControlWrapper>\n          )\n        )}\n      </FormBody>\n      <FormUserButton type=\"submit\" function=\"save\" disabled={isDisabled}>\n        Save changes\n      </FormUserButton>\n    </Form>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const PageWrapper = styled.div`\n\n\n  padding: 0 20px 95px 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 64px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 32px 32px 32px;\n  }\n`;","import { FormUser } from '../../components/Form/FormUser/FormUser';\n\nimport { Outlet } from 'react-router-dom';\n \nimport { PageWrapper } from './AccountPage.styled';\n\nexport default function AccountPage() {\n  return (\n    <div>\n      <PageWrapper>\n      <FormUser />\n      <Outlet />\n      </PageWrapper>\n    </div>\n  );\n}"],"names":["nameRegExp","RegExp","FormUserSchema","Yup","shape","name","required","matches","max","phone","message","excludeEmptyString","birthday","skype","email","Label","styled","_templateObject","_taggedTemplateLiteral","props","theme","variable","bgReversLabel","Input","_templateObject2","secondaryBg","borderProfileColor","text","FormField","_ref","id","inputName","type","placeholder","label","register","setIsDisabled","_jsxs","children","_jsx","htmlFor","_objectSpread","onChange","console","log","userFormInputs","nanoid","userAvatarInput","DefaultAvatarSvg","PlusSvgOnAvatar","UserAvatarWrapper","_templateObject3","_templateObject4","HiddenInput","_templateObject5","componentPrimary","componentAccent","InfoWrapper","_templateObject6","textAvatar","AvatarFieldFormUser","userName","avatarURL","currentAvatarURL","setCurrentAvatarURL","src","URL","createObjectURL","alt","href","concat","sprite","accept","e","target","files","viewport","Form","FormBody","FormUserButton","buttonBg","btndisActive","btnColorActive","DatePickerFormUserWrapper","ControlWrapper","DatePickerChevronDown","_templateObject7","CalendarLinkColor","borderColorWeekCalendar","calendarTextColor","mainBackgroundColor","_ref2","activeArrowColor","_templateObject8","DatePickerFormUser","setFormBirthday","formBirthday","_Fragment","ReactDatePicker","selected","parse","Date","showYearDropdown","showMonthDropdown","minDate","maxDate","subYears","closeOnScroll","formatWeekDay","nameOfDay","substr","value","format","FormUser","_useSelector","useSelector","selectUser","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","mode","defaultValues","reg","handleSubmit","_useState","useState","_useState2","_slicedToArray","isDisabled","_useState3","_useState4","_useState5","_useState6","useEffect","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","preparedEmail","preparedPhone","preparedSkype","formData","wrap","_context","prev","next","FormData","append","trim","updateUser","Notify","stop","_x","apply","arguments","autoComplete","encType","map","input","function","disabled","PageWrapper","AccountPage","Outlet"],"sourceRoot":""}