{"version":3,"file":"static/js/668.1288f048.chunk.js","mappings":"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","sources":["components/Form/FormButton/FormButton.styled.js","components/Form/FormButton/FormButton.js","components/Form/FilteredPropsInputField.js","components/Form/FormRegister/FormRegister.styled.js","components/Form/FormTitle/FormTitle.styled.js","components/Form/FormTitle/FormTitle.js","components/Form/FormRegister/FormRegister.js","components/Form/FormTemplate/FormTemplate.styled.js","components/Form/FormTemplate/FormTemplate.js","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: #3e85f3;\n  width: 100%;\n  border-radius: 16px;\n  padding: 16px;\n  border-color: none;\n  margin-top: 8px;\n  text-align: center;\n  color: #fff;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  &:disabled {\n    cursor: pointer;\n    background-color: rgb(163, 168, 173);\n    box-shadow: none;\n    color: rgb(255, 255, 255) !important;\n\n    &:hover,\n    &:focus {\n      cursor: not-allowed;\n    }\n  }\n`;\n\nexport const Span = styled.span`\n  margin-right: 11px;\n`;\nexport const LoginIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: #fff;\n`;\n","import React from 'react';\nimport { Button, LoginIcon, Span } from './FormButton.styled';\nimport icons from '../../../images/icons.svg';\n\nconst FormButton = ({ children, isValid }) => {\n  return (\n    <Button type=\"submit\" disabled={!isValid}>\n      <Span> {children}</Span>\n      <LoginIcon>\n        <use href={icons + '#icon-log-in-01'}></use>\n      </LoginIcon>\n    </Button>\n  );\n};\n\nexport default FormButton;\n","import React from 'react';\nimport { Field } from 'formik';\n\nfunction FilteredPropsInputField({ className, valid, error, ...props }) {\n  return <Field className={className} {...props} />;\n}\n\nexport default FilteredPropsInputField;","import styled, { css } from 'styled-components';\n\nimport FilteredPropsInputField from '../FilteredPropsInputField';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n  tab: '@media screen and (min-width: 768px)',\n  desk: '@media screen and (min-width: 1440px)',\n};\n\nexport const ContainerForm = styled.div`\n  width: 400px;\n  margin: 40px auto;\n  font-family: InterRegular;\n\n  ${viewport.mob} {\n    width: 287px;\n    font-size: 14px;\n    margin: 32px auto;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: InterSemiBold;\n  font-size: 14px;\n  line-height: normal;\n  width: 100%;\n\n  ${({ valid }) =>\n    valid &&\n    css`\n      color: #3cbc81;\n    `}\n\n  ${({ error }) =>\n    error &&\n    css`\n      color: #e74a3b;\n    `}\n\n    ${viewport.mob} {\n    font-size: 12px;\n  }\n`;\nexport const InputContainer = styled.div`\n  position: relative;\n`;\nexport const Input = styled(FilteredPropsInputField)`\n  background-color: #fff;\n  color: #111;\n  border: 1px solid #dce3e5;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 8px;\n  width: 100%;\n  margin-top: 8px;\n  margin-bottom: 18px;\n  padding: 18px;\n\n  &::placeholder {\n    color: #dce3e5;\n    font-size: 16px;\n  }\n\n  &:focus,\n  &:active {\n    border: 1px solid #111111;\n    outline: none;\n  }\n\n  ${({ valid }) =>\n    valid &&\n    css`\n      border: 1px solid #3cbc81;\n      margin-bottom: 8px;\n\n      &:focus,\n      &:active {\n        border: 1px solid #3cbc81;\n        outline: none;\n      }\n    `}\n\n  ${({ error }) =>\n    error &&\n    css`\n      border: 1px solid #e74a3b;\n      margin-bottom: 8px;\n      outline: none;\n\n      &:focus,\n      &:active {\n        border: 1px solid #e74a3b;\n        outline: none;\n      }\n    `}\n\n     ${viewport.mob} {\n    padding: 14px;\n  }\n`;\n\nexport const StyledInlineErrorMessage = styled.div`\n  color: #e74a3b;\n  display: block;\n  font-size: 12px;\n\n  padding-left: 16px;\n  white-space: pre-line;\n`;\nexport const StyledInlineMessage = styled.div`\n  color: #3cbc81;\n  display: block;\n  font-size: 12px;\n\n  padding-left: 16px;\n  white-space: pre-line;\n`;\n\nexport const LoginIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  bottom: 40px;\n  right: 20px;\n  overflow: visible;\n`;\n","import styled from 'styled-components';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n};\n\nexport const Title = styled.h2`\n  color: #3e85f3;\n  font-size: 24px;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n\n  ${viewport.mob} {\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport { Title } from './FormTitle.styled';\n\nconst FormTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport default FormTitle;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport icons from '../../../images/icons.svg';\nimport { register } from 'redux/auth/operations';\n\nimport {\n  Label,\n  Input,\n  StyledInlineErrorMessage,\n  StyledInlineMessage,\n  ContainerForm,\n  LoginIcon,\n  InputContainer,\n} from './FormRegister.styled';\nimport FormButton from '../FormButton/FormButton';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Your name is too short')\n    .required('Please enter your name'),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email'),\n  password: Yup.string()\n    .required('Please enter your password')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nfunction FormRegister() {\n  // const [formValues, setFormValues] = useState();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          await dispatch(register(values));\n          resetForm();\n\n          // console.log(values);\n        } catch (error) {\n          console.error('Registration failed', error);\n        }\n      }}\n    >\n      {({ errors, touched, handleSubmit, isValid }) => {\n        return (\n          <ContainerForm>\n            <Form name=\"contact\" method=\"post\" onSubmit={handleSubmit}>\n              <InputContainer>\n                <Label\n                  htmlFor=\"name\"\n                  data-valid={touched.email && !errors.name}\n                  data-error={touched.email && errors.name}\n                >\n                  Name\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"name\"\n                    placeholder=\"Enter your name\"\n                    data-valid={touched.name && !errors.name}\n                    data-error={touched.name && errors.name}\n                  />\n                </Label>\n                {errors.name && touched.name && (\n                  <StyledInlineErrorMessage>\n                    {errors.name}\n                    <LoginIcon>\n                      <use href={icons + '#icon-baseline-error-outline'}></use>\n                    </LoginIcon>\n                  </StyledInlineErrorMessage>\n                )}\n              </InputContainer>\n              <InputContainer>\n                <Label\n                  htmlFor=\"email\"\n                  data-valid={touched.email && !errors.email}\n                  data-error={touched.email && errors.email}\n                >\n                  Email\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    autoCapitalize=\"off\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"email\"\n                    placeholder=\"Enter email\"\n                    data-valid={touched.email && !errors.email}\n                    data-error={touched.email && errors.email}\n                  />\n                </Label>\n                {errors.email && touched.email && (\n                  <StyledInlineErrorMessage>\n                    {errors.email}\n                    <LoginIcon>\n                      <use href={icons + '#icon-baseline-error-outline'}></use>\n                    </LoginIcon>\n                  </StyledInlineErrorMessage>\n                )}\n                {!errors.email && touched.email && (\n                  <StyledInlineMessage>\n                    This is an CORRECT email\n                    <LoginIcon>\n                      <use href={icons + '#icon-done'}></use>\n                    </LoginIcon>\n                  </StyledInlineMessage>\n                )}\n              </InputContainer>\n              <InputContainer>\n                <Label\n                  htmlFor=\"password\"\n                  data-valid={touched.password && !errors.password}\n                  data-error={touched.password && errors.password}\n                >\n                  Password\n                  <Input\n                    type=\"text\"\n                    name=\"password\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"password\"\n                    placeholder=\"Enter password\"\n                    data-valid={touched.password && !errors.password}\n                    data-error={touched.password && errors.password}\n                  />\n                </Label>\n                {errors.password && touched.password && (\n                  <StyledInlineErrorMessage>\n                    {errors.password}\n                    <LoginIcon>\n                      <use href={icons + '#icon-baseline-error-outline'}></use>\n                    </LoginIcon>\n                  </StyledInlineErrorMessage>\n                )}\n              </InputContainer>\n              <FormButton isValid={isValid}>Sign up</FormButton>\n            </Form>\n          </ContainerForm>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default FormRegister;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n  tab: '@media screen and (min-width: 768px)',\n  desk: '@media screen and (min-width: 1440px)',\n};\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: start;\n  background-color: #dcebf7;\n  height: 770px;\n  font-family: InterSemiBold;\n  font-size: 18px;\n  font-style: normal;\n  line-height: calc(18 / 16);\n  color: #111;\n`;\n\nexport const ContainerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  width: 480px;\n  height: 521px;\n  background-color: #fff;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 124px;\n  margin-bottom: 24px;\n  padding: 40px;\n  border-radius: 8px;\n\n  ${viewport.mob} {\n    margin-top: 155px;\n    width: 335px;\n    height: 470px;\n    margin-bottom: 18px;\n    padding: 40px 24px;\n  }\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 400px;\n  height: 416px;\n  opacity: 0;\n\n  ${viewport.desk} {\n    opacity: 1;\n  }\n`;\n\nexport const SignupLink = styled(Link)`\n  color: #3e85f3;\n  line-height: calc(24 / 18);\n  text-decoration: underline;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n\n  ${viewport.mob} {\n    font-size: 12px;\n    line-height: calc(14 / 12);\n  }\n`;\n","import React from 'react';\nimport FormRegister from '../FormRegister/FormRegister';\nimport FormTitle from '../FormTitle/FormTitle';\nimport {\n  Container,\n  ContainerForm,\n  Img,\n  SignupLink,\n  Wrapper,\n} from './FormTemplate.styled';\nimport desk1x from '../../../images/register/desk@1.webp';\nimport desk2x from '../../../images/register/desk@2.webp';\n\nconst FormTemplate = () => {\n  return (\n    <Container>\n      <Img\n        srcSet={`${desk1x} 1440w, ${desk2x} 2880w,`}\n        src={desk1x}\n        alt=\"goose\"\n      />\n      <Wrapper>\n        <ContainerForm>\n          <FormTitle>Sign Up</FormTitle>\n          <FormRegister />\n        </ContainerForm>\n        <SignupLink to=\"/login\">Log In</SignupLink>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default FormTemplate;\n","import React from 'react';\n\nimport FormTemplate from 'components/Form/FormTemplate/FormTemplate';\n\nconst ComandRegister = () => {\n  return (\n    <>\n      <FormTemplate />\n    </>\n  );\n};\n\nexport default ComandRegister;\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","Span","_templateObject2","LoginIcon","_templateObject3","_ref","children","isValid","_jsxs","type","disabled","_jsx","href","icons","className","props","valid","error","_objectWithoutProperties","_excluded","Field","_objectSpread","viewport","ContainerForm","Label","css","_ref2","_templateObject4","InputContainer","_templateObject5","Input","FilteredPropsInputField","_templateObject6","_ref3","_templateObject7","_ref4","_templateObject8","StyledInlineErrorMessage","_templateObject9","StyledInlineMessage","_templateObject10","_templateObject11","Title","validationSchema","Yup","shape","name","min","required","email","password","matches","dispatch","useDispatch","Formik","initialValues","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","wrap","_context","prev","next","register","t0","console","stop","_x","_x2","apply","arguments","errors","touched","handleSubmit","Form","method","htmlFor","autoCorrect","autoComplete","placeholder","autoCapitalize","FormButton","Container","Wrapper","Img","SignupLink","Link","srcSet","concat","desk1x","desk2x","src","alt","FormTitle","FormRegister","to","_Fragment","FormTemplate"],"sourceRoot":""}