{"version":3,"file":"static/js/847.901da4f3.chunk.js","mappings":"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","sources":["components/Form/FormButton/FormButton.styled.js","components/Form/FormButton/FormButton.js","components/Form/FilteredPropsInputField.js","components/Form/FormRegister/FormRegister.styled.js","components/Form/FormTitle/FormTitle.styled.js","components/Form/FormTitle/FormTitle.js","components/Form/FormLogin/FormLogin.js","components/Form/FormTemplateLogin/FormTemplateLogin.styled.js","components/Form/FormTemplateLogin/FormTemplateLogin.js","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { light, dark } from '../../../styles/theme';\nexport const Button = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.theme === 'light' ? light.variable.buttonBg : dark.variable.buttonBg};\n  width: 100%;\n  border-radius: 16px;\n  padding: 16px;\n  border-color: none;\n  margin-top: 8px;\n  text-align: center;\n  color: ${props =>\n    props.theme === 'light' ? light.variable.textBtn : dark.variable.textBtn};\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    background-color: ${props =>\n      props.theme === 'light'\n        ? light.variable.btnColorActive\n        : dark.variable.btnColorActive};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  }\n\n  &:disabled {\n    cursor: pointer;\n    background-color: rgb(163, 168, 173);\n    box-shadow: none;\n    color: ${props =>\n      props.theme === 'light'\n        ? light.variable.btndisActive\n        : dark.variable.btnDisActive};\n\n    &:hover,\n    &:focus {\n      cursor: not-allowed;\n    }\n  }\n`;\n\nexport const Span = styled.span`\n  margin-right: 11px;\n`;\nexport const LoginIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${props =>\n    props.theme === 'light' ? light.variable.textBtn : dark.variable.textBtn};\n`;\n","import React from 'react';\nimport { Button, LoginIcon, Span } from './FormButton.styled';\nimport icons from '../../../images/icons.svg';\n\nconst FormButton = ({ children, isValid }) => {\n  return (\n    <Button type=\"submit\" disabled={!isValid}>\n      <Span> {children}</Span>\n      <LoginIcon>\n        <use href={icons + '#icon-log-in-01'}></use>\n      </LoginIcon>\n    </Button>\n  );\n};\n\nexport default FormButton;\n","import React from 'react';\nimport { Field } from 'formik';\n\nfunction FilteredPropsInputField({ className, valid, error, ...props }) {\n  return <Field className={className} {...props} />;\n}\n\nexport default FilteredPropsInputField;","import styled, { css } from 'styled-components';\nimport { light, dark } from '../../../styles/theme';\n\nimport FilteredPropsInputField from '../FilteredPropsInputField';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n  tab: '@media screen and (min-width: 768px)',\n  desk: '@media screen and (min-width: 1440px)',\n};\n\nexport const ContainerForm = styled.div`\n  width: 400px;\n  margin: 40px auto;\n  font-family: InterRegular;\n\n  ${viewport.mob} {\n    width: 287px;\n    font-size: 14px;\n    margin: 32px auto;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: InterSemiBold;\n  font-size: 14px;\n  line-height: normal;\n  width: 100%;\n\n  ${({ valid }) =>\n    valid &&\n    css`\n      color: #3cbc81;\n    `}\n\n  ${({ error }) =>\n    error &&\n    css`\n      color: #e74a3b;\n    `}\n\n    ${viewport.mob} {\n    font-size: 12px;\n  }\n`;\nexport const InputContainer = styled.div`\n  position: relative;\n`;\nexport const Input = styled(FilteredPropsInputField)`\n  background-color: ${props =>\n    props.theme === 'light'\n      ? light.variable.bgCalendar\n      : dark.variable.bgCalendar};\n  color: ${props =>\n    props.theme === 'light' ? light.variable.text : dark.variable.text};\n  border: ${props =>\n    props.theme === 'light'\n      ? light.variable.activeArrowColor\n      : dark.variable.activeArrowColor};\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 8px;\n  width: 100%;\n  margin-top: 8px;\n  margin-bottom: 24px;\n  padding: 18px;\n\n  &::placeholder {\n    color: ${props =>\n      props.theme === 'light'\n        ? light.variable.activeArrowColor\n        : dark.variable.activeArrowColor};\n    font-size: 16px;\n  }\n\n  &:focus,\n  &:active {\n    border: ${props =>\n      props.theme === 'light'\n        ? light.variable.borderUserForm\n        : dark.variable.borderUserForm};\n    outline: none;\n  }\n\n  ${({ valid }) =>\n    valid &&\n    css`\n      border: 1px solid #3cbc81;\n      margin-bottom: 8px;\n\n      &:focus,\n      &:active {\n        border: 1px solid #3cbc81;\n        outline: none;\n      }\n    `}\n\n  ${({ error }) =>\n    error &&\n    css`\n      border: 1px solid #e74a3b;\n      margin-bottom: 8px;\n      outline: none;\n\n      &:focus,\n      &:active {\n        border: 1px solid #e74a3b;\n        outline: none;\n      }\n    `}\n\n     ${viewport.mob} {\n    padding: 14px;\n  }\n`;\n\nexport const StyledInlineErrorMessage = styled.div`\n  color: #e74a3b;\n  display: block;\n  font-size: 12px;\n\n  padding-left: 16px;\n  white-space: pre-line;\n`;\nexport const StyledInlineMessage = styled.div`\n  color: #3cbc81;\n  display: block;\n  font-size: 12px;\n\n  padding-left: 16px;\n  white-space: pre-line;\n`;\n\nexport const LoginIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  bottom: 40px;\n  right: 20px;\n  overflow: visible;\n`;\n","import styled from 'styled-components';\nimport { light, dark } from '../../../styles/theme';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n};\n\nexport const Title = styled.h2`\n  color: ${props =>\n    props.theme === 'light'\n      ? light.variable.weekendTextColor\n      : dark.variable.weekendTextColor};\n  font-size: 24px;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n\n  ${viewport.mob} {\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport { Title } from './FormTitle.styled';\n\nconst FormTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport default FormTitle;\n","import React from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport icons from '../../../images/icons.svg';\n\nimport {\n  Label,\n  Input,\n  StyledInlineErrorMessage,\n  ContainerForm,\n  LoginIcon,\n  InputContainer,\n  StyledInlineMessage,\n} from '../FormRegister/FormRegister.styled';\nimport FormButton from '../FormButton/FormButton';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Please enter your email'),\n  password: Yup.string()\n    .required('Please enter your password')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nfunction FormLogin() {\n  // const [formValues, setFormValues] = useState();\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        // console.log(values);\n        // setFormValues(values);\n\n        dispatch(logIn(values));\n\n        const timeOut = setTimeout(() => {\n          actions.setSubmitting(false);\n\n          clearTimeout(timeOut);\n        }, 1000);\n      }}\n    >\n      {({ errors, touched, handleSubmit, isValid }) => {\n        return (\n          <ContainerForm>\n            <Form name=\"contact\" method=\"post\" onSubmit={handleSubmit}>\n              <InputContainer>\n                <Label\n                  htmlFor=\"email\"\n                  valid={touched.email && !errors.email}\n                  error={touched.email && errors.email}\n                >\n                  Email\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    autoCapitalize=\"off\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"email\"\n                    placeholder=\"Enter email\"\n                    valid={touched.email && !errors.email}\n                    error={touched.email && errors.email}\n                  />\n                </Label>\n                <ErrorMessage name=\"email\">\n                  {msg => (\n                    <StyledInlineErrorMessage>\n                      {msg}\n                      <LoginIcon>\n                        <use\n                          href={icons + '#icon-baseline-error-outline'}\n                        ></use>\n                      </LoginIcon>\n                    </StyledInlineErrorMessage>\n                  )}\n                </ErrorMessage>\n                {!errors.name && touched.name && (\n                  <StyledInlineMessage>\n                    This is an CORRECT email\n                    <LoginIcon>\n                      <use href={icons + '#icon-done'}></use>\n                    </LoginIcon>\n                  </StyledInlineMessage>\n                )}\n              </InputContainer>\n              <InputContainer>\n                <Label\n                  htmlFor=\"password\"\n                  valid={touched.password && !errors.password}\n                  error={touched.password && errors.password}\n                >\n                  Password\n                  <Input\n                    type=\"text\"\n                    name=\"password\"\n                    autoCorrect=\"off\"\n                    autoComplete=\"password\"\n                    placeholder=\"Enter password\"\n                    valid={touched.password && !errors.password}\n                    error={touched.password && errors.password}\n                  />\n                </Label>\n                {errors.password && touched.password && (\n                  <StyledInlineErrorMessage>\n                    {errors.password}\n                    <LoginIcon>\n                      <use href={icons + '#icon-baseline-error-outline'}></use>\n                    </LoginIcon>\n                  </StyledInlineErrorMessage>\n                )}\n              </InputContainer>\n              <FormButton isValid={isValid}>Log in</FormButton>\n            </Form>\n          </ContainerForm>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default FormLogin;\n","import styled from 'styled-components';\nimport { light, dark } from '../../../styles/theme';\nimport { Link } from 'react-router-dom';\n\nconst viewport = {\n  mob: '@media screen and (max-width: 767px)',\n  tab: '@media screen and (min-width: 768px)',\n  desk: '@media screen and (min-width: 1440px)',\n};\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: start;\n  background-color: ${props =>\n    props.theme === 'light'\n      ? light.variable.bgColorForm\n      : dark.variable.bgColorForm};\n  height: 770px;\n  font-family: InterSemiBold;\n  font-size: 18px;\n  font-style: normal;\n  line-height: calc(18 / 16);\n  color: ${props =>\n    props.theme === 'light'\n      ? light.variable.labelUserFormText\n      : dark.variable.labelUserFormText};\n`;\n\nexport const ContainerForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  width: 480px;\n  height: 424px;\n  background-color: ${props =>\n    props.theme === 'light'\n      ? light.variable.bgCalendar\n      : dark.variable.bgCalendar};\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 174px;\n  margin-bottom: 24px;\n  padding: 40px;\n  border-radius: 8px;\n\n  ${viewport.mob} {\n    margin-top: 202px;\n    width: 335px;\n    height: 376px;\n    margin-bottom: 18px;\n    padding: 40px 24px;\n  }\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  bottom: 20px;\n  right: 60px;\n  width: 368px;\n  height: 521px;\n  opacity: 0;\n\n  ${viewport.desk} {\n    opacity: 1;\n  }\n`;\n\nexport const SignupLink = styled(Link)`\n  color: ${props =>\n    props.theme === 'light'\n      ? light.variable.weekendTextColor\n      : dark.variable.weekendTextColor};\n  line-height: calc(24 / 18);\n  text-decoration: underline;\n  text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04),\n    0px 47px 355px rgba(0, 0, 0, 0.07);\n\n  ${viewport.mob} {\n    font-size: 12px;\n    line-height: calc(14 / 12);\n  }\n`;\n","import React from 'react';\nimport FormLogin from '../FormLogin/FormLogin';\nimport FormTitle from '../FormTitle/FormTitle';\nimport {\n  Container,\n  ContainerForm,\n  Img,\n  SignupLink,\n  Wrapper,\n} from './FormTemplateLogin.styled';\nimport desk1x from '../../../images/login/desk@1.webp';\nimport desk2x from '../../../images/login/desk@2.webp';\n\nconst FormTemplateLogin = () => {\n  return (\n    <Container>\n      <Img\n        srcSet={`${desk1x} 1440w, ${desk2x} 2880w,`}\n        src={desk1x}\n        alt=\"goose\"\n      />\n      <Wrapper>\n        <ContainerForm>\n          <FormTitle>Log In</FormTitle>\n          <FormLogin />\n        </ContainerForm>\n        <SignupLink to=\"/register\">Sign up</SignupLink>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default FormTemplateLogin;\n","import FormTemplateLogin from 'components/Form/FormTemplateLogin/FormTemplateLogin';\n\nexport default function Login() {\n  return (\n    <>\n      <FormTemplateLogin />\n    </>\n  );\n}\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","props","theme","light","dark","Span","_templateObject2","LoginIcon","_templateObject3","_ref","children","isValid","_jsxs","type","disabled","_jsx","href","icons","className","valid","error","_objectWithoutProperties","_excluded","Field","_objectSpread","viewport","ContainerForm","Label","css","_ref2","_templateObject4","InputContainer","_templateObject5","Input","FilteredPropsInputField","_templateObject6","_ref3","_templateObject7","_ref4","_templateObject8","StyledInlineErrorMessage","_templateObject9","StyledInlineMessage","_templateObject10","_templateObject11","Title","validationSchema","Yup","shape","email","required","password","min","matches","dispatch","useDispatch","Formik","initialValues","onSubmit","values","actions","logIn","timeOut","setTimeout","setSubmitting","clearTimeout","errors","touched","handleSubmit","Form","name","method","htmlFor","autoCapitalize","autoCorrect","autoComplete","placeholder","ErrorMessage","msg","FormButton","Container","Wrapper","Img","SignupLink","Link","srcSet","concat","desk1x","desk2x","src","alt","FormTitle","FormLogin","to","Login","_Fragment","FormTemplateLogin"],"sourceRoot":""}